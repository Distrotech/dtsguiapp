.TH "DTSTabWindowEvent" 3 "Fri Oct 11 2013" "Version 0.00" "DTS Application wxWidgets GUI Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DTSTabWindowEvent \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DTSTreeWindow\&.h>\fP
.PP
Inherits wxEvtHandler\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDTSTabWindowEvent\fP (void *userdata=NULL, \fBDTSTabWindow\fP *win=NULL)"
.br
.ti -1c
.RI "\fB~DTSTabWindowEvent\fP ()"
.br
.ti -1c
.RI "void \fBPageChange\fP (wxBookCtrlEvent &event)"
.br
.ti -1c
.RI "void \fBPageChanged\fP (wxBookCtrlEvent &event)"
.br
.ti -1c
.RI "void \fBRightMenu\fP (wxCommandEvent &event)"
.br
.ti -1c
.RI "void \fBOnButton\fP (wxCommandEvent &event)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "void * \fBdata\fP"
.br
.ti -1c
.RI "\fBDTSTabWindow\fP * \fBtw\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 136 of file DTSTreeWindow\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "DTSTabWindowEvent::DTSTabWindowEvent (void *userdata = \fCNULL\fP, \fBDTSTabWindow\fP *win = \fCNULL\fP)"

.PP
Definition at line 825 of file DTSTreeWindow\&.cpp\&.
.PP
References data, and tw\&.
.PP
.nf
                                                                      {
    if (userdata && objref(userdata)) {
        data = userdata;
    } else {
        data = NULL;
    }
    tw = win;
}
.fi
.SS "DTSTabWindowEvent::~DTSTabWindowEvent ()"

.PP
Definition at line 834 of file DTSTreeWindow\&.cpp\&.
.PP
References data\&.
.PP
.nf
                                      {
    if (data) {
        objunref(data);
    }
}
.fi
.SH "Member Function Documentation"
.PP 
.SS "void DTSTabWindowEvent::OnButton (wxCommandEvent &event)"

.PP
Definition at line 840 of file DTSTreeWindow\&.cpp\&.
.PP
References tw, DTSTabWindow::Undo(), DTSPanel::Update_XML(), wx_PANEL_EVENT_BUTTON_NO, and wx_PANEL_EVENT_BUTTON_YES\&.
.PP
Referenced by DTSTabWindow::Show()\&.
.PP
.nf
                                                      {
    DTSTabPage *pane = dynamic_cast<DTSTabPage*>(tw->GetCurrentPage());
    int eid = event\&.GetId();
    int pg = tw->GetSelection();

    switch(eid) {
        case wx_PANEL_EVENT_BUTTON_YES:
            pane->Update_XML();
        /*no break here will reload tab*/
        case wx_PANEL_EVENT_BUTTON_NO:
            pg++;
            tw->Undo(pg);
            return;
        default:
            break;
    }
    event\&.Skip(true);
}
.fi
.SS "void DTSTabWindowEvent::PageChange (wxBookCtrlEvent &event)"

.PP
Definition at line 864 of file DTSTreeWindow\&.cpp\&.
.PP
References DTSTabPage::ConfigPane(), and tw\&.
.PP
Referenced by DTSTabWindow::Show()\&.
.PP
.nf
                                                         {
    wxWindow *w;
    DTSTabPage *tp;
    int p = event\&.GetSelection();

    if (p != wxNOT_FOUND) {
        w = tw->GetPage(p);
        tp = dynamic_cast<DTSTabPage*>(w);
        tp->ConfigPane();
    }
}
.fi
.SS "void DTSTabWindowEvent::PageChanged (wxBookCtrlEvent &event)"

.PP
Definition at line 876 of file DTSTreeWindow\&.cpp\&.
.PP
References tw\&.
.PP
Referenced by DTSTabWindow::Show()\&.
.PP
.nf
                                                          {
    wxWindow *w;
    int p = event\&.GetSelection();

    if (p != wxNOT_FOUND) {
        w = tw->GetPage(p);
        w->FitInside();
        w->Layout();
        w->Refresh();
    }
}
.fi
.SS "void DTSTabWindowEvent::RightMenu (wxCommandEvent &event)"

.PP
Definition at line 860 of file DTSTreeWindow\&.cpp\&.
.PP
Referenced by DTSTabWindow::DTSTabWindow()\&.
.PP
.nf
                                                       {
    printf('MENU\n');
}
.fi
.SH "Member Data Documentation"
.PP 
.SS "void* DTSTabWindowEvent::data\fC [private]\fP"

.PP
Definition at line 145 of file DTSTreeWindow\&.h\&.
.PP
Referenced by DTSTabWindowEvent(), and ~DTSTabWindowEvent()\&.
.SS "\fBDTSTabWindow\fP* DTSTabWindowEvent::tw\fC [private]\fP"

.PP
Definition at line 146 of file DTSTreeWindow\&.h\&.
.PP
Referenced by DTSTabWindowEvent(), OnButton(), PageChange(), and PageChanged()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for DTS Application wxWidgets GUI Library from the source code\&.
