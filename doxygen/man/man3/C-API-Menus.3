.TH "C API Menu Bar Interface" 3 "Thu Oct 10 2013" "Version 0.00" "DTS Application wxWidgets GUI Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C API Menu Bar Interface \- 
.PP
C-API Menu Management\&.  

.SS "Functions"

.in +1c
.ti -1c
.RI "void \fBDTS_C_API::dtsgui_menuenable\fP (\fBdtsgui_menu\fP dm, int enable)"
.br
.RI "\fIEnable or disable all items in menu\&. \fP"
.ti -1c
.RI "\fBdtsgui_menu\fP \fBDTS_C_API::dtsgui_newmenu\fP (struct \fBdtsgui\fP *\fBdtsgui\fP, const char *name)"
.br
.RI "\fICreate a new menu and append it to the menu bar\&. \fP"
.ti -1c
.RI "\fBdtsgui_menuitem\fP \fBDTS_C_API::dtsgui_newmenuitem\fP (\fBdtsgui_menu\fP dtsmenu, struct \fBdtsgui\fP *\fBdtsgui\fP, const char *hint, \fBdtsgui_pane\fP p)"
.br
.RI "\fICreate a menu item that will activate the pane provided\&. \fP"
.ti -1c
.RI "\fBdtsgui_menuitem\fP \fBDTS_C_API::dtsgui_newmenucb\fP (\fBdtsgui_menu\fP dtsmenu, struct \fBdtsgui\fP *\fBdtsgui\fP, const char *hint, const char *name, int blank, \fBdtsgui_dynpanel\fP cb, void *data)"
.br
.RI "\fICreate a menu item that will call a function with supplied data\&. \fP"
.ti -1c
.RI "void \fBDTS_C_API::dtsgui_exit\fP (\fBdtsgui_menu\fP dtsmenu, struct \fBdtsgui\fP *\fBdtsgui\fP)"
.br
.RI "\fIAdd Menu item that will abort the app without save event been generated\&. \fP"
.ti -1c
.RI "void \fBDTS_C_API::dtsgui_close\fP (\fBdtsgui_menu\fP dtsmenu, struct \fBdtsgui\fP *\fBdtsgui\fP)"
.br
.RI "\fIAdd Menu item that will close the app after sending a save event\&. \fP"
.ti -1c
.RI "void \fBDTS_C_API::dtsgui_about\fP (\fBdtsgui_menu\fP dtsmenu, struct \fBdtsgui\fP *\fBdtsgui\fP, const char *text)"
.br
.RI "\fIAdd Menu item will pop up a 'about' box\&. \fP"
.ti -1c
.RI "void \fBDTS_C_API::dtsgui_menusep\fP (\fBdtsgui_menu\fP dtsmenu)"
.br
.RI "\fIAdd Menu seperator to the menu\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
C-API Menu Management\&. 

\fBRemarks:\fP
.RS 4
Resources controlling the menu bar in the C API\&. 
.RE
.PP

.SH "Function Documentation"
.PP 
.SS "void DTS_C_API::dtsgui_about (\fBdtsgui_menu\fPdtsmenu, struct \fBdtsgui\fP *dtsgui, const char *text)"

.PP
Add Menu item will pop up a 'about' box\&. Open an 'about' box using the text supplied\&.
.PP
\fBSee Also:\fP
.RS 4
\fBdtsgui_newmenu()\fP 
.PP
\fBDTSFrame::NewMenu()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdtsmenu\fP Menu to append about item to 
.br
\fIdtsgui\fP Application data ptr 
.br
\fItext\fP Text displayed in box when menu is selected 
.RE
.PP
\fBReturns:\fP
.RS 4
The fuction does not return\&. 
.RE
.PP

.PP
Definition at line 370 of file wrapper\&.cpp\&.
.PP
References dtsgui::GetFrame(), and DTSFrame::SetAbout()\&.
.PP
Referenced by help_menu()\&.
.SS "void DTS_C_API::dtsgui_close (\fBdtsgui_menu\fPdtsmenu, struct \fBdtsgui\fP *dtsgui)"

.PP
Add Menu item that will close the app after sending a save event\&. A menu item will be appended to the supplied menu that when selected will generate a close/save event confirmation will be requested\&.
.PP
\fBSee Also:\fP
.RS 4
\fBDTSFrame::CloseMenu()\fP 
.PP
\fBdtsgui_newmenu()\fP 
.PP
\fBDTSFrame::NewMenu()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdtsmenu\fP Menu to append item to 
.br
\fIdtsgui\fP Application data ptr 
.RE
.PP
\fBReturns:\fP
.RS 4
The fuction does not return\&. 
.RE
.PP

.PP
Definition at line 353 of file wrapper\&.cpp\&.
.PP
References DTSFrame::CloseMenu(), and dtsgui::GetFrame()\&.
.PP
Referenced by file_menu()\&.
.SS "void DTS_C_API::dtsgui_exit (\fBdtsgui_menu\fPdtsmenu, struct \fBdtsgui\fP *dtsgui)"

.PP
Add Menu item that will abort the app without save event been generated\&. A menu item will be appended to the supplied menu that when selected will generate a abort event [Alt-F4] confirmation will be requested\&.
.PP
\fBSee Also:\fP
.RS 4
\fBDTSFrame::CloseMenu()\fP 
.PP
\fBdtsgui_newmenu()\fP 
.PP
\fBDTSFrame::NewMenu()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdtsmenu\fP Menu to append item to 
.br
\fIdtsgui\fP Application data ptr 
.RE
.PP
\fBReturns:\fP
.RS 4
The fuction does not return\&. 
.RE
.PP

.PP
Definition at line 335 of file wrapper\&.cpp\&.
.PP
References DTSFrame::CloseMenu(), and dtsgui::GetFrame()\&.
.PP
Referenced by file_menu()\&.
.SS "void DTS_C_API::dtsgui_menuenable (\fBdtsgui_menu\fPdm, intenable)"

.PP
Enable or disable all items in menu\&. \fBParameters:\fP
.RS 4
\fIdm\fP Menu to enable/disable\&. 
.br
\fIenable\fP Enable all items if set to non zero\&. 
.RE
.PP

.PP
Definition at line 51 of file cxxapi\&.cpp\&.
.PP
Referenced by config_menu(), open_config(), and save_config()\&.
.SS "void DTS_C_API::dtsgui_menusep (\fBdtsgui_menu\fPdtsmenu)"

.PP
Add Menu seperator to the menu\&. A menu seperation line is appened to the menu\&.
.PP
\fBSee Also:\fP
.RS 4
\fBdtsgui_newmenu()\fP 
.PP
\fBDTSFrame::NewMenu()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdtsmenu\fP Menu to append about item to 
.RE
.PP
\fBReturns:\fP
.RS 4
The fuction does not return\&. 
.RE
.PP

.PP
Definition at line 385 of file wrapper\&.cpp\&.
.PP
Referenced by config_menu(), file_menu(), and help_menu()\&.
.SS "\fBdtsgui_menu\fP DTS_C_API::dtsgui_newmenu (struct \fBdtsgui\fP *dtsgui, const char *name)"

.PP
Create a new menu and append it to the menu bar\&. A new menu is created and appended to the menu bar the returned value will be passed to menu functions to append items to\&.
.PP
\fBSee Also:\fP
.RS 4
\fBDTSFrame::NewMenu()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdtsgui\fP Application data ptr 
.br
\fIname\fP Name of the menu\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
The fuction does not return\&. 
.RE
.PP

.PP
Definition at line 268 of file wrapper\&.cpp\&.
.PP
References dtsgui::GetFrame(), and DTSFrame::NewMenu()\&.
.PP
Referenced by config_menu(), file_menu(), and help_menu()\&.
.SS "\fBdtsgui_menuitem\fP DTS_C_API::dtsgui_newmenucb (\fBdtsgui_menu\fPdtsmenu, struct \fBdtsgui\fP *dtsgui, const char *hint, const char *name, intblank, \fBdtsgui_dynpanel\fPcb, void *data)"

.PP
Create a menu item that will call a function with supplied data\&. The specified call back will be called passing the application pointer (dtsgui), the name and data ptr supplied\&. if this function returns a \fBDTSObject\fP pane it will be displayed\&.
.PP
\fBSee Also:\fP
.RS 4
\fBDTSFrame::NewMenuItem()\fP 
.PP
\fBdtsgui_newmenu()\fP 
.PP
\fBdtsgui_dynpanel\fP 
.PP
\fBdtsgui_newmenu()\fP 
.PP
\fBDTSFrame::NewMenu()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdtsmenu\fP Menu where to put append this item\&. 
.br
\fIdtsgui\fP Application data created on application startup and returned in most callbacks\&. 
.br
\fIhint\fP Menu hint with a & indicating the highlighted short key\&. 
.br
\fIname\fP displayed on status bar and returned in callback\&. 
.br
\fIblank\fP if not zero will blank the display before executing callback\&. 
.br
\fIcb\fP Callback function to execute when selected\&. 
.br
\fIdata\fP A ptr to a referenced object\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created menu item\&. 
.RE
.PP

.PP
Definition at line 317 of file wrapper\&.cpp\&.
.PP
References dtsgui::GetFrame(), DTS_C_API::menuid, and DTSFrame::NewMenuItem()\&.
.PP
Referenced by config_menu(), and file_menu()\&.
.SS "\fBdtsgui_menuitem\fP DTS_C_API::dtsgui_newmenuitem (\fBdtsgui_menu\fPdtsmenu, struct \fBdtsgui\fP *dtsgui, const char *hint, \fBdtsgui_pane\fPp)"

.PP
Create a menu item that will activate the pane provided\&. this pane needs to be created and not deleted use of this function is discouraged\&. the callback menu function is recomended where a panel can be dynamically created and returned\&.
.PP
\fBSee Also:\fP
.RS 4
\fBDTSFrame::NewMenuItem()\fP 
.PP
\fBdtsgui_newmenucb()\fP 
.PP
\fBdtsgui_newmenu()\fP 
.PP
\fBDTSFrame::NewMenu()\fP
.RE
.PP
\fBParameters:\fP
.RS 4
\fIdtsmenu\fP Menu where to put append this item\&. 
.br
\fIdtsgui\fP Application data created on application startup and returned in most callbacks\&. 
.br
\fIhint\fP Menu hint with a & indicating the highlighted short key\&. 
.br
\fIp\fP Panel must be a derived window of \fBDTSObject\fP\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Created menu item\&. 
.RE
.PP

.PP
Definition at line 290 of file wrapper\&.cpp\&.
.PP
References dtsgui::GetFrame(), DTS_C_API::menuid, and DTSFrame::NewMenuItem()\&.
.PP
Referenced by help_menu(), and test_menu()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for DTS Application wxWidgets GUI Library from the source code\&.
