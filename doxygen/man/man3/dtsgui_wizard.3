.TH "dtsgui_wizard" 3 "Fri Oct 11 2013" "Version 0.00" "DTS Application wxWidgets GUI Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dtsgui_wizard \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DTSWizard\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDTS_OJBREF_CLASS\fP (\fBdtsgui_wizard\fP)"
.br
.ti -1c
.RI "\fBdtsgui_wizard\fP (class \fBdtsgui\fP *\fBdtsgui\fP, \fBwxWindow\fP *f, const wxString &title)"
.br
.ti -1c
.RI "\fBDTSWizardWindow\fP * \fBAddPage\fP (const char *title, struct xml_doc *xmldoc, void *userdata)"
.br
.ti -1c
.RI "int \fBRunWizard\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBwxWizard\fP * \fBwiz\fP"
.br
.ti -1c
.RI "\fBwxWizardPageSimple\fP * \fBstart\fP"
.br
.ti -1c
.RI "class \fBdtsgui\fP * \fBdtsgui\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 26 of file DTSWizard\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "dtsgui_wizard::dtsgui_wizard (class \fBdtsgui\fP *dtsgui, \fBwxWindow\fP *f, const wxString &title)"

.PP
Definition at line 38 of file DTSWizard\&.cpp\&.
.PP
References start, and wiz\&.
.PP
.nf
                                                                                   {
    if (dgui && objref(dgui)) {
        dtsgui = dgui;
        wiz = new wxWizard(f, wxID_ANY, title, wxNullBitmap, wxDefaultPosition, wxDEFAULT_DIALOG_STYLE | wxRESIZE_BORDER);
    }

    start = NULL;
}
.fi
.SH "Member Function Documentation"
.PP 
.SS "\fBDTSWizardWindow\fP * dtsgui_wizard::AddPage (const char *title, struct xml_doc *xmldoc, void *userdata)"

.PP
Definition at line 56 of file DTSWizard\&.cpp\&.
.PP
References DTSFrame::CreatePane(), dtsgui::GetFrame(), DTSPanel::SetTitle(), DTSObject::SetXMLDoc(), start, wiz, and wx_DTSPANEL_WIZARD\&.
.PP
Referenced by DTS_C_API::dtsgui_wizard_addpage()\&.
.PP
.nf
                                                                                                 {
    DTSWizardWindow *dww;
    wxWizardPageSimple *wp, *tmp;
    wxWizardPage *last;
    DTSFrame *f = dtsgui->GetFrame();

    dww = (DTSWizardWindow*)f->CreatePane(title, wxEmptyString, 0, wx_DTSPANEL_WIZARD, userdata);

    wp = dynamic_cast<wxWizardPageSimple *>(dww);
    wp->Create(wiz);

    if (title) {
        dww->SetTitle(title, true);
    }

    if (xmldoc) {
        dww->SetXMLDoc(xmldoc);
    }

    objlock(this);
    if (!start) {
        start = wp;
    } else {
        for(last = start; last->GetNext(); last=last->GetNext());

        tmp = dynamic_cast<wxWizardPageSimple*>(last);
        tmp->SetNext(wp);
        wp->SetPrev(tmp);
    }
    objunlock(this);
    return dww;
}
.fi
.SS "dtsgui_wizard::DTS_OJBREF_CLASS (\fBdtsgui_wizard\fP)"

.SS "int dtsgui_wizard::RunWizard ()"

.PP
Definition at line 89 of file DTSWizard\&.cpp\&.
.PP
References start, and wiz\&.
.PP
Referenced by DTS_C_API::dtsgui_runwizard()\&.
.PP
.nf
                             {
    wiz->GetPageAreaSizer()->Add(start);
    wiz->Center();

    return wiz->RunWizard(start);
}
.fi
.SH "Member Data Documentation"
.PP 
.SS "class \fBdtsgui\fP* dtsgui_wizard::dtsgui\fC [private]\fP"

.PP
Definition at line 35 of file DTSWizard\&.h\&.
.SS "\fBwxWizardPageSimple\fP* dtsgui_wizard::start\fC [private]\fP"

.PP
Definition at line 34 of file DTSWizard\&.h\&.
.PP
Referenced by AddPage(), dtsgui_wizard(), and RunWizard()\&.
.SS "\fBwxWizard\fP* dtsgui_wizard::wiz\fC [private]\fP"

.PP
Definition at line 33 of file DTSWizard\&.h\&.
.PP
Referenced by AddPage(), dtsgui_wizard(), and RunWizard()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for DTS Application wxWidgets GUI Library from the source code\&.
