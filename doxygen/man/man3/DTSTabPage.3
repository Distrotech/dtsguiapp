.TH "DTSTabPage" 3 "Fri Oct 11 2013" "Version 0.00" "DTS Application wxWidgets GUI Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DTSTabPage \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DTSPanel\&.h>\fP
.PP
Inherits \fBDTSScrollPanel\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDTSTabPage\fP (\fBwxBookCtrlBase\fP *, \fBDTSFrame\fP *=NULL, wxString=wxEmptyString, int=0, \fBdtsgui_tabpanel_cb\fP=NULL, void *=NULL, struct xml_doc *=NULL)"
.br
.ti -1c
.RI "\fB~DTSTabPage\fP ()"
.br
.ti -1c
.RI "void \fBConfigPane\fP ()"
.br
.ti -1c
.RI "virtual bool \fBShow\fP (bool)"
.br
.ti -1c
.RI "\fBDTSTabPage\fP & \fBoperator=\fP (const \fBDTSTabPage\fP &orig)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBdtsgui_tabpanel_cb\fP \fBcb\fP"
.br
.ti -1c
.RI "void * \fBcdata\fP"
.br
.ti -1c
.RI "bool \fBhasconfig\fP"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Definition at line 142 of file DTSPanel\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "DTSTabPage::DTSTabPage (\fBwxBookCtrlBase\fP *parent, \fBDTSFrame\fP *frame = \fCNULL\fP, wxStringstatus = \fCwxEmptyString\fP, intbutmask = \fC0\fP, \fBdtsgui_tabpanel_cb\fPc_cb = \fCNULL\fP, void *c_data = \fCNULL\fP, struct xml_doc *xmldoc = \fCNULL\fP)"

.PP
Definition at line 916 of file DTSPanel\&.cpp\&.
.PP
References cb, cdata, hasconfig, DTSPanel::SetTitle(), DTSObject::SetXMLDoc(), DTSObject::type, and wx_DTSPANEL_TAB\&.
.PP
.nf
    :wxScrolledWindow(parent, wxID_ANY),
    DTSScrollPanel(parent,frame, status, butmask) {
    type = wx_DTSPANEL_TAB;
    cb = c_cb;
    if (c_data && objref(c_data)) {
        cdata = c_data;
    } else {
        cdata = NULL;
    }
    if (xmldoc) {
        SetXMLDoc(xmldoc);
    }
    hasconfig = false;
    SetTitle(status, 1);
}
.fi
.SS "DTSTabPage::~DTSTabPage ()"

.PP
Definition at line 933 of file DTSPanel\&.cpp\&.
.PP
References cdata, and DTSObject::refobj\&.
.PP
.nf
                        {
    objlock(refobj);
    if (cdata) {
        objunref(cdata);
    }
    objunlock(refobj);
}
.fi
.SH "Member Function Documentation"
.PP 
.SS "void DTSTabPage::ConfigPane ()"

.PP
Definition at line 945 of file DTSPanel\&.cpp\&.
.PP
References cb, cdata, hasconfig, and DTSPanel::ShowPanel()\&.
.PP
Referenced by DTSTabWindowEvent::PageChange(), and DTSTabWindow::Show()\&.
.PP
.nf
                            {
    if (!hasconfig) {
        if (cb) {
            void *dat = NULL;
            if (cdata && objref(cdata)) {
                dat = cdata;
            }
            cb(this, dat);
            if (dat) {
                objunref(dat);
            }
        }
        hasconfig = true;
        ShowPanel();
    }
}
.fi
.SS "\fBDTSTabPage\fP & DTSTabPage::operator= (const \fBDTSTabPage\fP &orig)"

.PP
Definition at line 962 of file DTSPanel\&.cpp\&.
.PP
References DTSPanelEvent::BindDTSEvent(), DTSPanel::button_mask, cb, cdata, DTSObject::dtsevthandler, DTSObject::frame, DTSObject::panel, DTSObject::refobj, DTSPanel::SetTitle(), DTSObject::status, and DTSObject::xmldoc\&.
.PP
.nf
                                                        {
    DTSPanelEvent *dtsevt = (DTSPanelEvent*)dtsevthandler;

    if (this == &orig) {
        return *this;
    }

    /*deadlock avoidance*/
    objlock(orig\&.refobj);
    while(!objtrylock(this->refobj)) {
        objunlock(orig\&.refobj);
#ifdef __WIN32
        Sleep(1);
#else
        usleep(1000);
#endif
        objlock(orig\&.refobj);
    }
    button_mask = orig\&.button_mask;
    if (cdata) {
        objunref(cdata);
        cdata = NULL;
    }
    if (orig\&.cdata && objref(orig\&.cdata)) {
        cdata = orig\&.cdata;
    }
    cb = orig\&.cb;

    if (xmldoc) {
        objunref(xmldoc);
        xmldoc = NULL;
    }
    if (orig\&.xmldoc && objref(orig\&.xmldoc)) {
        xmldoc = orig\&.xmldoc;
    } else {
        xmldoc = NULL;
    }
    status = orig\&.status;
    SetTitle(status);
    panel->SetName(status);

    frame = orig\&.frame;
    if (dtsevt && frame) {
        dtsevt->BindDTSEvent(frame);
    }
    objunlock(this->refobj);
    objunlock(orig\&.refobj);
    return *this;
}
.fi
.SS "bool DTSTabPage::Show (boolshow)\fC [virtual]\fP"

.PP
Reimplemented from \fBDTSScrollPanel\fP\&.
.PP
Definition at line 941 of file DTSPanel\&.cpp\&.
.PP
.nf
                               {
    return wxScrolledWindow::Show(show);
}
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBdtsgui_tabpanel_cb\fP DTSTabPage::cb\fC [private]\fP"

.PP
Definition at line 150 of file DTSPanel\&.h\&.
.PP
Referenced by ConfigPane(), DTSTabPage(), and operator=()\&.
.SS "void* DTSTabPage::cdata\fC [private]\fP"

.PP
Definition at line 151 of file DTSPanel\&.h\&.
.PP
Referenced by ConfigPane(), DTSTabPage(), operator=(), and ~DTSTabPage()\&.
.SS "bool DTSTabPage::hasconfig\fC [private]\fP"

.PP
Definition at line 152 of file DTSPanel\&.h\&.
.PP
Referenced by ConfigPane(), and DTSTabPage()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for DTS Application wxWidgets GUI Library from the source code\&.
