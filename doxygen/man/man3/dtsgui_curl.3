.TH "dtsgui_curl" 3 "Fri Oct 11 2013" "Version 0.00" "DTS Application wxWidgets GUI Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
dtsgui_curl \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DTSApp\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDTS_OJBREF_CLASS\fP (\fBdtsgui_curl\fP)"
.br
.ti -1c
.RI "\fBdtsgui_curl\fP (class \fBdtsgui\fP *\fBdtsgui\fP)"
.br
.ti -1c
.RI "void \fBClose\fP ()"
.br
.ti -1c
.RI "\fBDTSFrame\fP * \fBGetFrame\fP ()"
.br
.in -1c
.SS "Static Private Member Functions"

.in +1c
.ti -1c
.RI "static struct basic_auth * \fBCurlPasswd\fP (const char *user, const char *passwd, void *data)"
.br
.ti -1c
.RI "static void * \fBcurl_startprogress\fP (void *data)"
.br
.ti -1c
.RI "static void \fBcurl_progress_ctrl\fP (void *data, int pause)"
.br
.ti -1c
.RI "static int \fBcurl_progress_function\fP (void *data, double dltotal, double dlnow, double ultotal, double ulnow)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "class \fBDTSFrame\fP * \fBframe\fP"
.br
.ti -1c
.RI "int \fBcurl\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 42 of file DTSApp\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "dtsgui_curl::dtsgui_curl (class \fBdtsgui\fP *dtsgui)"

.PP
Definition at line 141 of file DTSApp\&.cpp\&.
.PP
References curl, curl_progress_ctrl(), curl_progress_function(), curl_startprogress(), CurlPasswd(), frame, and dtsgui::GetFrame()\&.
.PP
.nf
                                             {
    frame = dtsgui->GetFrame();

    curl = curlinit();
    curl_setprogress(curl_progress_function, curl_progress_ctrl, curl_startprogress, dtsgui);
    curl_setauth_cb(CurlPasswd, this);
}
.fi
.SH "Member Function Documentation"
.PP 
.SS "void dtsgui_curl::Close ()"

.PP
Definition at line 154 of file DTSApp\&.cpp\&.
.PP
References curl\&.
.PP
.nf
                        {
    if (curl) {
        curlclose();
        curl = 0;
    }
}
.fi
.SS "void dtsgui_curl::curl_progress_ctrl (void *data, intpause)\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 194 of file DTSApp\&.cpp\&.
.PP
References DTSFrame::EndProgress(), curl_progress::GetFrame(), curl_progress::pause, and curl_progress::pd\&.
.PP
Referenced by dtsgui_curl()\&.
.PP
.nf
                                                          {
    class curl_progress *cp = (class curl_progress*)data;
    DTSFrame *f = cp->GetFrame();

    switch(pause) {
        case 0:
            cp->pause = pause;
            break;
        case 1:
            f->EndProgress();
            cp->pause = pause;
            cp->pd = 0;
            break;
        case -1:
            if (cp->pd) {
                f->EndProgress();
            }
            objunref(cp);
            break;
    }
}
.fi
.SS "int dtsgui_curl::curl_progress_function (void *data, doubledltotal, doubledlnow, doubleultotal, doubleulnow)\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 168 of file DTSApp\&.cpp\&.
.PP
References curl_progress::GetFrame(), curl_progress::pause, curl_progress::pd, DTSFrame::StartProgress(), and DTSFrame::UpdateProgress()\&.
.PP
Referenced by dtsgui_curl()\&.
.PP
.nf
                                                                                                              {
    class curl_progress *cp = (class curl_progress*)data;
    DTSFrame *f;
    int val, tot, cur;

    if (!cp || cp->pause || !(f = cp->GetFrame())) {
        return 0;
    }

    tot = dltotal+ultotal;
    cur = ulnow+dlnow;

    val = (tot && cur) ? (1000/tot) * cur : 0;
    val = ceil(val);

    if (!cp->pd) {
        cp->pd = f->StartProgress('Web Transfer Progress', 1000, 1);
    };

    if (cp->pd && val && !f->UpdateProgress(val, wxEmptyString)) {
        return 1;
    }

    return 0;
}
.fi
.SS "void * dtsgui_curl::curl_startprogress (void *data)\fC [static]\fP, \fC [private]\fP"

.PP
Definition at line 162 of file DTSApp\&.cpp\&.
.PP
Referenced by dtsgui_curl()\&.
.PP
.nf
                                                {
    class dtsgui_curl *dc = (class dtsgui_curl*)data;

    return new class curl_progress(dc);
}
.fi
.SS "struct basic_auth * dtsgui_curl::CurlPasswd (const char *user, const char *passwd, void *data)\fC [static]\fP, \fC [read]\fP, \fC [private]\fP"

.PP
Definition at line 216 of file DTSApp\&.cpp\&.
.PP
References frame, and DTSFrame::Passwd()\&.
.PP
Referenced by dtsgui_curl()\&.
.PP
.nf
                                                                                           {
    class dtsgui_curl *dc = (class dtsgui_curl*)data;
    class DTSFrame *f = dc->frame;

    return f->Passwd(user, passwd);
}
.fi
.SS "dtsgui_curl::DTS_OJBREF_CLASS (\fBdtsgui_curl\fP)"

.SS "\fBDTSFrame\fP * dtsgui_curl::GetFrame (void)"

.PP
Definition at line 223 of file DTSApp\&.cpp\&.
.PP
References frame\&.
.PP
.nf
                                {
    return frame;
}
.fi
.SH "Member Data Documentation"
.PP 
.SS "int dtsgui_curl::curl\fC [private]\fP"

.PP
Definition at line 54 of file DTSApp\&.h\&.
.PP
Referenced by Close(), dtsgui_curl(), DTSApp::OnInit(), and DTSApp::~DTSApp()\&.
.SS "class \fBDTSFrame\fP* dtsgui_curl::frame\fC [private]\fP"

.PP
Definition at line 53 of file DTSApp\&.h\&.
.PP
Referenced by CurlPasswd(), dtsgui_curl(), and GetFrame()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for DTS Application wxWidgets GUI Library from the source code\&.
