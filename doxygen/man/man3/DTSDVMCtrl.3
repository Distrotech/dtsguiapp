.TH "DTSDVMCtrl" 3 "Fri Oct 11 2013" "Version 0.00" "DTS Application wxWidgets GUI Library" \" -*- nroff -*-
.ad l
.nh
.SH NAME
DTSDVMCtrl \- 
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <DTSListView\&.h>\fP
.PP
Inherits wxDataViewCtrl\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBDTSDVMCtrl\fP ()"
.br
.ti -1c
.RI "\fBDTSDVMCtrl\fP (\fBwxWindow\fP *parent, wxWindowID id=wxID_ANY, \fBDTSDVMListView\fP *\fBmodel\fP=NULL, const wxPoint &pos=wxDefaultPosition, const wxSize &size=wxDefaultSize, long style=wxDV_ROW_LINES, const wxValidator &validator=wxDefaultValidator)"
.br
.ti -1c
.RI "\fB~DTSDVMCtrl\fP ()"
.br
.ti -1c
.RI "virtual bool \fBAssociateModel\fP (\fBDTSDVMListView\fP *\fBmodel\fP)"
.br
.ti -1c
.RI "void \fBSort\fP (const wxDataViewItem &parent)"
.br
.ti -1c
.RI "\fBDTSDVMListView\fP * \fBGetStore\fP ()"
.br
.ti -1c
.RI "wxDataViewItem \fBAppendItem\fP (wxDataViewItem parent, const wxString &title, bool can_edit=true, bool can_sort=true, bool can_del=false, int nodeid=-1, \fBdtsgui_treeviewpanel_cb\fP p_cb=NULL, void *userdata=NULL)"
.br
.ti -1c
.RI "wxDataViewItem \fBAppendContainer\fP (wxDataViewItem parent, const wxString &title, bool can_edit=true, bool can_sort=true, bool can_del=false, int nodeid=-1, \fBdtsgui_treeviewpanel_cb\fP p_cb=NULL, void *userdata=NULL)"
.br
.in -1c
.SS "Private Member Functions"

.in +1c
.ti -1c
.RI "wxDataViewItem \fBAppendNode\fP (wxDataViewItem parent, const wxString &title, bool iscont, bool can_edit=true, bool can_sort=true, bool can_del=false, int nodeid=-1, \fBdtsgui_treeviewpanel_cb\fP p_cb=NULL, void *userdata=NULL)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "\fBDTSDVMListView\fP * \fBmodel\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Definition at line 105 of file DTSListView\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "DTSDVMCtrl::DTSDVMCtrl ()"

.PP
Definition at line 551 of file DTSListView\&.cpp\&.
.PP
References model\&.
.PP
.nf
                       {
    model = NULL;
}
.fi
.SS "DTSDVMCtrl::DTSDVMCtrl (\fBwxWindow\fP *parent, wxWindowIDid = \fCwxID_ANY\fP, \fBDTSDVMListView\fP *model = \fCNULL\fP, const wxPoint &pos = \fCwxDefaultPosition\fP, const wxSize &size = \fCwxDefaultSize\fP, longstyle = \fCwxDV_ROW_LINES\fP, const wxValidator &validator = \fCwxDefaultValidator\fP)"

.PP
Definition at line 555 of file DTSListView\&.cpp\&.
.PP
References AssociateModel()\&.
.PP
.nf
                                                                                                                                                               {
    wxDataViewTextRenderer *col0_r;
    wxDataViewColumn *col0;

    this->model = NULL;
    Create(parent, id, pos, size, style, validator);
    if (model) {
        AssociateModel(model);
    }

    col0_r = new wxDataViewTextRenderer('string', wxDATAVIEW_CELL_EDITABLE);
#ifndef _WIN32
    col0_r->DisableEllipsize();
#endif //_WIN32
    col0 = new wxDataViewColumn('Title', col0_r, 0);
#ifndef _WIN32
    col0->SetWidth(wxCOL_WIDTH_AUTOSIZE);
#endif // _WIN32
    col0->SetFlags(wxCOL_RESIZABLE | wxCOL_REORDERABLE);
    col0->SetReorderable(true);
    col0->SetAlignment(wxALIGN_LEFT);
    AppendColumn(col0);
#ifdef _WIN32
    SetRowHeight(17);
#endif // _WIN32
}
.fi
.SS "DTSDVMCtrl::~DTSDVMCtrl ()"

.PP
Definition at line 582 of file DTSListView\&.cpp\&.
.PP
References DTSDVMListView::DeleteAll(), and model\&.
.PP
.nf
                        {
    model->DeleteAll();
}
.fi
.SH "Member Function Documentation"
.PP 
.SS "wxDataViewItem DTSDVMCtrl::AppendContainer (wxDataViewItemparent, const wxString &title, boolcan_edit = \fCtrue\fP, boolcan_sort = \fCtrue\fP, boolcan_del = \fCfalse\fP, intnodeid = \fC-1\fP, \fBdtsgui_treeviewpanel_cb\fPp_cb = \fCNULL\fP, void *userdata = \fCNULL\fP)"

.PP
Definition at line 612 of file DTSListView\&.cpp\&.
.PP
References AppendNode()\&.
.PP
Referenced by DTS_C_API::dtsgui_treecont(), and tree_newnode::handle_newtreenode()\&.
.PP
.nf
                                                                                                                                                                                             {
    return AppendNode(parent, title, true, can_edit, can_sort, can_del, nodeid, p_cb, userdata);
}
.fi
.SS "wxDataViewItem DTSDVMCtrl::AppendItem (wxDataViewItemparent, const wxString &title, boolcan_edit = \fCtrue\fP, boolcan_sort = \fCtrue\fP, boolcan_del = \fCfalse\fP, intnodeid = \fC-1\fP, \fBdtsgui_treeviewpanel_cb\fPp_cb = \fCNULL\fP, void *userdata = \fCNULL\fP)"

.PP
Definition at line 608 of file DTSListView\&.cpp\&.
.PP
References AppendNode()\&.
.PP
Referenced by DTS_C_API::dtsgui_treeitem(), and tree_newnode::handle_newtreenode()\&.
.PP
.nf
                                                                                                                                                                                        {
    return AppendNode(parent, title, false, can_edit, can_sort, can_del, nodeid, p_cb, userdata);
}
.fi
.SS "wxDataViewItem DTSDVMCtrl::AppendNode (wxDataViewItemparent, const wxString &title, booliscont, boolcan_edit = \fCtrue\fP, boolcan_sort = \fCtrue\fP, boolcan_del = \fCfalse\fP, intnodeid = \fC-1\fP, \fBdtsgui_treeviewpanel_cb\fPp_cb = \fCNULL\fP, void *userdata = \fCNULL\fP)\fC [private]\fP"

.PP
Definition at line 616 of file DTSListView\&.cpp\&.
.PP
References DTSDVMListStore::Append(), DTSDVMListStore::can_delete, DTSDVMListStore::can_edit, DTSDVMListStore::can_sort, DTSDVMListView::GetRoot(), model, and DTSDVMListView::SetRoot()\&.
.PP
Referenced by AppendContainer(), and AppendItem()\&.
.PP
.nf
                                                                                                                                                                                                     {
    DTSDVMListStore *li, *node;
    wxDataViewItem dvi;

    if (!parent\&.IsOk() && !model->GetRoot()) {
        li = model->SetRoot(title, nodeid, p_cb, userdata);
    } else if (!(node = (DTSDVMListStore*)parent\&.GetID())) {
        return wxDataViewItem(NULL);
    } else {
        li= new DTSDVMListStore(node, iscont, title, nodeid, p_cb, userdata);
        node->Append(li);
    }

    li->can_delete = can_del;
    li->can_edit = can_edit;
    li->can_sort = can_sort;

    dvi = wxDataViewItem(li);
    model->ItemAdded(parent, dvi);
    return dvi;
}
.fi
.SS "bool DTSDVMCtrl::AssociateModel (\fBDTSDVMListView\fP *model)\fC [virtual]\fP"

.PP
Definition at line 586 of file DTSListView\&.cpp\&.
.PP
References DTSDVMListView::DeleteAll(), and model\&.
.PP
Referenced by DTSDVMCtrl()\&.
.PP
.nf
                                                     {
    bool res;

    res = wxDataViewCtrl::AssociateModel(model);
    if (res) {
        if (this->model) {
            model->DeleteAll();
        }
        this->model = model;
        model->DecRef();
    }
    return res;
}
.fi
.SS "\fBDTSDVMListView\fP * DTSDVMCtrl::GetStore ()"

.PP
Definition at line 604 of file DTSListView\&.cpp\&.
.PP
References model\&.
.PP
Referenced by DTSTreeWindowEvent::DTSTreeWindowEvent(), and DTSTreeWindow::Show()\&.
.PP
.nf
                                     {
    return model;
}
.fi
.SS "void DTSDVMCtrl::Sort (const wxDataViewItem &parent)"

.PP
Definition at line 600 of file DTSListView\&.cpp\&.
.PP
References model, and DTSDVMListView::SortChildren()\&.
.PP
.nf
                                                  {
    model->SortChildren(parent);
}
.fi
.SH "Member Data Documentation"
.PP 
.SS "\fBDTSDVMListView\fP* DTSDVMCtrl::model\fC [private]\fP"

.PP
Definition at line 118 of file DTSListView\&.h\&.
.PP
Referenced by AppendNode(), AssociateModel(), DTSDVMCtrl(), GetStore(), Sort(), and ~DTSDVMCtrl()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for DTS Application wxWidgets GUI Library from the source code\&.
