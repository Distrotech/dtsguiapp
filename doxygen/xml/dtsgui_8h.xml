<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="dtsgui_8h" kind="file">
    <compoundname>dtsgui.h</compoundname>
    <includes local="no">stdint.h</includes>
    <includes local="no">dtsapp.h</includes>
    <includedby refid="config_8c" local="yes">app/config.c</includedby>
    <includedby refid="interface_8c" local="yes">app/interface.c</includedby>
    <includedby refid="netconfig_8c" local="yes">app/netconfig.c</includedby>
    <includedby refid="pbxconfig_8c" local="yes">app/pbxconfig.c</includedby>
    <includedby refid="testing_8c" local="yes">app/testing.c</includedby>
    <includedby refid="toolbar_8cpp" local="yes">app/toolbar.cpp</includedby>
    <includedby refid="wizard_8c" local="yes">app/wizard.c</includedby>
    <includedby refid="wxforms_8c" local="yes">app/wxforms.c</includedby>
    <includedby refid="cxxapi_8cpp" local="yes">src/cxxapi.cpp</includedby>
    <includedby refid="_d_t_s_app_8cpp" local="yes">src/DTSApp.cpp</includedby>
    <includedby refid="_d_t_s_frame_8cpp" local="yes">src/DTSFrame.cpp</includedby>
    <includedby refid="_d_t_s_list_view_8cpp" local="yes">src/DTSListView.cpp</includedby>
    <includedby refid="_d_t_s_panel_8cpp" local="yes">src/DTSPanel.cpp</includedby>
    <includedby refid="_d_t_s_tree_window_8cpp" local="yes">src/DTSTreeWindow.cpp</includedby>
    <includedby refid="_d_t_s_wizard_8cpp" local="yes">src/DTSWizard.cpp</includedby>
    <includedby refid="_d_t_s_x_m_l_combo_box_8cpp" local="yes">src/DTSXMLComboBox.cpp</includedby>
    <includedby refid="evdata_8cpp" local="yes">src/evdata.cpp</includedby>
    <includedby refid="pitems_8cpp" local="yes">src/pitems.cpp</includedby>
    <includedby refid="wrapper_8cpp" local="yes">src/wrapper.cpp</includedby>
    <incdepgraph>
      <node id="233">
        <label>stdint.h</label>
      </node>
      <node id="232">
        <label>src/include/dtsgui.h</label>
        <link refid="dtsgui.h"/>
        <childnode refid="233" relation="include">
        </childnode>
        <childnode refid="234" relation="include">
        </childnode>
      </node>
      <node id="234">
        <label>dtsapp.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="246">
        <label>src/DTSFrame.cpp</label>
        <link refid="_d_t_s_frame_8cpp"/>
      </node>
      <node id="254">
        <label>src/wrapper.cpp</label>
        <link refid="wrapper_8cpp"/>
      </node>
      <node id="243">
        <label>app/wxforms.c</label>
        <link refid="wxforms_8c"/>
      </node>
      <node id="240">
        <label>app/testing.c</label>
        <link refid="testing_8c"/>
      </node>
      <node id="253">
        <label>src/pitems.cpp</label>
        <link refid="pitems_8cpp"/>
      </node>
      <node id="252">
        <label>src/evdata.cpp</label>
        <link refid="evdata_8cpp"/>
      </node>
      <node id="238">
        <label>app/netconfig.c</label>
        <link refid="netconfig_8c"/>
      </node>
      <node id="239">
        <label>app/pbxconfig.c</label>
        <link refid="pbxconfig_8c"/>
      </node>
      <node id="251">
        <label>src/DTSXMLComboBox.cpp</label>
        <link refid="_d_t_s_x_m_l_combo_box_8cpp"/>
      </node>
      <node id="249">
        <label>src/DTSTreeWindow.cpp</label>
        <link refid="_d_t_s_tree_window_8cpp"/>
      </node>
      <node id="236">
        <label>app/config.c</label>
        <link refid="config_8c"/>
      </node>
      <node id="245">
        <label>src/DTSApp.cpp</label>
        <link refid="_d_t_s_app_8cpp"/>
      </node>
      <node id="241">
        <label>app/toolbar.cpp</label>
        <link refid="toolbar_8cpp"/>
      </node>
      <node id="250">
        <label>src/DTSWizard.cpp</label>
        <link refid="_d_t_s_wizard_8cpp"/>
      </node>
      <node id="235">
        <label>src/include/dtsgui.h</label>
        <link refid="dtsgui.h"/>
        <childnode refid="236" relation="include">
        </childnode>
        <childnode refid="237" relation="include">
        </childnode>
        <childnode refid="238" relation="include">
        </childnode>
        <childnode refid="239" relation="include">
        </childnode>
        <childnode refid="240" relation="include">
        </childnode>
        <childnode refid="241" relation="include">
        </childnode>
        <childnode refid="242" relation="include">
        </childnode>
        <childnode refid="243" relation="include">
        </childnode>
        <childnode refid="244" relation="include">
        </childnode>
        <childnode refid="245" relation="include">
        </childnode>
        <childnode refid="246" relation="include">
        </childnode>
        <childnode refid="247" relation="include">
        </childnode>
        <childnode refid="248" relation="include">
        </childnode>
        <childnode refid="249" relation="include">
        </childnode>
        <childnode refid="250" relation="include">
        </childnode>
        <childnode refid="251" relation="include">
        </childnode>
        <childnode refid="252" relation="include">
        </childnode>
        <childnode refid="253" relation="include">
        </childnode>
        <childnode refid="254" relation="include">
        </childnode>
      </node>
      <node id="247">
        <label>src/DTSListView.cpp</label>
        <link refid="_d_t_s_list_view_8cpp"/>
      </node>
      <node id="248">
        <label>src/DTSPanel.cpp</label>
        <link refid="_d_t_s_panel_8cpp"/>
      </node>
      <node id="237">
        <label>app/interface.c</label>
        <link refid="interface_8c"/>
      </node>
      <node id="244">
        <label>src/cxxapi.cpp</label>
        <link refid="cxxapi_8cpp"/>
      </node>
      <node id="242">
        <label>app/wizard.c</label>
        <link refid="wizard_8c"/>
      </node>
    </invincdepgraph>
    <innerclass refid="structpoint" prot="public">point</innerclass>
      <sectiondef kind="define">
      <memberdef kind="define" id="dtsgui_8h_1abcf9e451a313490d78549227e6dc8824" prot="public" static="no">
        <name>wx_PANEL_BUTTON_NAV</name>
        <initializer><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca332b4d1a5e1ae1425b5f77c49edd311c" kindref="member">wx_PANEL_EVENT_BUTTON_FIRST</ref> | <ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca5092915b2da9df3365a956562b3d3663" kindref="member">wx_PANEL_EVENT_BUTTON_BACK</ref> | <ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca95b3613970d7acac3b1b3f4adbebf186" kindref="member">wx_PANEL_EVENT_BUTTON_FWD</ref> | <ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecaff2d58b46c16f29654d00ae290e25a63" kindref="member">wx_PANEL_EVENT_BUTTON_LAST</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="135" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="135" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dtsgui_8h_1aa7fc68a1ddb9112dbbbfe2ae26e2e379" prot="public" static="no">
        <name>wx_PANEL_BUTTON_DIR</name>
        <initializer><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca5092915b2da9df3365a956562b3d3663" kindref="member">wx_PANEL_EVENT_BUTTON_BACK</ref> | <ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca95b3613970d7acac3b1b3f4adbebf186" kindref="member">wx_PANEL_EVENT_BUTTON_FWD</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="136" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dtsgui_8h_1a4ef37ee1286eb68a9f5663813f134be2" prot="public" static="no">
        <name>wx_PANEL_BUTTON_ACTION</name>
        <initializer><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca6ce91176e6c929e87d7acbd000d07f79" kindref="member">wx_PANEL_EVENT_BUTTON_YES</ref> | <ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecadb8742f8472eb90558cfbf8e3914553b" kindref="member">wx_PANEL_EVENT_BUTTON_NO</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="137" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="137" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dtsgui_8h_1a6fd6c8004323d4605940ac5fb2ff9c9b" prot="public" static="no">
        <name>wx_PANEL_BUTTON_ALL</name>
        <initializer><ref refid="dtsgui_8h_1a4ef37ee1286eb68a9f5663813f134be2" kindref="member">wx_PANEL_BUTTON_ACTION</ref> | <ref refid="dtsgui_8h_1abcf9e451a313490d78549227e6dc8824" kindref="member">wx_PANEL_BUTTON_NAV</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="138" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="138" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="dtsgui_8h_1a655f2051956468f6592bef486573e424" prot="public" static="no">
        <name>wx_PANEL_EVENT_BUTTON_NONE</name>
        <initializer>0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="139" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="139" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368" prot="public" static="no">
        <name>tree_cbtype</name>
        <enumvalue id="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368adac89e1845cacd5358022cbc20aba1a9" prot="public">
          <name>DTSGUI_TREE_CB_SELECT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368a95978182db76e342ba406456dc935258" prot="public">
          <name>DTSGUI_TREE_CB_DELETE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368a629392b319c09bfdb44b638c858381e8" prot="public">
          <name>DTSGUI_TREE_CB_EDIT</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="58" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="58" bodyend="62"/>
      </memberdef>
      <memberdef kind="enum" id="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9" prot="public" static="no">
        <name>form_data_type</name>
        <enumvalue id="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" prot="public">
          <name>DTSGUI_FORM_DATA_PTR</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9a5c592b75994135a5de470f79e40aafda" prot="public">
          <name>DTSGUI_FORM_DATA_XML</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="64" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="64" bodyend="67"/>
      </memberdef>
      <memberdef kind="enum" id="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" prot="public" static="no">
        <name>panel_buttons</name>
        <enumvalue id="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca332b4d1a5e1ae1425b5f77c49edd311c" prot="public">
          <name>wx_PANEL_EVENT_BUTTON_FIRST</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca5092915b2da9df3365a956562b3d3663" prot="public">
          <name>wx_PANEL_EVENT_BUTTON_BACK</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca95b3613970d7acac3b1b3f4adbebf186" prot="public">
          <name>wx_PANEL_EVENT_BUTTON_FWD</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecaff2d58b46c16f29654d00ae290e25a63" prot="public">
          <name>wx_PANEL_EVENT_BUTTON_LAST</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca6ce91176e6c929e87d7acbd000d07f79" prot="public">
          <name>wx_PANEL_EVENT_BUTTON_YES</name>
          <initializer>= 1 &lt;&lt; 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecadb8742f8472eb90558cfbf8e3914553b" prot="public">
          <name>wx_PANEL_EVENT_BUTTON_NO</name>
          <initializer>= 1 &lt;&lt; 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="95" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="95" bodyend="102"/>
      </memberdef>
      <memberdef kind="enum" id="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6" prot="public" static="no">
        <name>panel_events</name>
        <enumvalue id="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a331937b86eb259d1d84728d28fbed79d" prot="public">
          <name>wx_PANEL_EVENT_BUTTON</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a05cb2a662e44a9332f631e8fb04ea5ef" prot="public">
          <name>wx_PANEL_EVENT_COMBO_ENTER</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a9d9853f83e3e28aaca0621c788994cc8" prot="public">
          <name>wx_PANEL_EVENT_COMBO_UPDATE</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a8f700b4b2b17b782d57dd32dc696956c" prot="public">
          <name>wx_PANEL_EVENT_DTS</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="104" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="104" bodyend="109"/>
      </memberdef>
      <memberdef kind="enum" id="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898" prot="public" static="no">
        <name>tree_newnode_flags</name>
        <enumvalue id="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a92d0796e80ba757f7f74979253423b98" prot="public">
          <name>DTS_TREE_NEW_NODE_EDIT</name>
          <initializer>= 1 &lt;&lt; 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a09bf4479510d6996e8c2d0e3cd27c714" prot="public">
          <name>DTS_TREE_NEW_NODE_DELETE</name>
          <initializer>= 1 &lt;&lt; 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a67752f3ce4c088a226eb85e1f2369532" prot="public">
          <name>DTS_TREE_NEW_NODE_CONTAINER</name>
          <initializer>= 1 &lt;&lt; 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898ab4026cda71b1fb600c8af942c1194e99" prot="public">
          <name>DTS_TREE_NEW_NODE_SORT</name>
          <initializer>= 1 &lt;&lt; 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="111" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="111" bodyend="116"/>
      </memberdef>
      <memberdef kind="enum" id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" prot="public" static="no">
        <name>panel_type</name>
        <enumvalue id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373ad0213b4d1d51e9f04e084a09e8da1c62" prot="public">
          <name>wx_DTSPANEL_WINDOW</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a0e31c26466ea939007976914785fff2c" prot="public">
          <name>wx_DTSPANEL_PANEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a51268d1576c4e816f1416435cfe61500" prot="public">
          <name>wx_DTSPANEL_SCROLLPANEL</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a259d19ace1b7a45cbd7e99697bd2b69a" prot="public">
          <name>wx_DTSPANEL_DIALOG</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a8aa14d05cc73bd9438f302f6f2cb29c3" prot="public">
          <name>wx_DTSPANEL_TREE</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373aa108fde55f9c1830cf68cd368aba1d02" prot="public">
          <name>wx_DTSPANEL_WIZARD</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a94b4b5412dbd78fdf58517c74afa9dad" prot="public">
          <name>wx_DTSPANEL_TAB</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="118" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="118" bodyend="126"/>
      </memberdef>
      <memberdef kind="enum" id="dtsgui_8h_1afd296180392ef5681415b9fb0590be84" prot="public" static="no">
        <name>widget_type</name>
        <enumvalue id="dtsgui_8h_1afd296180392ef5681415b9fb0590be84a30946b987fd9b1a681425eb86c33b836" prot="public">
          <name>DTS_WIDGET_TEXTBOX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1afd296180392ef5681415b9fb0590be84af8b07c907089ef8cf8534af437682a28" prot="public">
          <name>DTS_WIDGET_CHECKBOX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1afd296180392ef5681415b9fb0590be84a617d0a94e82cae830c769b66b1751b9a" prot="public">
          <name>DTS_WIDGET_LISTBOX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <enumvalue id="dtsgui_8h_1afd296180392ef5681415b9fb0590be84ad091872a88b66595cb453008b03565cc" prot="public">
          <name>DTS_WIDGET_COMBOBOX</name>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="128" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="128" bodyend="133"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="dtsgui_8h_1a8d0ed2b4049e42079b366e341b33347f" prot="public" static="no">
        <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref></type>
        <definition>typedef struct dtsgui dtsgui</definition>
        <argsstring></argsstring>
        <name>dtsgui</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="38" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a00d1631dc45e8a99d361b5091856abe3" prot="public" static="no">
        <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref></type>
        <definition>typedef struct dtsgui_wizard dtsgui_wizard</definition>
        <argsstring></argsstring>
        <name>dtsgui_wizard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="39" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_menu</definition>
        <argsstring></argsstring>
        <name>dtsgui_menu</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="42" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="42" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1af59302244664352117c2669055da5850" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_menuitem</definition>
        <argsstring></argsstring>
        <name>dtsgui_menuitem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="43" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="43" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_pane</definition>
        <argsstring></argsstring>
        <name>dtsgui_pane</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="46" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="46" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a698d08e25e0df56af6ba94c8056bdd97" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_notebook</definition>
        <argsstring></argsstring>
        <name>dtsgui_notebook</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="47" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="47" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_treeview</definition>
        <argsstring></argsstring>
        <name>dtsgui_treeview</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="48" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="48" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_tabview</definition>
        <argsstring></argsstring>
        <name>dtsgui_tabview</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="49" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="49" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_treenode</definition>
        <argsstring></argsstring>
        <name>dtsgui_treenode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="51" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="51" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a531b61ccda025272407e2d2b26f0072c" prot="public" static="no">
        <type>void *</type>
        <definition>typedef void* dtsgui_progress</definition>
        <argsstring></argsstring>
        <name>dtsgui_progress</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="52" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1abbf6decd0bf8428c296f4adcafed46fb" prot="public" static="no">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref></type>
        <definition>typedef struct form_item form_item</definition>
        <argsstring></argsstring>
        <name>form_item</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="55" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="55" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1aa881f6b55dcf9b95108f08bf62d4802f" prot="public" static="no">
        <type>struct <ref refid="classdynamic__panel" kindref="compound">dynamic_panel</ref></type>
        <definition>typedef struct dynamic_panel dynamic_panel</definition>
        <argsstring></argsstring>
        <name>dynamic_panel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="56" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* dtsgui_configcb)(struct dtsgui *, void *)</definition>
        <argsstring>)(struct dtsgui *, void *)</argsstring>
        <name>dtsgui_configcb</name>
        <briefdescription>
<para>Callback called on application execution. </para>        </briefdescription>
        <detaileddescription>
<para>The callback is called with the application pointer and supplied userdata</para><para>Returning 0 will cause application execution to fail. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="78" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="78" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a0d655090fad451700b01ffc4b0bdd727" prot="public" static="no">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref>(*</type>
        <definition>typedef dtsgui_pane(* dtsgui_menucb)(struct dtsgui *, void *)</definition>
        <argsstring>)(struct dtsgui *, void *)</argsstring>
        <name>dtsgui_menucb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="79" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="79" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" prot="public" static="no">
        <type>int(*</type>
        <definition>typedef int(* event_callback)(struct dtsgui *, dtsgui_pane, int, int, void *)</definition>
        <argsstring>)(struct dtsgui *, dtsgui_pane, int, int, void *)</argsstring>
        <name>event_callback</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="80" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="80" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" prot="public" static="no">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref>(*</type>
        <definition>typedef dtsgui_pane(* dtsgui_dynpanel)(struct dtsgui *, const char *, void *)</definition>
        <argsstring>)(struct dtsgui *, const char *, void *)</argsstring>
        <name>dtsgui_dynpanel</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="81" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" prot="public" static="no">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref>(*</type>
        <definition>typedef dtsgui_pane(* dtsgui_tree_cb)(struct dtsgui *, dtsgui_treeview, dtsgui_treenode, enum tree_cbtype cb_type, const char *, void *)</definition>
        <argsstring>)(struct dtsgui *, dtsgui_treeview, dtsgui_treenode, enum tree_cbtype cb_type, const char *, void *)</argsstring>
        <name>dtsgui_tree_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="82" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a52992645e33e4d92c8e68c3490239c75" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dtsgui_xmltreenode_cb)(dtsgui_treeview, dtsgui_treenode, struct xml_node *, void *)</definition>
        <argsstring>)(dtsgui_treeview, dtsgui_treenode, struct xml_node *, void *)</argsstring>
        <name>dtsgui_xmltreenode_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="83" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dtsgui_treeviewpanel_cb)(dtsgui_pane, dtsgui_treeview, dtsgui_treenode, void *)</definition>
        <argsstring>)(dtsgui_pane, dtsgui_treeview, dtsgui_treenode, void *)</argsstring>
        <name>dtsgui_treeviewpanel_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="84" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dtsgui_tabpanel_cb)(dtsgui_pane, void *)</definition>
        <argsstring>)(dtsgui_pane, void *)</argsstring>
        <name>dtsgui_tabpanel_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="85" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1a53eefce4ace6a7d72e49e9ae4c520226" prot="public" static="no">
        <type>void *(*</type>
        <definition>typedef void*(* dtsgui_toolbar_create)(struct dtsgui *, void *, long, int, const char *, void *data)</definition>
        <argsstring>)(struct dtsgui *, void *, long, int, const char *, void *data)</argsstring>
        <name>dtsgui_toolbar_create</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="86" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="dtsgui_8h_1ab5e1fa276d48b20d35f4ef20110c39ed" prot="public" static="no">
        <type>void(*</type>
        <definition>typedef void(* dtsgui_tabpane_newdata_cb)(struct xml_doc *, struct xml_node *, void *, void **, int *)</definition>
        <argsstring>)(struct xml_doc *, struct xml_node *, void *, void **, int *)</argsstring>
        <name>dtsgui_tabpane_newdata_cb</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="87" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" bodystart="87" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___c-_a_p_i_1gacecdb36b65ac3d5522a419a6b69c9f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_config</definition>
        <argsstring>(dtsgui_configcb confcallback_cb, void *userdata, struct point wsize, struct point wpos, const char *title, const char *status)</argsstring>
        <name>dtsgui_config</name>
        <param>
          <type><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></type>
          <declname>confcallback_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct <ref refid="structpoint" kindref="compound">point</ref></type>
          <declname>wsize</declname>
        </param>
        <param>
          <type>struct <ref refid="structpoint" kindref="compound">point</ref></type>
          <declname>wpos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Configure the GUI and create a application frame. </para>        </briefdescription>
        <detaileddescription>
<para>This is the first process required the application is created and the callback is executed.</para><para>Application processing continues until dtsgui_run is executed at this point the call back is executed and proccessing will be passed to the GUI App.</para><para>The userdata is returned in the callback.</para><para>The Callback must return a non zero value to indicat success should the application fail returning 0 will close the application.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_app" kindref="compound">DTSApp</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>confcallback_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function where processing will continue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>a refrenced object passed back to the config callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum/Initial size of the application window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Application position [Top Left Corner] of application placed on screen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title displayed on the application bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Default text displayed on the status bar. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="153" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga3ac9d5ef153d17266a704a373d591962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dtsgui_run</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>dtsgui_run</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Configure the GUI and create a application frame. </para>        </briefdescription>
        <detaileddescription>
<para>Pass application processing to the GUI after calling the configure callback.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i_1gacecdb36b65ac3d5522a419a6b69c9f7f" kindref="member">dtsgui_config</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_app" kindref="compound">DTSApp</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of paramaters contained in argv. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of paramaters to be passed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value from callback function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="154" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gaa224c0a868745526e6ac3c05970471c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* dtsgui_userdata</definition>
        <argsstring>(struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_userdata</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Obtain a reference for the application userdata. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This reference must be un refferenced.</para></simplesect>
<simplesect kind="see"><para><ref refid="classdtsgui_1a4d5bf22a505defc4ab13178ff95f2b32" kindref="member">dtsgui::GetUserData</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to application user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="155" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gafc00c020f324c119956fcc38e7fd55db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_titleappend</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_titleappend</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Append text to the title enclosed in square brackets Update the main application title bar text. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui_1a9d7432eacf96358d22797b37ee73caed" kindref="member">dtsgui::AppendTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application Data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to append </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="156" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga4e766a49c1e9eba3f2c2fda47b8166aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_sendevent</definition>
        <argsstring>(struct dtsgui *dtsgui, int eid)</argsstring>
        <name>dtsgui_sendevent</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eid</declname>
        </param>
        <briefdescription>
<para>Emit a event handled by event callback&apos;s A event is emited and recived by all active handlers The ID can be determined as required. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a63488ecbdbe2770ea7d12ce2b06f1b72" kindref="member">DTSFrame::SendDTSEvent()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eid</parametername>
</parameternamelist>
<parameterdescription>
<para>Event ID to send </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="157" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga529d973a998e39dba025dfcd96a9a706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_setwindow</definition>
        <argsstring>(struct dtsgui *dtsgui, dtsgui_pane p)</argsstring>
        <name>dtsgui_setwindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Set the displayed panel. </para>        </briefdescription>
        <detaileddescription>
<para>Switch the curent pane with the one provided this should not be done and rather use menu callbacks.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a7e9f18961fb55d1b9be667b81681803c" kindref="member">DTSFrame::SetWindow()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to display </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="158" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga1734b840fc0696b13d5b616df0ec3bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_setuptoolbar</definition>
        <argsstring>(struct dtsgui *dtsgui, dtsgui_toolbar_create cb, void *data)</argsstring>
        <name>dtsgui_setuptoolbar</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a53eefce4ace6a7d72e49e9ae4c520226" kindref="member">dtsgui_toolbar_create</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Callback to run to create and activate the toolbar. The toolbar has of yet not been wrapped into the C API Its recomended that a C++ object be linked that contains a derived class of wxToolbar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a1fe29f6d56f11d1702a372416a659e3e" kindref="member">DTSFrame::SetupToolbar</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Toolbar create callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be passed to the toolbar </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="159" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga164aa159bc57a744f012b49268796bbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_set_toolbar</definition>
        <argsstring>(struct dtsgui *dtsgui, int show)</argsstring>
        <name>dtsgui_set_toolbar</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Disable or enable the toolbar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui_1adbf932006dfc6df2266b5fbf34af67ac" kindref="member">dtsgui::ShowToolbar()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>show</parametername>
</parameternamelist>
<parameterdescription>
<para>Display the toolbar if non zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="160" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gad561196144c72953e31b83aff17054e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_setstatus</definition>
        <argsstring>(dtsgui_pane pane, const char *status)</argsstring>
        <name>dtsgui_setstatus</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Update the status bar message of panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a03be174c3cb033ba74b6abce543347e3" kindref="member">DTSPanel::SetStatus()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update title. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>New status bar message. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="161" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="877" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
        <definition>dtsgui_menu dtsgui_newmenu</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *name)</argsstring>
        <name>dtsgui_newmenu</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a new menu and append it to the menu bar. </para>        </briefdescription>
        <detaileddescription>
<para>A new menu is created and appended to the menu bar the returned value will be passed to menu functions to append items to.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the menu. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="164" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
        <definition>dtsgui_menuitem dtsgui_newmenucb</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *hint, const char *title, int blank, dtsgui_dynpanel cb, void *data)</argsstring>
        <name>dtsgui_newmenucb</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
          <defname>name</defname>
        </param>
        <param>
          <type>int</type>
          <declname>blank</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a menu item that will call a function with supplied data. </para>        </briefdescription>
        <detaileddescription>
<para>The specified call back will be called passing the application pointer (dtsgui), the name and data ptr supplied. if this function returns a <ref refid="class_d_t_s_object" kindref="compound">DTSObject</ref> pane it will be displayed.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" kindref="member">DTSFrame::NewMenuItem()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu where to put append this item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data created on application startup and returned in most callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu hint with a &amp; indicating the highlighted short key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>displayed on status bar and returned in callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blank</parametername>
</parameternamelist>
<parameterdescription>
<para>if not zero will blank the display before executing callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to execute when selected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ptr to a referenced object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created menu item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="165" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gabb8b44357ce2ce4a3fd028939cf8c700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
        <definition>dtsgui_menuitem dtsgui_newmenuitem</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *hint, dtsgui_pane pane)</argsstring>
        <name>dtsgui_newmenuitem</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
          <defname>p</defname>
        </param>
        <briefdescription>
<para>Create a menu item that will activate the pane provided. </para>        </briefdescription>
        <detaileddescription>
<para>this pane needs to be created and not deleted use of this function is discouraged. the callback menu function is recomended where a panel can be dynamically created and returned.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" kindref="member">DTSFrame::NewMenuItem()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" kindref="member">dtsgui_newmenucb()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu where to put append this item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data created on application startup and returned in most callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu hint with a &amp; indicating the highlighted short key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel must be a derived window of <ref refid="class_d_t_s_object" kindref="compound">DTSObject</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created menu item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="166" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a8a85f388867d2c2059a620883dc0f39f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_menuitemenable</definition>
        <argsstring>(dtsgui_menuitem dmi, int enable)</argsstring>
        <name>dtsgui_menuitemenable</name>
        <param>
          <type><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
          <declname>dmi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="169" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gaf655828d94de128cfd8269d03d649092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_menusep</definition>
        <argsstring>(dtsgui_menu dtsmenu)</argsstring>
        <name>dtsgui_menusep</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <briefdescription>
<para>Add Menu seperator to the menu. </para>        </briefdescription>
        <detaileddescription>
<para>A menu seperation line is appened to the menu.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append about item to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="172" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gaf06c34986c04d800883694733554033e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_about</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_about</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Add Menu item will pop up a &quot;about&quot; box. </para>        </briefdescription>
        <detaileddescription>
<para>Open an &quot;about&quot; box using the text supplied.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append about item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in box when menu is selected </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="173" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1ga58e38f8ef567c8f50e15a53507ee4a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_close</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_close</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Add Menu item that will close the app after sending a save event. </para>        </briefdescription>
        <detaileddescription>
<para>A menu item will be appended to the supplied menu that when selected will generate a close/save event confirmation will be requested.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" kindref="member">DTSFrame::CloseMenu()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="174" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gabf67f1b041be315b58ccacc7d193b273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_exit</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_exit</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Add Menu item that will abort the app without save event been generated. </para>        </briefdescription>
        <detaileddescription>
<para>A menu item will be appended to the supplied menu that when selected will generate a abort event [Alt-F4] confirmation will be requested.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" kindref="member">DTSFrame::CloseMenu()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="175" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gac763bff39863668014931022b469d836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane dtsgui_panel</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *name, const char *title, int butmask, enum panel_type type, void *userdata)</argsstring>
        <name>dtsgui_panel</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>enum <ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
<para>Create a pannel to be displayed. </para>        </briefdescription>
        <detaileddescription>
<para>This function is able to create and return various panels excluding Tab/Tree view panels.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a3b1105fb9c8e3b6909994e7f993eee20" kindref="member">DTSFrame::CreatePane()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Text used in the status bar when panel is displayed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title set in the window Top/Middle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Buttons to be displayed values of panel_buttons or&apos;d together. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of panel to create [Excludes Tab/Tree Views] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced Obect passed stored in panel and available in event handlers. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Newly created panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="178" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gafb8efe017917a372826f7ddedb0e8bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane dtsgui_textpane</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *buf)</argsstring>
        <name>dtsgui_textpane</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Create a text display box with the supplied buffer. </para>        </briefdescription>
        <detaileddescription>
<para>This creates a panel that only contains the supplied buffer Scrollbars are used as required.</para><para>This window is read only.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a036e076a53c67d43204aa636ab26328d" kindref="member">DTSFrame::TextPanel()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on the status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The text displayed in the pane. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New text panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="179" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga3f8f0e22fd2ecdcb915ec06851d12e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_settitle</definition>
        <argsstring>(dtsgui_pane pane, const char *title)</argsstring>
        <name>dtsgui_settitle</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Update the title on the panel if it exists. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a58daeb533cce1e4bdac57118cce7c7ea" kindref="member">DTSPanel::SetTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update title. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>New title to place on panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="180" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="866" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga71826ffc718e3dc219e57befdb6f0d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_delpane</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_delpane</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Delete a panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is unlikly too be needed as the GUI manages panels.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel To Delete. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="181" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="536" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga6728901f40e67a95bc46150e1cf3c450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* dtsgui_paneldata</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_paneldata</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Obtain a reference to the userdata of panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_object_1a5d32407be34aa68ea2b038ede768d50e" kindref="member">DTSObject::GetUserData()</ref>.</para></simplesect>
<simplesect kind="note"><para>this must be un refferenced.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to obtain reference from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to userdata. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="182" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="856" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gaa85445ee6c9a2c24d76824bb67cc2ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_setevcallback</definition>
        <argsstring>(dtsgui_pane pane, event_callback evcb, void *data)</argsstring>
        <name>dtsgui_setevcallback</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref></type>
          <declname>evcb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set event callback function for panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1ac18de08077529d488ea329a72ee14d98" kindref="member">DTSPanel::SetEventCallback()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref></para></simplesect>
When a event happens the callback is called with the userdata to allow actioning the event.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to attach callback too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evcb</parametername>
</parameternamelist>
<parameterdescription>
<para>Event callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data supplied in the callback (panel userdata is available in the panel). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="183" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="806" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gab2f995a29a5b461ac67c7d9aa7091686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_configcallback</definition>
        <argsstring>(dtsgui_pane pane, dtsgui_configcb cb, void *data)</argsstring>
        <name>dtsgui_configcallback</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set config callback function for panel (UNUSED). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1acdb57729ace5f3c0fc76cce4d41c36cc" kindref="member">DTSPanel::SetConfigCallback()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></para></simplesect>
<simplesect kind="note"><para>Not yet implemted who knows maybe it will maybe it wont.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to attach callback too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Config callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data supplied in the callback (panel userdata is available in the panel). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="184" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="894" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gad91055a12542c30dab4aacbd0761c785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_panel_setxml</definition>
        <argsstring>(dtsgui_pane pane, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_panel_setxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Pass a reference to a XML Doc Structure to the panel. </para>        </briefdescription>
        <detaileddescription>
<para>Assign a reference to a XML Doc to the panel for use latter and with XML controls.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_object_1a1ae63425d8e5770a8b0717f37fd695b2" kindref="member">DTSObject::SetXMLDoc()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to be assigned the ref. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Document to be assigned. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="187" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga75c6083aa363922fdf1fd19767eceeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_doc *</type>
        <definition>struct xml_doc* dtsgui_panelxml</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_panelxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Get reference to previously allocated XML Doc. </para>        </briefdescription>
        <detaileddescription>
<para>Obtain a new reference to the xmldoc stored in the panel.</para><para><simplesect kind="note"><para>This must be un refferenced.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_d_t_s_object_1ae177d1cfd85be759810b252b98f2050d" kindref="member">DTSObject::GetXMLDoc()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to obtain the XML Info. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to XML Doc. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="188" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="524" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga28e2dbe2171ea35e32fa615aca55b934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xmlpanel_update</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_xmlpanel_update</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>update all XML elements in the panel. </para>        </briefdescription>
        <detaileddescription>
<para>All elements on the panel that are XML will have there nodes updated Based on the value of the elements.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1adc5131960a24dfa65adba935a1be0f79" kindref="member">DTSPanel::Update_XML()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga4d0d6742f61c91fb590b3728a7229150" kindref="member">dtsgui_pane2post</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1a7ce048cedd00ee1f1d9ea1c1fd504a6f" kindref="member">DTSPanel::Panel2Post()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="189" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="823" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
        <definition>dtsgui_tabview dtsgui_tabwindow</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, void *data)</argsstring>
        <name>dtsgui_tabwindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a tab view panel. </para>        </briefdescription>
        <detaileddescription>
<para>Create a panel that will place pages as tabs along the top of the display. Clicking on the tab opens the panel in the display area.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in the event callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tab window. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="192" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1gae7cf11b65ccca530aecef7f7daa389e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane dtsgui_newtabpage</definition>
        <argsstring>(dtsgui_tabview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc, dtsgui_tabpanel_cb cb, void *cdata)</argsstring>
        <name>dtsgui_newtabpage</name>
        <param>
          <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <briefdescription>
<para>Create and append a tab to the view. </para>        </briefdescription>
        <detaileddescription>
<para>Append a tab to the tab view the tab will be configured when it is selected the callback will run to configure it.</para><para><simplesect kind="note"><para>Its also possible to configure the returned panel. </para><simplesectsep/><para>On win32 all tabs are configured when the view is activated.</para></simplesect>
<simplesect kind="see"><para><ref refid="group___c-_a_p_i-_panel-_tab_1ga26ee371ec8b1bed0f4a652eb99e04767" kindref="member">dtsgui_tabpage_insert</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" kindref="member">dtsgui_tabwindow()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" kindref="member">DTSTabWindow::CreateTab()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tabview previously created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the pane Top/Center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of buttons to be placed on the panel and trigger events passed to the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object stored and made available in callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML document stored and made available to XML resources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed to the configuration callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="193" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1ga26ee371ec8b1bed0f4a652eb99e04767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane dtsgui_tabpage_insert</definition>
        <argsstring>(dtsgui_tabview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc, dtsgui_tabpanel_cb cb, void *cdata, int pos, int undo)</argsstring>
        <name>dtsgui_tabpage_insert</name>
        <param>
          <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>undo</declname>
        </param>
        <briefdescription>
<para>Create and append a tab to the view. </para>        </briefdescription>
        <detaileddescription>
<para>Insert a tab at the position specified and recreate the panel at position undo.</para><para><simplesect kind="see"><para>dtsgui_tabpage_newtabpage </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" kindref="member">dtsgui_tabwindow()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" kindref="member">DTSTabWindow::CreateTab()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tabview previously created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the pane Top/Center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of buttons to be placed on the panel and trigger events passed to the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object stored and made available in callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML document stored and made available to XML resources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed to the configuration callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="194" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1gad3333a23e28993072b5ef4feed86778c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_newxmltabpane</definition>
        <argsstring>(dtsgui_tabview tabv, dtsgui_pane p, const char *xpath, const char *node, const char *vitem, const char *tattr, dtsgui_tabpane_newdata_cb data_cb, dtsgui_tabpanel_cb cb, void *cdata, struct xml_doc *xmldoc, void *data)</argsstring>
        <name>dtsgui_newxmltabpane</name>
        <param>
          <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tabv</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vitem</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab5e1fa276d48b20d35f4ef20110c39ed" kindref="member">dtsgui_tabpane_newdata_cb</ref></type>
          <declname>data_cb</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Helper function to handle &quot;Adding&quot; a new tab from a existing tab. </para>        </briefdescription>
        <detaileddescription>
<para>This implements the concept of the New button a new panel will be created from the data filled in on the pane this callback is attached too. A new XML node is created and the panel created from this node.</para><para><simplesect kind="note"><para>this callback helper is rather complex.</para></simplesect>
<simplesect kind="see"><para><ref refid="classtab__newpane" kindref="compound">tab_newpane</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tabv</parametername>
</parameternamelist>
<parameterdescription>
<para>Table view the new panel will be added too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel this callback is attached too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the XML node to create in the xpath. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vitem</parametername>
</parameternamelist>
<parameterdescription>
<para>the item in the panel to be used to create the value of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute to be used too create the title in the new pane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to allow setting the data used in pane creation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referrenced object containing initial callback data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>XML doc reference for creating the node / panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing is returned the callback is registered on the panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="195" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="621" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gaa92cb9c6006aaf320e784f04500c3b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
        <definition>dtsgui_treeview dtsgui_treewindow</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, dtsgui_tree_cb tree_cb, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_treewindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" kindref="member">dtsgui_tree_cb</ref></type>
          <declname>tree_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a treepane view. </para>        </briefdescription>
        <detaileddescription>
<para>Create a split window with a tree control on the left and display area on right.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window" kindref="compound">DTSTreeWindow</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" kindref="member">dtsgui_tree_cb</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368" kindref="member">tree_cbtype</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Aplication data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on the status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called when a event of tree_cbtype is handled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML doc struct available in callback&apos;s and for managing XML nodes/panels. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="198" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gad71b59e1898bce570cac2acd774f71e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane dtsgui_treepane</definition>
        <argsstring>(dtsgui_treeview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_treepane</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a tree view panel with information. </para>        </briefdescription>
        <detaileddescription>
<para>This will seldom be needed as panels are created and supplied in callbacks.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" kindref="member">DTSTreeWindow::CreatePane()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the panel top/center </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of buttons to be placed on the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object available in event callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>XML doc reference used for updating XML elements. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Tree Pane. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="199" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="642" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gab8713feb542a9bb13f8fe7e3bf568bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane dtsgui_treepane_default</definition>
        <argsstring>(dtsgui_treeview self, dtsgui_treenode node)</argsstring>
        <name>dtsgui_treepane_default</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>self</declname>
          <defname>tv</defname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Create a tree view panel with information. </para>        </briefdescription>
        <detaileddescription>
<para>Create a pane from information obtained from node. Name of node is used for the panel title and a Accept/Undo button.</para><para><simplesect kind="note"><para>if node id is -1 no name/buttons are added the page is blank.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" kindref="member">DTSTreeWindow::CreatePane()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>used as template for panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Tree Pane. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="200" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="661" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gaaaf93911380c2f40eb8adbdc39ac36ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_nodesetxml</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *title)</argsstring>
        <name>dtsgui_nodesetxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
          <defname>newname</defname>
        </param>
        <briefdescription>
<para>Update the XML Node with a new name. </para>        </briefdescription>
        <detaileddescription>
<para>This helper function will update the node&apos;s XML after a edit event.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a3a7d1d1ce34864f71d5ffd154ca18210" kindref="member">DTSTreeWindow::UpdateNodeXML()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Treeview node is part of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>TreeNode to update. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newname</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to update XML node with. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="201" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga550b7516bbb97dd66bc71033e7d996cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
        <definition>dtsgui_treenode dtsgui_treecont</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *title, int can_edit, int can_sort, int can_del, int nodeid, dtsgui_treeviewpanel_cb p_cb, void *data)</argsstring>
        <name>dtsgui_treecont</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_edit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_sort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_del</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a container in the tree view. </para>        </briefdescription>
        <detaileddescription>
<para>Create and insert a new folder/container in the tree view with properties / call back. A panel will be created and supplied to the callback too implement on selection.</para><para><simplesect kind="note"><para>The root node is NULL this is the initial container.</para></simplesect>
<simplesect kind="see"><para>DTSTreeWindow::AppendContainer </para><simplesectsep/><para><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree view to add the node too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent node or NULL to create root node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The label shown on the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow editing of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_del</parametername>
</parameternamelist>
<parameterdescription>
<para>Not yet implemented for containers but will allow right click menu to delete. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeid</parametername>
</parameternamelist>
<parameterdescription>
<para>A value passed to the callback as convinence can be any value -1 will cause a blank panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to pass panel for configuration on selection of the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed too callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="202" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="686" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga0f7146637609d42057e2cd21bd2bf33e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
        <definition>dtsgui_treenode dtsgui_treeitem</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *title, int can_edit, int can_sort, int can_del, int nodeid, dtsgui_treeviewpanel_cb p_cb, void *data)</argsstring>
        <name>dtsgui_treeitem</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_edit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_sort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_del</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a item in a container. </para>        </briefdescription>
        <detaileddescription>
<para>Create and insert a new item in the tree view in the node specified with properties / call back. A panel will be created and supplied to the callback too implement on selection.</para><para><simplesect kind="see"><para>DTSTreeWindow::AppendItem </para><simplesectsep/><para><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree view to add the node too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent node or NULL to create root node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The label shown on the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow editing of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_del</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow right click menu to delete. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeid</parametername>
</parameternamelist>
<parameterdescription>
<para>A value passed to the callback as convinence can be any value -1 will cause a blank panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to pass panel for configuration on selection of the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed too callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="203" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="710" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga3e6618e889e7b58e3bf2ae3d63332178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_treenodesetxml</definition>
        <argsstring>(dtsgui_treenode tn, struct xml_node *xn, const char *tattr)</argsstring>
        <name>dtsgui_treenodesetxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>struct xml_node *</type>
          <declname>xn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <briefdescription>
<para>Add a XML node to the tree node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1aa82d333247a2bf537c3acdeae7635e15" kindref="member">DTSDVMListStore::SetXMLData</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xn</parametername>
</parameternamelist>
<parameterdescription>
<para>XML node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the XN that represents the title NULL if the value is the title. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="204" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="772" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ac23fb82d0b4d99484fc878d27ee51cbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_node *</type>
        <definition>struct xml_node* dtsgui_treenodegetxml</definition>
        <argsstring>(dtsgui_treenode tn, char **buf)</argsstring>
        <name>dtsgui_treenodegetxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="205" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga00767aae723dce154065e0bb090c0e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* dtsgui_treenodegetdata</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodegetdata</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get reference for the user data of node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a35aa2204af134770c1fab2f5426c50a7" kindref="member">DTSDVMListStore::GetUserData()</ref> </para></simplesect>
<simplesect kind="note"><para>This needs to be unreferenced. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="206" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="788" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gaedca58250011ea48c67fbc4faa14278f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dtsgui_treenodeparent</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodeparent</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get the name of the nodes parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a06805bea00fbdbf5df1f995b87897b5e" kindref="member">DTSDVMListStore::GetParentTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Name og the nodes parentI </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="207" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="762" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga55a99744231b294667ece32a1087042f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_newxmltreenode</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_pane p, dtsgui_treenode tn, const char *xpath, const char *node, const char *vitem, const char *tattr, int nid, int flags, dtsgui_xmltreenode_cb node_cb, void *data, dtsgui_treeviewpanel_cb p_cb)</argsstring>
        <name>dtsgui_newxmltreenode</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vitem</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a52992645e33e4d92c8e68c3490239c75" kindref="member">dtsgui_xmltreenode_cb</ref></type>
          <declname>node_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <briefdescription>
<para>Helper function to handle &quot;Adding&quot; a new node from a existing node. </para>        </briefdescription>
        <detaileddescription>
<para>This implements the concept of the New button a new node will be created from the data filled in on the pane this callback is attached too. A new XML node is created and the panel created from this node.</para><para><simplesect kind="see"><para><ref refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898" kindref="member">tree_newnode_flags</ref></para></simplesect>
<simplesect kind="note"><para>this callback helper is rather complex.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view the new panel will be added too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel this callback is attached too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the XML node to create in the xpath. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vitem</parametername>
</parameternamelist>
<parameterdescription>
<para>the item in the panel to be used to create the value of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute to be used too create the title in the new pane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nid</parametername>
</parameternamelist>
<parameterdescription>
<para>Node id for newly created node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Option flags combined from tree_newnode_flags. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced Object passed to the callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel when it is selected. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing is returned the callback is registered on the panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="209" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="739" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gadc59452935e169e8e78c178aed0b77c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dtsgui_treenodeid</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodeid</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get the node id of a tree node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a9744dc2bb294481c69a55fcdd667b357" kindref="member">DTSDVMListStore::GetNodeID()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree Node to get the node of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the user defined tree node ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="210" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="752" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga9c1222d2fe8fa5066a2c55e4b71c2cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_node *</type>
        <definition>struct xml_node* dtsgui_panetoxml</definition>
        <argsstring>(dtsgui_pane p, const char *xpath, const char *node, const char *nodeval, const char *attrkey)</argsstring>
        <name>dtsgui_panetoxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nodeval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrkey</declname>
        </param>
        <briefdescription>
<para>Create a node from the elements on the panel. </para>        </briefdescription>
        <detaileddescription>
<para>Using the path information a node is created and elements added as attributes.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1ad28f5ed6bd19e9d685a18df8bf568f92" kindref="member">DTSPanel::Panel2XML()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to create nodes from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Base path to create the nodes in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the node to add. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeval</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the element to use as the value of node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attrkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Use this item to set the initial attribute and use as key. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New XML Node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="213" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="913" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga3f904089ceb734323477f2b3dbac4a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_rundialog</definition>
        <argsstring>(dtsgui_pane pane, event_callback evcb, void *data)</argsstring>
        <name>dtsgui_rundialog</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref></type>
          <declname>evcb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Execute a dialog panel. Pop up and run a dialog pane the result will be obtained int the event handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_dialog_1af1e6be7e08913149d128839b7e535cd0" kindref="member">DTSDialog::RunDialog()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Dialog panel to execute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evcb</parametername>
</parameternamelist>
<parameterdescription>
<para>Event callback to handle the results in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data passed to the event handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="217" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="925" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a516c50b1b7dc3d64b7359b2dc8cc5c7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_textbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_textbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="222" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1088" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ab6e3fc77fef8fb74258c33ee69b911bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_textbox_multi</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_textbox_multi</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="223" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1093" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a79b1ab33ee1a0e016f6a52867cfd64c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_passwdbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_passwdbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="224" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1098" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ac09b17812af1a1d082b5a21eeb6e76fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_checkbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *checkval, const char *uncheck, int ischecked, void *data)</argsstring>
        <name>dtsgui_checkbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uncheck</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ischecked</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="225" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1103" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a2a0aa663f737802473c120696200f96b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* dtsgui_listbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, void *data)</argsstring>
        <name>dtsgui_listbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="226" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1108" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a420ed9483fa9e18ad23b28e42f1e8128" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* dtsgui_combobox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, void *data)</argsstring>
        <name>dtsgui_combobox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="227" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1113" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a2d12f82c087187d64f9d8bd294935c2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xmltextbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmltextbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="230" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1118" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ab67abe4aa19f727bf0e4c2945858b04e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xmltextbox_multi</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmltextbox_multi</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="231" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1123" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a0dfeefebc308af548fa896483791d491" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xmlpasswdbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlpasswdbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="232" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1128" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ab8135d7095450792a3038a61bccc11e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xmlcheckbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *checkval, const char *uncheckval, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlcheckbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uncheckval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="233" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1133" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ad718a851b143372f7b9a66987d3a5ad3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* dtsgui_xmllistbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmllistbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="234" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1138" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ac59f56d30e11143c437f0399d49dad31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* dtsgui_xmlcombobox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlcombobox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="235" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1143" bodyend="1146"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1afe0c58df358c2f9efc35c153f0cbe26f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xnode_textbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *attr)</argsstring>
        <name>dtsgui_xnode_textbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="238"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a4212d0d416149eb28a4b09a8a6e8d032" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xnode_textbox_multi</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *attr)</argsstring>
        <name>dtsgui_xnode_textbox_multi</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="239"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1aae0cdf1caf3652516cfef827a8bea94f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xnode_passwdbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *attr)</argsstring>
        <name>dtsgui_xnode_passwdbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="240"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a471bb38231515cd799b3f227593dadb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_xnode_checkbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *checkval, const char *uncheckval, const char *attr)</argsstring>
        <name>dtsgui_xnode_checkbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uncheckval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="241"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ab46668a5a74bd51597aca686c4e481d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* dtsgui_xnode_listbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *attr)</argsstring>
        <name>dtsgui_xnode_listbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="242"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a09063c2d2a097eb4faaffd5e56153a4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* dtsgui_xnode_combobox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *attr)</argsstring>
        <name>dtsgui_xnode_combobox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="243"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a352d67b3533b37717b30ccdfa2e35ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_listbox_add</definition>
        <argsstring>(struct form_item *lbox, const char *text, const char *value)</argsstring>
        <name>dtsgui_listbox_add</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>lbox</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="246" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1024" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ab852f0df487273e791980a9cdf833b54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_listbox_addxml</definition>
        <argsstring>(struct form_item *lb, struct xml_doc *xmldoc, const char *xpath, const char *nattr, const char *vattr)</argsstring>
        <name>dtsgui_listbox_addxml</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vattr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="247" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1049" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a2cb642b0c5cde1bf4c32210b0bed9b3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_listbox_set</definition>
        <argsstring>(struct form_item *listbox, int idx)</argsstring>
        <name>dtsgui_listbox_set</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>listbox</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="248" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1028" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1af92ea8c5403cf99b34199eaaf35fa600" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dtsgui_confirm</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_confirm</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="251" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1068" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a3cc7862093cea93011a8719a43bf858f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_alert</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_alert</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="252" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1073" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1gac4185ec71523c1735f1da2cb6dc876d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dtsgui_progress_start</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text, int maxval, int quit)</argsstring>
        <name>dtsgui_progress_start</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxval</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quit</declname>
        </param>
        <briefdescription>
<para>Initialise the progress dialog Pop up a dialog box that can be updated to showprogress with a optional cancel button. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55bbe89f24dc6ad3fbe78589bcbd9686" kindref="member">DTSFrame::StartProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxval</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum expected value to update. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quit</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable the cancel button if quit is zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="255" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="983" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1gabda6276de46c13fb4e0831bb8c8d1ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dtsgui_progress_update</definition>
        <argsstring>(struct dtsgui *dtsgui, int newval, const char *newtext)</argsstring>
        <name>dtsgui_progress_update</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newtext</declname>
        </param>
        <briefdescription>
<para>Update the progress bar counter This function updates the current progress value and optionally allows setting new displayed text. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a3b057f8c85958444049063e75b602108" kindref="member">DTSFrame::UpdateProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newval</parametername>
</parameternamelist>
<parameterdescription>
<para>Update the counter with this value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success may fail when the user presses cancel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="256" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="998" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1ga7bd617a3f00cb21ae6df7a37eba0dc7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dtsgui_progress_increment</definition>
        <argsstring>(struct dtsgui *dtsgui, int ival, const char *newtext)</argsstring>
        <name>dtsgui_progress_increment</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ival</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newtext</declname>
        </param>
        <briefdescription>
<para>Increments the counter by adding to it not setting it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a8b1f1c4cf298ef550edec3fa3bf96738" kindref="member">DTSFrame::IncProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ival</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to increment progress bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success may fail when the user presses cancel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="257" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1010" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1ga528f638b6cb7b0d813e350a0b0c7262c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_progress_end</definition>
        <argsstring>(struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_progress_end</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Disable the progress bar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1aa33b0ba3ce50a7ec4434a78c2be498b7" kindref="member">DTSFrame::EndProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="258" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1019" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ad7ddb743b7fd844efb49fe9c9a21ab5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bucket_list *</type>
        <definition>struct bucket_list* dtsgui_panel_items</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_panel_items</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="261" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1032" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a4b7c1bec5b0e7fb98c1da39ba7a33f11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* dtsgui_item_data</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_data</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="262" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1037" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a043451147cbaf12b4dd9cf986ac9c52a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dtsgui_item_name</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_name</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="263" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1041" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a73ab6225b32dfaa102b95ec96e35ccb9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dtsgui_item_value</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_value</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="264" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1045" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a6aa6d1c9a511d7761cad2cbfd291505c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* dtsgui_finditem</definition>
        <argsstring>(dtsgui_pane p, const char *name)</argsstring>
        <name>dtsgui_finditem</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="265" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1053" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a670cae0571f32de4e06c4d32dd11e9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dtsgui_findvalue</definition>
        <argsstring>(dtsgui_pane p, const char *name)</argsstring>
        <name>dtsgui_findvalue</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="266" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1058" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga2e1e2013214ae275160b8c87e6cb3d89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
        <definition>struct dtsgui_wizard* dtsgui_newwizard</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title)</argsstring>
        <name>dtsgui_newwizard</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Create a new wizard. </para>        </briefdescription>
        <detaileddescription>
<para>A wizard consists of multiple panels linked with back/next controls each panel will need to be procesed on completion.</para><para><simplesect kind="see"><para><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Aplication data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title shown on title bar of wizard pop up. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New wizard that needs pages added too and run. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="269" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="941" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga3e76b1ea2eebb91e1d0b5a55649d65e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane dtsgui_wizard_addpage</definition>
        <argsstring>(struct dtsgui_wizard *dtswiz, const char *title, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_wizard_addpage</name>
        <param>
          <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
          <declname>dtswiz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a panel appended to the wizard. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui__wizard_1a02984b1d70df5100e8b6200e0bb1b421" kindref="member">dtsgui_wizard::AddPage()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtswiz</parametername>
</parameternamelist>
<parameterdescription>
<para>Wizard to add page too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of the new panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be referenced and stored on the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML Doc to be referenced and stored on the panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New panel that will need to be configured and processed after completion. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="270" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="955" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga25174d47f2e9680d41aebdf08ff9b979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int dtsgui_runwizard</definition>
        <argsstring>(struct dtsgui_wizard *dtswiz)</argsstring>
        <name>dtsgui_runwizard</name>
        <param>
          <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
          <declname>dtswiz</declname>
        </param>
        <briefdescription>
<para>Run the wizard. </para>        </briefdescription>
        <detaileddescription>
<para>Pop up the wizard window and open first page on success its required that the panels information be processed. When the wizard is un refferenced the panels are deleted.</para><para><simplesect kind="see"><para><ref refid="classdtsgui__wizard_1ab0554e6b9fe1d2c0419a6659d883edf3" kindref="member">dtsgui_wizard::RunWizard()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtswiz</parametername>
</parameternamelist>
<parameterdescription>
<para>Wizard too run. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non Zero on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="271" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="970" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a45086dc70bb1514065404a0fc25e4bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dtsgui_filesave</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *path, const char *name, const char *filter)</argsstring>
        <name>dtsgui_filesave</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="274" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1078" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a539470bafd5da6df6ab9ccabad15fd71" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* dtsgui_fileopen</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *path, const char *name, const char *filter)</argsstring>
        <name>dtsgui_fileopen</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="275" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1083" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1ae70ea93052afabcae582538032652d7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void dtsgui_menuenable</definition>
        <argsstring>(dtsgui_menu dm, int enable)</argsstring>
        <name>dtsgui_menuenable</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="278" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/cxxapi.cpp" bodystart="33" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga4d0d6742f61c91fb590b3728a7229150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct curl_post *</type>
        <definition>struct curl_post* dtsgui_pane2post</definition>
        <argsstring>(dtsgui_pane p)</argsstring>
        <name>dtsgui_pane2post</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Prepare a HTTP POST structure from panel. </para>        </briefdescription>
        <detaileddescription>
<para>Create a HTTP Post structure from the values and names Of elements on a panel this can then be used with curl_post to post to a URL.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1adc5131960a24dfa65adba935a1be0f79" kindref="member">DTSPanel::Update_XML()</ref> </para><simplesectsep/><para>dtsgui_xmlpane_update() </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1a7ce048cedd00ee1f1d9ea1c1fd504a6f" kindref="member">DTSPanel::Panel2Post()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to create from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A CURL HTTP POST Structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="279" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="dtsgui_8h_1a1b5488398f5555e2f93a35774428dd9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct basic_auth *</type>
        <definition>struct basic_auth* dtsgui_pwdialog</definition>
        <argsstring>(const char *user, const char *passwd, void *data)</argsstring>
        <name>dtsgui_pwdialog</name>
        <param>
          <type>const char *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passwd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h" line="282" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1063" bodyend="1066"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Main include file for the GUI Library. </para>    </briefdescription>
    <detaileddescription>
<para>This file needs to be included to use the defined functions and API. Including it in a C++ file without defining _DTS_C_API will not allow access to the namespace <ref refid="namespace_d_t_s___c___a_p_i" kindref="compound">DTS_C_API</ref>.</para><para>It is not recomended to use the C API from C++. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Distrotech<sp/>Solutions<sp/>wxWidgets<sp/>Gui<sp/>Interface</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2013<sp/>Gregory<sp/>Hinton<sp/>Nietsky<sp/>&lt;gregory@distrotech.co.za&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="preprocessor">#ifndef<sp/>DTSGUI_H_INCLUDED</highlight></codeline>
<codeline lineno="32"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>DTSGUI_H_INCLUDED</highlight></codeline>
<codeline lineno="33"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdint.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;dtsapp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="comment">/*application<sp/>struct*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="dtsgui_8h_1a8d0ed2b4049e42079b366e341b33347f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui" kindref="compound">dtsgui</ref><sp/><ref refid="classdtsgui" kindref="compound">dtsgui</ref>;</highlight></codeline>
<codeline lineno="39" refid="dtsgui_8h_1a00d1631dc45e8a99d361b5091856abe3" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref><sp/><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref>;</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment">/*menu<sp/>controls*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42" refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref>;</highlight></codeline>
<codeline lineno="43" refid="dtsgui_8h_1af59302244664352117c2669055da5850" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref>;</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment">/*viewable<sp/>windows*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref>;</highlight></codeline>
<codeline lineno="47" refid="dtsgui_8h_1a698d08e25e0df56af6ba94c8056bdd97" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1a698d08e25e0df56af6ba94c8056bdd97" kindref="member">dtsgui_notebook</ref>;</highlight></codeline>
<codeline lineno="48" refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref>;</highlight></codeline>
<codeline lineno="49" refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref>;</highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref>;</highlight></codeline>
<codeline lineno="52" refid="dtsgui_8h_1a531b61ccda025272407e2d2b26f0072c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="dtsgui_8h_1a531b61ccda025272407e2d2b26f0072c" kindref="member">dtsgui_progress</ref>;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight><highlight class="comment">/*forward<sp/>def*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="dtsgui_8h_1abbf6decd0bf8428c296f4adcafed46fb" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/><ref refid="classform__item" kindref="compound">form_item</ref>;</highlight></codeline>
<codeline lineno="56" refid="dtsgui_8h_1aa881f6b55dcf9b95108f08bf62d4802f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdynamic__panel" kindref="compound">dynamic_panel</ref><sp/><ref refid="classdynamic__panel" kindref="compound">dynamic_panel</ref>;</highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight></codeline>
<codeline lineno="58" refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368" kindref="member">tree_cbtype</ref><sp/>{</highlight></codeline>
<codeline lineno="59" refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368adac89e1845cacd5358022cbc20aba1a9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368adac89e1845cacd5358022cbc20aba1a9" kindref="member">DTSGUI_TREE_CB_SELECT</ref>,</highlight></codeline>
<codeline lineno="60" refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368a95978182db76e342ba406456dc935258" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368a95978182db76e342ba406456dc935258" kindref="member">DTSGUI_TREE_CB_DELETE</ref>,</highlight></codeline>
<codeline lineno="61" refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368a629392b319c09bfdb44b638c858381e8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368a629392b319c09bfdb44b638c858381e8" kindref="member">DTSGUI_TREE_CB_EDIT</ref></highlight></codeline>
<codeline lineno="62"><highlight class="normal">};</highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9" kindref="member">form_data_type</ref><sp/>{</highlight></codeline>
<codeline lineno="65" refid="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" kindref="member">DTSGUI_FORM_DATA_PTR</ref>,</highlight></codeline>
<codeline lineno="66" refid="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9a5c592b75994135a5de470f79e40aafda" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1aa648ae9cc0927fecec3a6f705930f8a9a5c592b75994135a5de470f79e40aafda" kindref="member">DTSGUI_FORM_DATA_XML</ref></highlight></codeline>
<codeline lineno="67"><highlight class="normal">};</highlight></codeline>
<codeline lineno="68"><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="comment">/*callbacks*/</highlight></codeline>
<codeline lineno="78" refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" refkind="member"><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member" tooltip="Callback called on application execution.">dtsgui_configcb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui" kindref="compound">dtsgui</ref>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="79" refid="dtsgui_8h_1a0d655090fad451700b01ffc4b0bdd727" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref><sp/>(*<ref refid="dtsgui_8h_1a0d655090fad451700b01ffc4b0bdd727" kindref="member">dtsgui_menucb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui" kindref="compound">dtsgui</ref>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="80" refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>int<sp/>(*<ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui" kindref="compound">dtsgui</ref>*,<sp/><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref>,<sp/>int,<sp/>int,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*);</highlight></codeline>
<codeline lineno="81" refid="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref><sp/>(*<ref refid="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui" kindref="compound">dtsgui</ref>*,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="82" refid="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref><sp/>(*<ref refid="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" kindref="member">dtsgui_tree_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui" kindref="compound">dtsgui</ref><sp/>*,<sp/><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref>,<sp/><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref>,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368" kindref="member">tree_cbtype</ref><sp/>cb_type,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="83" refid="dtsgui_8h_1a52992645e33e4d92c8e68c3490239c75" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="dtsgui_8h_1a52992645e33e4d92c8e68c3490239c75" kindref="member">dtsgui_xmltreenode_cb</ref>)(<ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref>,<sp/><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref>,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_node*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="84" refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref>)(<ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref>,<sp/><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref>,<sp/><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="85" refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref>)(<ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref>,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="86" refid="dtsgui_8h_1a53eefce4ace6a7d72e49e9ae4c520226" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/>(*dtsgui_toolbar_create)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui" kindref="compound">dtsgui</ref>*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*,<sp/>long,<sp/>int,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="87" refid="dtsgui_8h_1ab5e1fa276d48b20d35f4ef20110c39ed" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/>void<sp/>(*<ref refid="dtsgui_8h_1ab5e1fa276d48b20d35f4ef20110c39ed" kindref="member">dtsgui_tabpane_newdata_cb</ref>)(</highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_doc*,<sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_node*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*);</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="structpoint" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structpoint" kindref="compound">point</ref><sp/>{</highlight></codeline>
<codeline lineno="90" refid="structpoint_1ad679b07fb69d55f5ad454d0f1f2891d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpoint_1ad679b07fb69d55f5ad454d0f1f2891d5" kindref="member">x</ref>;</highlight></codeline>
<codeline lineno="91" refid="structpoint_1a9a82ca9504acabb1e30569f89c805471" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="structpoint_1a9a82ca9504acabb1e30569f89c805471" kindref="member">y</ref>;</highlight></codeline>
<codeline lineno="92"><highlight class="normal">};</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"></highlight><highlight class="comment">/*buttons<sp/>YES<sp/>/<sp/>No<sp/>may<sp/>be<sp/>YES/NO<sp/>APPLY/REFRESH<sp/>OK/CANCEL*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref><sp/>{</highlight></codeline>
<codeline lineno="96" refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca332b4d1a5e1ae1425b5f77c49edd311c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca332b4d1a5e1ae1425b5f77c49edd311c" kindref="member">wx_PANEL_EVENT_BUTTON_FIRST</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="97" refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca5092915b2da9df3365a956562b3d3663" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca5092915b2da9df3365a956562b3d3663" kindref="member">wx_PANEL_EVENT_BUTTON_BACK</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="98" refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca95b3613970d7acac3b1b3f4adbebf186" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca95b3613970d7acac3b1b3f4adbebf186" kindref="member">wx_PANEL_EVENT_BUTTON_FWD</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="99" refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecaff2d58b46c16f29654d00ae290e25a63" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecaff2d58b46c16f29654d00ae290e25a63" kindref="member">wx_PANEL_EVENT_BUTTON_LAST</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3,</highlight></codeline>
<codeline lineno="100" refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca6ce91176e6c929e87d7acbd000d07f79" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca6ce91176e6c929e87d7acbd000d07f79" kindref="member">wx_PANEL_EVENT_BUTTON_YES</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>4,</highlight></codeline>
<codeline lineno="101" refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecadb8742f8472eb90558cfbf8e3914553b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecadb8742f8472eb90558cfbf8e3914553b" kindref="member">wx_PANEL_EVENT_BUTTON_NO</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>5</highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight></codeline>
<codeline lineno="104" refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6" kindref="member">panel_events</ref><sp/>{</highlight></codeline>
<codeline lineno="105" refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a331937b86eb259d1d84728d28fbed79d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a331937b86eb259d1d84728d28fbed79d" kindref="member">wx_PANEL_EVENT_BUTTON</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="106" refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a05cb2a662e44a9332f631e8fb04ea5ef" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a05cb2a662e44a9332f631e8fb04ea5ef" kindref="member">wx_PANEL_EVENT_COMBO_ENTER</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="107" refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a9d9853f83e3e28aaca0621c788994cc8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a9d9853f83e3e28aaca0621c788994cc8" kindref="member">wx_PANEL_EVENT_COMBO_UPDATE</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="108" refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a8f700b4b2b17b782d57dd32dc696956c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a8f700b4b2b17b782d57dd32dc696956c" kindref="member">wx_PANEL_EVENT_DTS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3</highlight></codeline>
<codeline lineno="109"><highlight class="normal">};</highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898" kindref="member">tree_newnode_flags</ref><sp/>{</highlight></codeline>
<codeline lineno="112" refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a92d0796e80ba757f7f74979253423b98" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a92d0796e80ba757f7f74979253423b98" kindref="member">DTS_TREE_NEW_NODE_EDIT</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>0,</highlight></codeline>
<codeline lineno="113" refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a09bf4479510d6996e8c2d0e3cd27c714" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a09bf4479510d6996e8c2d0e3cd27c714" kindref="member">DTS_TREE_NEW_NODE_DELETE</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>1,</highlight></codeline>
<codeline lineno="114" refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a67752f3ce4c088a226eb85e1f2369532" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898a67752f3ce4c088a226eb85e1f2369532" kindref="member">DTS_TREE_NEW_NODE_CONTAINER</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>2,</highlight></codeline>
<codeline lineno="115" refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898ab4026cda71b1fb600c8af942c1194e99" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898ab4026cda71b1fb600c8af942c1194e99" kindref="member">DTS_TREE_NEW_NODE_SORT</ref><sp/>=<sp/>1<sp/>&lt;&lt;<sp/>3</highlight></codeline>
<codeline lineno="116"><highlight class="normal">};</highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref><sp/>{</highlight></codeline>
<codeline lineno="119" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373ad0213b4d1d51e9f04e084a09e8da1c62" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373ad0213b4d1d51e9f04e084a09e8da1c62" kindref="member">wx_DTSPANEL_WINDOW</ref>,</highlight></codeline>
<codeline lineno="120" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a0e31c26466ea939007976914785fff2c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a0e31c26466ea939007976914785fff2c" kindref="member">wx_DTSPANEL_PANEL</ref>,</highlight></codeline>
<codeline lineno="121" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a51268d1576c4e816f1416435cfe61500" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a51268d1576c4e816f1416435cfe61500" kindref="member">wx_DTSPANEL_SCROLLPANEL</ref>,</highlight></codeline>
<codeline lineno="122" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a259d19ace1b7a45cbd7e99697bd2b69a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a259d19ace1b7a45cbd7e99697bd2b69a" kindref="member">wx_DTSPANEL_DIALOG</ref>,</highlight></codeline>
<codeline lineno="123" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a8aa14d05cc73bd9438f302f6f2cb29c3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a8aa14d05cc73bd9438f302f6f2cb29c3" kindref="member">wx_DTSPANEL_TREE</ref>,</highlight></codeline>
<codeline lineno="124" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373aa108fde55f9c1830cf68cd368aba1d02" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373aa108fde55f9c1830cf68cd368aba1d02" kindref="member">wx_DTSPANEL_WIZARD</ref>,</highlight></codeline>
<codeline lineno="125" refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a94b4b5412dbd78fdf58517c74afa9dad" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373a94b4b5412dbd78fdf58517c74afa9dad" kindref="member">wx_DTSPANEL_TAB</ref></highlight></codeline>
<codeline lineno="126"><highlight class="normal">};</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128" refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84" kindref="member">widget_type</ref><sp/>{</highlight></codeline>
<codeline lineno="129" refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84a30946b987fd9b1a681425eb86c33b836" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84a30946b987fd9b1a681425eb86c33b836" kindref="member">DTS_WIDGET_TEXTBOX</ref>,</highlight></codeline>
<codeline lineno="130" refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84af8b07c907089ef8cf8534af437682a28" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84af8b07c907089ef8cf8534af437682a28" kindref="member">DTS_WIDGET_CHECKBOX</ref>,</highlight></codeline>
<codeline lineno="131" refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84a617d0a94e82cae830c769b66b1751b9a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84a617d0a94e82cae830c769b66b1751b9a" kindref="member">DTS_WIDGET_LISTBOX</ref>,</highlight></codeline>
<codeline lineno="132" refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84ad091872a88b66595cb453008b03565cc" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1afd296180392ef5681415b9fb0590be84ad091872a88b66595cb453008b03565cc" kindref="member">DTS_WIDGET_COMBOBOX</ref></highlight></codeline>
<codeline lineno="133"><highlight class="normal">};</highlight></codeline>
<codeline lineno="134"><highlight class="normal"></highlight></codeline>
<codeline lineno="135" refid="dtsgui_8h_1abcf9e451a313490d78549227e6dc8824" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>wx_PANEL_BUTTON_NAV<sp/><sp/><sp/><sp/><sp/>wx_PANEL_EVENT_BUTTON_FIRST<sp/>|<sp/>wx_PANEL_EVENT_BUTTON_BACK<sp/>|<sp/>wx_PANEL_EVENT_BUTTON_FWD<sp/>|<sp/>wx_PANEL_EVENT_BUTTON_LAST</highlight></codeline>
<codeline lineno="136" refid="dtsgui_8h_1aa7fc68a1ddb9112dbbbfe2ae26e2e379" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>wx_PANEL_BUTTON_DIR<sp/><sp/><sp/><sp/><sp/>wx_PANEL_EVENT_BUTTON_BACK<sp/>|<sp/>wx_PANEL_EVENT_BUTTON_FWD</highlight></codeline>
<codeline lineno="137" refid="dtsgui_8h_1a4ef37ee1286eb68a9f5663813f134be2" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>wx_PANEL_BUTTON_ACTION<sp/><sp/>wx_PANEL_EVENT_BUTTON_YES<sp/>|<sp/>wx_PANEL_EVENT_BUTTON_NO</highlight></codeline>
<codeline lineno="138" refid="dtsgui_8h_1a6fd6c8004323d4605940ac5fb2ff9c9b" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>wx_PANEL_BUTTON_ALL<sp/><sp/><sp/><sp/><sp/>wx_PANEL_BUTTON_ACTION<sp/>|<sp/>wx_PANEL_BUTTON_NAV</highlight></codeline>
<codeline lineno="139" refid="dtsgui_8h_1a655f2051956468f6592bef486573e424" refkind="member"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#define<sp/>wx_PANEL_EVENT_BUTTON_NONE<sp/><sp/>0</highlight></codeline>
<codeline lineno="140"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>These<sp/>are<sp/>used<sp/>in<sp/>C<sp/>only<sp/>or<sp/>when<sp/>__DTS_C_API<sp/>is<sp/>defined<sp/>in<sp/>the<sp/>DTS_C_API<sp/>namespace</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="146"><highlight class="preprocessor"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="147"><highlight class="normal"></highlight><highlight class="keyword">namespace<sp/></highlight><highlight class="normal">DTS_C_API<sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="149"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>!defined(__cplusplus)<sp/>||<sp/>defined(__DTS_C_API)</highlight></codeline>
<codeline lineno="151"><highlight class="preprocessor"></highlight><highlight class="comment">/*app<sp/>frame<sp/>config<sp/>and<sp/>control*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i_1gacecdb36b65ac3d5522a419a6b69c9f7f" kindref="member" tooltip="Configure the GUI and create a application frame.">dtsgui_config</ref>(<ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member" tooltip="Callback called on application execution.">dtsgui_configcb</ref><sp/>confcallback_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound">point</ref><sp/>wsize,</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="structpoint" kindref="compound">point</ref><sp/>wpos,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*status);</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i_1ga3ac9d5ef153d17266a704a373d591962" kindref="member" tooltip="Configure the GUI and create a application frame.">dtsgui_run</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>argc,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**argv);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group___c-_a_p_i_1gaa224c0a868745526e6ac3c05970471c5" kindref="member" tooltip="Obtain a reference for the application userdata.">dtsgui_userdata</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classdtsgui" kindref="compound">dtsgui</ref><sp/>*<ref refid="classdtsgui" kindref="compound">dtsgui</ref>);</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i_1gafc00c020f324c119956fcc38e7fd55db" kindref="member" tooltip="Append text to the title enclosed in square brackets Update the main application title bar text...">dtsgui_titleappend</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i_1ga4e766a49c1e9eba3f2c2fda47b8166aa" kindref="member" tooltip="Emit a event handled by event callback&amp;#39;s A event is emited and recived by all active handlers The ID ...">dtsgui_sendevent</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>eid);</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i_1ga529d973a998e39dba025dfcd96a9a706" kindref="member" tooltip="Set the displayed panel.">dtsgui_setwindow</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/>dtsgui_pane<sp/>p);</highlight></codeline>
<codeline lineno="159"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i_1ga1734b840fc0696b13d5b616df0ec3bbb" kindref="member" tooltip="Callback to run to create and activate the toolbar. The toolbar has of yet not been wrapped into the ...">dtsgui_setuptoolbar</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/><ref refid="dtsgui_8h_1a53eefce4ace6a7d72e49e9ae4c520226" kindref="member">dtsgui_toolbar_create</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i_1ga164aa159bc57a744f012b49268796bbe" kindref="member" tooltip="Disable or enable the toolbar.">dtsgui_set_toolbar</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>show);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1gad561196144c72953e31b83aff17054e5" kindref="member" tooltip="Update the status bar message of panel.">dtsgui_setstatus</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*status);</highlight></codeline>
<codeline lineno="162"><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="comment">/*menu<sp/>configuration*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member" tooltip="Create a new menu and append it to the menu bar.">dtsgui_newmenu</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref><sp/><ref refid="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" kindref="member" tooltip="Create a menu item that will call a function with supplied data.">dtsgui_newmenucb</ref>(<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/>dtsmenu,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hint,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>blank,<sp/><ref refid="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="166"><highlight class="normal"><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref><sp/><ref refid="group___c-_a_p_i-_menus_1gabb8b44357ce2ce4a3fd028939cf8c700" kindref="member" tooltip="Create a menu item that will activate the pane provided.">dtsgui_newmenuitem</ref>(<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/>dtsmenu,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*hint,<sp/>dtsgui_pane<sp/>pane);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight></codeline>
<codeline lineno="168"><highlight class="normal"></highlight><highlight class="comment">/*menu<sp/>enable/disable*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a99f0bbb3bf979d0102b7b19899ad79dd" kindref="member">dtsgui_menuitemenable</ref>(<ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref><sp/>dmi,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"></highlight><highlight class="comment">/*predefined<sp/>menus*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_menus_1gaf655828d94de128cfd8269d03d649092" kindref="member" tooltip="Add Menu seperator to the menu.">dtsgui_menusep</ref>(<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/>dtsmenu);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_menus_1gaf06c34986c04d800883694733554033e" kindref="member" tooltip="Add Menu item will pop up a &amp;quot;about&amp;quot; box.">dtsgui_about</ref>(<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/>dtsmenu,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_menus_1ga58e38f8ef567c8f50e15a53507ee4a72" kindref="member" tooltip="Add Menu item that will close the app after sending a save event.">dtsgui_close</ref>(<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/>dtsmenu,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_menus_1gabf67f1b041be315b58ccacc7d193b273" kindref="member" tooltip="Add Menu item that will abort the app without save event been generated.">dtsgui_exit</ref>(<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/>dtsmenu,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="comment">/*panel<sp/>config*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal">dtsgui_pane<sp/><ref refid="group___c-_a_p_i-_panel_1gac763bff39863668014931022b469d836" kindref="member" tooltip="Create a pannel to be displayed.">dtsgui_panel</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>butmask,<sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref><sp/>type,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata);</highlight></codeline>
<codeline lineno="179"><highlight class="normal">dtsgui_pane<sp/><ref refid="group___c-_a_p_i-_panel_1gafb8efe017917a372826f7ddedb0e8bba" kindref="member" tooltip="Create a text display box with the supplied buffer.">dtsgui_textpane</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*buf);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1ga3f8f0e22fd2ecdcb915ec06851d12e3d" kindref="member" tooltip="Update the title on the panel if it exists.">dtsgui_settitle</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title);<sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1ga71826ffc718e3dc219e57befdb6f0d8c" kindref="member" tooltip="Delete a panel.">dtsgui_delpane</ref>(dtsgui_pane<sp/>pane);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group___c-_a_p_i-_panel_1ga6728901f40e67a95bc46150e1cf3c450" kindref="member" tooltip="Obtain a reference to the userdata of panel.">dtsgui_paneldata</ref>(dtsgui_pane<sp/>pane);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1gaa85445ee6c9a2c24d76824bb67cc2ab2" kindref="member" tooltip="Set event callback function for panel.">dtsgui_setevcallback</ref>(dtsgui_pane<sp/>pane,<ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref><sp/>evcb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1gab2f995a29a5b461ac67c7d9aa7091686" kindref="member" tooltip="Set config callback function for panel (UNUSED).">dtsgui_configcallback</ref>(dtsgui_pane<sp/>pane,<ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member" tooltip="Callback called on application execution.">dtsgui_configcb</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);<sp/></highlight><highlight class="comment">/*unused*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment">/*panel<sp/>xml<sp/>set/get*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1gad91055a12542c30dab4aacbd0761c785" kindref="member" tooltip="Pass a reference to a XML Doc Structure to the panel.">dtsgui_panel_setxml</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_doc<sp/>*<ref refid="group___c-_a_p_i-_panel_1ga75c6083aa363922fdf1fd19767eceeea" kindref="member" tooltip="Get reference to previously allocated XML Doc.">dtsgui_panelxml</ref>(dtsgui_pane<sp/>pane);</highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1ga28e2dbe2171ea35e32fa615aca55b934" kindref="member" tooltip="update all XML elements in the panel.">dtsgui_xmlpanel_update</ref>(dtsgui_pane<sp/>pane);</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"></highlight><highlight class="comment">/*tab<sp/>page*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref><sp/><ref refid="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" kindref="member" tooltip="Create a tab view panel.">dtsgui_tabwindow</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="193"><highlight class="normal">dtsgui_pane<sp/><ref refid="group___c-_a_p_i-_panel-_tab_1gae7cf11b65ccca530aecef7f7daa389e9" kindref="member" tooltip="Create and append a tab to the view.">dtsgui_newtabpage</ref>(<ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref><sp/>tv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>butmask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc,<sp/><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cdata);</highlight></codeline>
<codeline lineno="194"><highlight class="normal">dtsgui_pane<sp/><ref refid="group___c-_a_p_i-_panel-_tab_1ga26ee371ec8b1bed0f4a652eb99e04767" kindref="member" tooltip="Create and append a tab to the view.">dtsgui_tabpage_insert</ref>(<ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref><sp/>tv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>butmask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc,<sp/><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>pos,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>undo);</highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel-_tab_1gad3333a23e28993072b5ef4feed86778c" kindref="member" tooltip="Helper function to handle &amp;quot;Adding&amp;quot; a new tab from a existing tab.">dtsgui_newxmltabpane</ref>(<ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref><sp/>tabv,<sp/>dtsgui_pane<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vitem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tattr,<sp/><ref refid="dtsgui_8h_1ab5e1fa276d48b20d35f4ef20110c39ed" kindref="member">dtsgui_tabpane_newdata_cb</ref><sp/>data_cb,<sp/><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref><sp/>cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*cdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="196"><highlight class="normal"></highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight><highlight class="comment">/*tree<sp/>pane*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal">dtsgui_treeview<sp/><ref refid="group___c-_a_p_i-_panel_1gaa92cb9c6006aaf320e784f04500c3b25" kindref="member" tooltip="Create a treepane view.">dtsgui_treewindow</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/><ref refid="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" kindref="member">dtsgui_tree_cb</ref><sp/>tree_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc);</highlight></codeline>
<codeline lineno="199"><highlight class="normal">dtsgui_pane<sp/><ref refid="group___c-_a_p_i-_panel-_tree_1gad71b59e1898bce570cac2acd774f71e3" kindref="member" tooltip="Create a tree view panel with information.">dtsgui_treepane</ref>(dtsgui_treeview<sp/>tv,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>butmask,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc);</highlight></codeline>
<codeline lineno="200"><highlight class="normal">dtsgui_pane<sp/><ref refid="group___c-_a_p_i-_panel-_tree_1gab8713feb542a9bb13f8fe7e3bf568bda" kindref="member" tooltip="Create a tree view panel with information.">dtsgui_treepane_default</ref>(dtsgui_treeview<sp/></highlight><highlight class="keyword">self</highlight><highlight class="normal">,<sp/>dtsgui_treenode<sp/>node);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel-_tree_1gaaaf93911380c2f40eb8adbdc39ac36ac" kindref="member" tooltip="Update the XML Node with a new name.">dtsgui_nodesetxml</ref>(dtsgui_treeview<sp/>tree,<sp/>dtsgui_treenode<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title);</highlight></codeline>
<codeline lineno="202"><highlight class="normal">dtsgui_treenode<sp/><ref refid="group___c-_a_p_i-_panel-_tree_1ga550b7516bbb97dd66bc71033e7d996cb" kindref="member" tooltip="Create a container in the tree view.">dtsgui_treecont</ref>(dtsgui_treeview<sp/>tree,<sp/>dtsgui_treenode<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>can_edit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>can_sort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>can_del,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeid,<sp/><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref><sp/>p_cb,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="203"><highlight class="normal">dtsgui_treenode<sp/><ref refid="group___c-_a_p_i-_panel-_tree_1ga0f7146637609d42057e2cd21bd2bf33e" kindref="member" tooltip="Create a item in a container.">dtsgui_treeitem</ref>(dtsgui_treeview<sp/>tree,<sp/>dtsgui_treenode<sp/>node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>can_edit,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>can_sort,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>can_del,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nodeid,<sp/><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref><sp/>p_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel-_tree_1ga3e6618e889e7b58e3bf2ae3d63332178" kindref="member" tooltip="Add a XML node to the tree node.">dtsgui_treenodesetxml</ref>(dtsgui_treenode<sp/>tn,</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_node<sp/>*xn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tattr);</highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_node<sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1af56a924134315107e80c8b01bfbeee68" kindref="member">dtsgui_treenodegetxml</ref>(dtsgui_treenode<sp/>tn,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>**buf);</highlight></codeline>
<codeline lineno="206"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="group___c-_a_p_i-_panel-_tree_1ga00767aae723dce154065e0bb090c0e70" kindref="member" tooltip="Get reference for the user data of node.">dtsgui_treenodegetdata</ref>(dtsgui_treenode<sp/>tn);</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="group___c-_a_p_i-_panel-_tree_1gaedca58250011ea48c67fbc4faa14278f" kindref="member" tooltip="Get the name of the nodes parent.">dtsgui_treenodeparent</ref>(dtsgui_treenode<sp/>tn);</highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel-_tree_1ga55a99744231b294667ece32a1087042f" kindref="member" tooltip="Helper function to handle &amp;quot;Adding&amp;quot; a new node from a existing node.">dtsgui_newxmltreenode</ref>(dtsgui_treeview<sp/>tree,<sp/>dtsgui_pane<sp/>p,<sp/>dtsgui_treenode<sp/>tn,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vitem,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*tattr,</highlight></codeline>
<codeline lineno="209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nid,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>flags,<sp/><ref refid="dtsgui_8h_1a52992645e33e4d92c8e68c3490239c75" kindref="member">dtsgui_xmltreenode_cb</ref><sp/>node_cb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data,<sp/><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref><sp/>p_cb);</highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel-_tree_1gadc59452935e169e8e78c178aed0b77c0" kindref="member" tooltip="Get the node id of a tree node.">dtsgui_treenodeid</ref>(dtsgui_treenode<sp/>tn);</highlight></codeline>
<codeline lineno="211"><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight><highlight class="comment">/*convert<sp/>panel<sp/>elements<sp/>to<sp/>a<sp/>xml<sp/>node<sp/>with<sp/>attributes*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_node<sp/>*<ref refid="group___c-_a_p_i-_panel_1ga9c1222d2fe8fa5066a2c55e4b71c2cac" kindref="member" tooltip="Create a node from the elements on the panel.">dtsgui_panetoxml</ref>(dtsgui_pane<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nodeval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attrkey);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="comment">/*run<sp/>modal<sp/>dialog*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_panel_1ga3f904089ceb734323477f2b3dbac4a41" kindref="member" tooltip="Execute a dialog panel. Pop up and run a dialog pane the result will be obtained int the event handle...">dtsgui_rundialog</ref>(dtsgui_pane<sp/>pane,<sp/><ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref><sp/>evcb,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="comment">/*form<sp/>items</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*list/combo<sp/>box<sp/>must<sp/>be<sp/>unrefed<sp/>when<sp/>all<sp/>items<sp/>added</highlight></codeline>
<codeline lineno="221"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a9bbd9bb4aa7a921fc64742ecf3b0f61d" kindref="member">dtsgui_textbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a89eb3889f372aaec58543d51d881c822" kindref="member">dtsgui_textbox_multi</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a42a80bcfa5dfb41d87e548eb146261e1" kindref="member">dtsgui_passwdbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1ad9a5fa9a5623850a3889e305ef3da717" kindref="member">dtsgui_checkbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*checkval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uncheck,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ischecked,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a21dbebc529c734dffe528f2b15b2a441" kindref="member">dtsgui_listbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a554b15e578927450a5ee9128483885ca" kindref="member">dtsgui_combobox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="228"><highlight class="normal"></highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment">/*XML<sp/>form<sp/>items<sp/>-<sp/>see<sp/>above<sp/>for<sp/>need<sp/>to<sp/>unref<sp/>list/combo<sp/>boxes*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a8eca510dc07eee0cd113f852fe67caa6" kindref="member">dtsgui_xmltextbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fattr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a1e60e1a55957b1055c99df5a45f18bce" kindref="member">dtsgui_xmltextbox_multi</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fattr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1ab8e603da01cb2c17d0ecfbbe216ac750" kindref="member">dtsgui_xmlpasswdbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fattr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="233"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a2a2a0a7402e2f1bbbd5eeff3446a08fe" kindref="member">dtsgui_xmlcheckbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*checkval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uncheckval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fattr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="234"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a0f5275b68ac882154ab7b2bf48e47ef2" kindref="member">dtsgui_xmllistbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fattr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a9472a3941bf352a063fa5e55a6016fdc" kindref="member">dtsgui_xmlcombobox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*node,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fattr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*fval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="comment">/*XML<sp/>form<sp/>items<sp/>-<sp/>see<sp/>above<sp/>for<sp/>need<sp/>to<sp/>unref<sp/>list/combo<sp/>boxes*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1afe0c58df358c2f9efc35c153f0cbe26f" kindref="member">dtsgui_xnode_textbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a4212d0d416149eb28a4b09a8a6e8d032" kindref="member">dtsgui_xnode_textbox_multi</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="240"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1aae0cdf1caf3652516cfef827a8bea94f" kindref="member">dtsgui_xnode_passwdbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="241"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a471bb38231515cd799b3f227593dadb8" kindref="member">dtsgui_xnode_checkbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*checkval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*uncheckval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*<ref refid="dtsgui_8h_1ab46668a5a74bd51597aca686c4e481d6" kindref="member">dtsgui_xnode_listbox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*<ref refid="dtsgui_8h_1a09063c2d2a097eb4faaffd5e56153a4a" kindref="member">dtsgui_xnode_combobox</ref>(dtsgui_pane<sp/>pane,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*attr);</highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="comment">/*add<sp/>item<sp/>to<sp/>list*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="246"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a557f314ceb047c6d2ee3ec5f40e6b93a" kindref="member">dtsgui_listbox_add</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*lbox,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*value);</highlight></codeline>
<codeline lineno="247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a6585281832905a2e769f8b0f813a67e0" kindref="member">dtsgui_listbox_addxml</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*lb,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpath,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*nattr,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*vattr);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1aaa4e4de11048d7e32151628f4428cf3e" kindref="member">dtsgui_listbox_set</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*listbox,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="comment">/*message<sp/>box&apos;s*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1a5761cfa6ab849723e50760a9642efc9f" kindref="member">dtsgui_confirm</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1ad331a82b0502bea7d78545c6efb72b78" kindref="member">dtsgui_alert</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text);</highlight></codeline>
<codeline lineno="253"><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment">/*progress<sp/>bar*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_progress_1gac4185ec71523c1735f1da2cb6dc876d3" kindref="member" tooltip="Initialise the progress dialog Pop up a dialog box that can be updated to showprogress with a optiona...">dtsgui_progress_start</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*text,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>maxval,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>quit);</highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_progress_1gabda6276de46c13fb4e0831bb8c8d1ec1" kindref="member" tooltip="Update the progress bar counter This function updates the current progress value and optionally allow...">dtsgui_progress_update</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newval,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newtext);</highlight></codeline>
<codeline lineno="257"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_progress_1ga7bd617a3f00cb21ae6df7a37eba0dc7b" kindref="member" tooltip="Increments the counter by adding to it not setting it.">dtsgui_progress_increment</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ival,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>newtext);</highlight></codeline>
<codeline lineno="258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_progress_1ga528f638b6cb7b0d813e350a0b0c7262c" kindref="member" tooltip="Disable the progress bar.">dtsgui_progress_end</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui);</highlight></codeline>
<codeline lineno="259"><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>get<sp/>bucket<sp/>list<sp/>of<sp/>form<sp/>items*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">bucket_list<sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a9a2e87bf30be8644653d11754fcb4e26" kindref="member">dtsgui_panel_items</ref>(dtsgui_pane<sp/>pane);</highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a30bc1422cf3395b150773320ffda00ea" kindref="member">dtsgui_item_data</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*fi);</highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a2cb1581f47559805b221f9290f9ec83e" kindref="member">dtsgui_item_name</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*fi);</highlight></codeline>
<codeline lineno="264"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1adc168d1ed91fc91be2bb7bf7b060dd62" kindref="member">dtsgui_item_value</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*fi);</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classform__item" kindref="compound">form_item</ref><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a3af426dd6bf50cb6bd7232c4ea5b92f6" kindref="member">dtsgui_finditem</ref>(dtsgui_pane<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1a37f578498eb38e545906898e7250e6bb" kindref="member">dtsgui_findvalue</ref>(dtsgui_pane<sp/>p,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight><highlight class="comment">/*Wizards*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref><sp/>*<ref refid="group___c-_a_p_i-_wizard_1ga2e1e2013214ae275160b8c87e6cb3d89" kindref="member" tooltip="Create a new wizard.">dtsgui_newwizard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title);</highlight></codeline>
<codeline lineno="270"><highlight class="normal">dtsgui_pane<sp/><ref refid="group___c-_a_p_i-_wizard_1ga3e76b1ea2eebb91e1d0b5a55649d65e6" kindref="member" tooltip="Create a panel appended to the wizard.">dtsgui_wizard_addpage</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref><sp/>*dtswiz,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*userdata,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*xmldoc);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group___c-_a_p_i-_wizard_1ga25174d47f2e9680d41aebdf08ff9b979" kindref="member" tooltip="Run the wizard.">dtsgui_runwizard</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref><sp/>*dtswiz);</highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returned<sp/>values<sp/>need<sp/>to<sp/>be<sp/>unref&apos;d*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1ad2b11bd5e9e51dcba9f53f4969f1f25c" kindref="member">dtsgui_filesave</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filter);</highlight></codeline>
<codeline lineno="275"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1ad458f5d64710487c7213a4921a5ebc99" kindref="member">dtsgui_fileopen</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>dtsgui<sp/>*dtsgui,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*filter);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment">/*utils*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="278"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="namespace_d_t_s___c___a_p_i_1ab20156180905342ce3bc648253507f73" kindref="member">dtsgui_menuenable</ref>(<ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref><sp/>dm,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>enable);</highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">curl_post<sp/>*<ref refid="group___c-_a_p_i-_panel_1ga4d0d6742f61c91fb590b3728a7229150" kindref="member" tooltip="Prepare a HTTP POST structure from panel.">dtsgui_pane2post</ref>(dtsgui_pane<sp/>p);</highlight></codeline>
<codeline lineno="280"><highlight class="normal"></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>returns<sp/>auth<sp/>struct<sp/>needs<sp/>to<sp/>be<sp/>un-ref&apos;d*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">basic_auth<sp/>*<ref refid="namespace_d_t_s___c___a_p_i_1ab2431470ff495d71aae8e41368a214cb" kindref="member">dtsgui_pwdialog</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*user,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*passwd,</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data);</highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__WIN32</highlight></codeline>
<codeline lineno="285"><highlight class="preprocessor"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>getwin32folder(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>csidl,<sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*path);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__WIN32*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="287"><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>||<sp/>__DTS_C_API*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="289"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight></codeline>
<codeline lineno="290"><highlight class="preprocessor"></highlight><highlight class="normal">}}</highlight></codeline>
<codeline lineno="291"><highlight class="normal"></highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;wx/app.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal">wxDECLARE_EVENT(DTS_APP_EVENT,<sp/>wxCommandEvent);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__cplusplus<sp/>extern<sp/>and<sp/>namespace*/</highlight><highlight class="preprocessor"></highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>DTSGUI_H_INCLUDED*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/usr/src/dtsapplib/dtsguiapp/src/include/dtsgui.h"/>
  </compounddef>
</doxygen>
