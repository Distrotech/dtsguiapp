<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="interface_8c" kind="file">
    <compoundname>interface.c</compoundname>
    <includes local="no">stdlib.h</includes>
    <includes local="no">string.h</includes>
    <includes refid="dtsgui_8h" local="yes">dtsgui.h</includes>
    <includes refid="private_8h" local="yes">private.h</includes>
    <incdepgraph>
      <node id="13">
        <label>stdint.h</label>
      </node>
      <node id="10">
        <label>stdlib.h</label>
      </node>
      <node id="11">
        <label>string.h</label>
      </node>
      <node id="12">
        <label>dtsgui.h</label>
        <link refid="dtsgui_8h"/>
        <childnode refid="13" relation="include">
        </childnode>
        <childnode refid="14" relation="include">
        </childnode>
      </node>
      <node id="15">
        <label>private.h</label>
        <link refid="private_8h"/>
      </node>
      <node id="14">
        <label>dtsapp.h</label>
      </node>
      <node id="9">
        <label>app/interface.c</label>
        <link refid="interface.c"/>
        <childnode refid="10" relation="include">
        </childnode>
        <childnode refid="11" relation="include">
        </childnode>
        <childnode refid="12" relation="include">
        </childnode>
        <childnode refid="15" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <innerclass refid="structnew__iface__data" prot="public">new_iface_data</innerclass>
    <innerclass refid="structiface__cdata" prot="public">iface_cdata</innerclass>
      <sectiondef kind="func">
      <memberdef kind="function" id="interface_8c_1af0850a1d3d424533abf6f42eb7603b58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_iface_cdata</definition>
        <argsstring>(void *data)</argsstring>
        <name>free_iface_cdata</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="35" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="35" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1a3a6216b44ef12f4343578439ea097c50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structiface__cdata" kindref="compound">iface_cdata</ref> *</type>
        <definition>struct iface_cdata* get_iface_cdata</definition>
        <argsstring>(const char *val)</argsstring>
        <name>get_iface_cdata</name>
        <param>
          <type>const char *</type>
          <declname>val</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="43" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="43" bodyend="52"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1ad806ada5b6aa10cb8e8b21af8fe03c33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void free_newiface_data</definition>
        <argsstring>(void *data)</argsstring>
        <name>free_newiface_data</name>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="54" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="54" bodyend="61"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1a23ef5c5cf103f36dd179c5625f8f8576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="structnew__iface__data" kindref="compound">new_iface_data</ref> *</type>
        <definition>struct new_iface_data* get_newiface_data</definition>
        <argsstring>(dtsgui_tabview tv, struct xml_doc *xmldoc)</argsstring>
        <name>get_newiface_data</name>
        <param>
          <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="63" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="63" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1ad174419104751f817b6b094628bd9846" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void handle_newxmltabpane</definition>
        <argsstring>(struct xml_doc *xmldoc, struct xml_node *xn, void *tdata, void **cdata, int *last)</argsstring>
        <name>handle_newxmltabpane</name>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type>struct xml_node *</type>
          <declname>xn</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>tdata</declname>
        </param>
        <param>
          <type>void **</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>int *</type>
          <declname>last</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="77" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="77" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1a2079939d5d21847b07c782120206b7ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int handle_updatetabpane</definition>
        <argsstring>(struct dtsgui *dtsgui, dtsgui_pane p, int type, int event, void *data)</argsstring>
        <name>handle_updatetabpane</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>int</type>
          <declname>type</declname>
        </param>
        <param>
          <type>int</type>
          <declname>event</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="86" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="86" bodyend="121"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1aec69e5698c53680c3551eeb9e05cbaf6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void network_iface_pane_cb</definition>
        <argsstring>(dtsgui_pane p, void *data)</argsstring>
        <name>network_iface_pane_cb</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="123" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="123" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1adcfa585026374cce3c2443ea55cebc25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void network_iface_new_pane_cb</definition>
        <argsstring>(dtsgui_pane p, void *data)</argsstring>
        <name>network_iface_new_pane_cb</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="137" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="137" bodyend="142"/>
      </memberdef>
      <memberdef kind="function" id="interface_8c_1abf43f59e582eee9f27734b14c8307819" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane iface_config</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, void *data)</argsstring>
        <name>iface_config</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c" line="145" bodyfile="/usr/src/dtsapplib/dtsguiapp/app/interface.c" bodystart="145" bodyend="184"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2"><highlight class="comment"><sp/><sp/><sp/><sp/>Distrotech<sp/>Solutions<sp/>wxWidgets<sp/>Gui<sp/>Interface</highlight></codeline>
<codeline lineno="3"><highlight class="comment"><sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2013<sp/>Gregory<sp/>Hinton<sp/>Nietsky<sp/>&lt;gregory@distrotech.co.za&gt;</highlight></codeline>
<codeline lineno="4"><highlight class="comment"></highlight></codeline>
<codeline lineno="5"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>free<sp/>software:<sp/>you<sp/>can<sp/>redistribute<sp/>it<sp/>and/or<sp/>modify</highlight></codeline>
<codeline lineno="6"><highlight class="comment"><sp/><sp/><sp/><sp/>it<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>as<sp/>published<sp/>by</highlight></codeline>
<codeline lineno="7"><highlight class="comment"><sp/><sp/><sp/><sp/>the<sp/>Free<sp/>Software<sp/>Foundation,<sp/>either<sp/>version<sp/>3<sp/>of<sp/>the<sp/>License,<sp/>or</highlight></codeline>
<codeline lineno="8"><highlight class="comment"><sp/><sp/><sp/><sp/>(at<sp/>your<sp/>option)<sp/>any<sp/>later<sp/>version.</highlight></codeline>
<codeline lineno="9"><highlight class="comment"></highlight></codeline>
<codeline lineno="10"><highlight class="comment"><sp/><sp/><sp/><sp/>This<sp/>program<sp/>is<sp/>distributed<sp/>in<sp/>the<sp/>hope<sp/>that<sp/>it<sp/>will<sp/>be<sp/>useful,</highlight></codeline>
<codeline lineno="11"><highlight class="comment"><sp/><sp/><sp/><sp/>but<sp/>WITHOUT<sp/>ANY<sp/>WARRANTY;<sp/>without<sp/>even<sp/>the<sp/>implied<sp/>warranty<sp/>of</highlight></codeline>
<codeline lineno="12"><highlight class="comment"><sp/><sp/><sp/><sp/>MERCHANTABILITY<sp/>or<sp/>FITNESS<sp/>FOR<sp/>A<sp/>PARTICULAR<sp/>PURPOSE.<sp/><sp/>See<sp/>the</highlight></codeline>
<codeline lineno="13"><highlight class="comment"><sp/><sp/><sp/><sp/>GNU<sp/>General<sp/>Public<sp/>License<sp/>for<sp/>more<sp/>details.</highlight></codeline>
<codeline lineno="14"><highlight class="comment"></highlight></codeline>
<codeline lineno="15"><highlight class="comment"><sp/><sp/><sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>GNU<sp/>General<sp/>Public<sp/>License</highlight></codeline>
<codeline lineno="16"><highlight class="comment"><sp/><sp/><sp/><sp/>along<sp/>with<sp/>this<sp/>program.<sp/><sp/>If<sp/>not,<sp/>see<sp/>&lt;http://www.gnu.org/licenses/&gt;.</highlight></codeline>
<codeline lineno="17"><highlight class="comment">*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="18"><highlight class="normal"></highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;stdlib.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="dtsgui_8h" kindref="compound">dtsgui.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="private_8h" kindref="compound">private.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight></codeline>
<codeline lineno="26" refid="structnew__iface__data" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnew__iface__data" kindref="compound">new_iface_data</ref><sp/>{</highlight></codeline>
<codeline lineno="27" refid="structnew__iface__data_1a9d79a7426a503e08072ca03cd2e03bd2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref><sp/><ref refid="structnew__iface__data_1a9d79a7426a503e08072ca03cd2e03bd2" kindref="member">tv</ref>;</highlight></codeline>
<codeline lineno="28" refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_doc<sp/>*<ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref>;</highlight></codeline>
<codeline lineno="29"><highlight class="normal">};</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31" refid="structiface__cdata" refkind="compound"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>{</highlight></codeline>
<codeline lineno="32" refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="33"><highlight class="normal">};</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35" refid="interface_8c_1af0850a1d3d424533abf6f42eb7603b58" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8c_1af0850a1d3d424533abf6f42eb7603b58" kindref="member">free_iface_cdata</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="36"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>*cdata<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)cdata-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="41"><highlight class="normal">}</highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="interface_8c_1a3a6216b44ef12f4343578439ea097c50" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>*<ref refid="interface_8c_1a3a6216b44ef12f4343578439ea097c50" kindref="member">get_iface_cdata</ref>(</highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*val)<sp/>{</highlight></codeline>
<codeline lineno="44"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>*cd;</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(cd<sp/>=<sp/>objalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*cd),<sp/><ref refid="interface_8c_1af0850a1d3d424533abf6f42eb7603b58" kindref="member">free_iface_cdata</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="47"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="48"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOC_CONST(cd-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>,<sp/>val);</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>cd;</highlight></codeline>
<codeline lineno="52"><highlight class="normal">}</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="interface_8c_1ad806ada5b6aa10cb8e8b21af8fe03c33" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8c_1ad806ada5b6aa10cb8e8b21af8fe03c33" kindref="member">free_newiface_data</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnew__iface__data" kindref="compound">new_iface_data</ref><sp/>*nd<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(nd-&gt;<ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objunref(nd-&gt;<ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal">}</highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="interface_8c_1a23ef5c5cf103f36dd179c5625f8f8576" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnew__iface__data" kindref="compound">new_iface_data</ref><sp/>*<ref refid="interface_8c_1a23ef5c5cf103f36dd179c5625f8f8576" kindref="member">get_newiface_data</ref>(<ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref><sp/><ref refid="structnew__iface__data_1a9d79a7426a503e08072ca03cd2e03bd2" kindref="member">tv</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*<ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref>)<sp/>{</highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnew__iface__data" kindref="compound">new_iface_data</ref><sp/>*nd;</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(nd<sp/>=<sp/>objalloc(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(*nd),<sp/><ref refid="interface_8c_1ad806ada5b6aa10cb8e8b21af8fe03c33" kindref="member">free_newiface_data</ref>)))<sp/>{</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xmldoc<sp/>&amp;&amp;<sp/>objref(xmldoc))<sp/>{</highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref><sp/>=<sp/><ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref>;</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><sp/>nd-&gt;<ref refid="structnew__iface__data_1a9d79a7426a503e08072ca03cd2e03bd2" kindref="member">tv</ref><sp/>=<sp/><ref refid="structnew__iface__data_1a9d79a7426a503e08072ca03cd2e03bd2" kindref="member">tv</ref>;</highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>nd;</highlight></codeline>
<codeline lineno="75"><highlight class="normal">}</highlight></codeline>
<codeline lineno="76"><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="interface_8c_1ad174419104751f817b6b094628bd9846" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8c_1ad174419104751f817b6b094628bd9846" kindref="member">handle_newxmltabpane</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_doc<sp/>*<ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref>,<sp/></highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/>xml_node<sp/>*xn,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*tdata,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>**cdata,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>*last)<sp/>{</highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>*ndat<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(xn-&gt;value<sp/>&amp;&amp;<sp/>(ndat<sp/>=<sp/><ref refid="interface_8c_1a3a6216b44ef12f4343578439ea097c50" kindref="member">get_iface_cdata</ref>(xn-&gt;value)))<sp/>{</highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdata[0]<sp/>=<sp/>ndat;</highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="83"><highlight class="normal">}</highlight></codeline>
<codeline lineno="84"><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight><highlight class="comment">/*update<sp/>data<sp/>and<sp/>let<sp/>system<sp/>continue<sp/>by<sp/>&quot;skiping*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="interface_8c_1a2079939d5d21847b07c782120206b7ce" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="interface_8c_1a2079939d5d21847b07c782120206b7ce" kindref="member">handle_updatetabpane</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classdtsgui" kindref="compound">dtsgui</ref><sp/>*<ref refid="classdtsgui" kindref="compound">dtsgui</ref>,<sp/><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>type,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>event,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="87"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>*cdata<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="88"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(type<sp/>!=<sp/><ref refid="dtsgui_8h_1a54d7edaba9c015c3b5310ed3080b82e6a331937b86eb259d1d84728d28fbed79d" kindref="member">wx_PANEL_EVENT_BUTTON</ref>)<sp/>{</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(event)<sp/>{</highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302eca6ce91176e6c929e87d7acbd000d07f79" kindref="member">wx_PANEL_EVENT_BUTTON_YES</ref>:</highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ecadb8742f8472eb90558cfbf8e3914553b" kindref="member">wx_PANEL_EVENT_BUTTON_NO</ref>:</highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!cdata<sp/>||<sp/>!(name<sp/>=<sp/><ref refid="dtsgui_8h_1a670cae0571f32de4e06c4d32dd11e9d8" kindref="member">dtsgui_findvalue</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;iface&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><sp/>objlock(cdata);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(cdata-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>)<sp/>{</highlight></codeline>
<codeline lineno="109"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)cdata-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>);</highlight></codeline>
<codeline lineno="110"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdata-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref><sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><sp/>ALLOC_CONST(cdata-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>,<sp/>name);</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><sp/>objunlock(cdata);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>((name<sp/>=<sp/><ref refid="dtsgui_8h_1a670cae0571f32de4e06c4d32dd11e9d8" kindref="member">dtsgui_findvalue</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1ab1a78fdb6f0c4066da7491ddef1ac990" kindref="member">dtsgui_setstatus</ref>(p,<sp/>name);</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>free((</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)name);</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>1;</highlight></codeline>
<codeline lineno="121"><highlight class="normal">}</highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="interface_8c_1aec69e5698c53680c3551eeb9e05cbaf6" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8c_1aec69e5698c53680c3551eeb9e05cbaf6" kindref="member">network_iface_pane_cb</ref>(<ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>*cdata<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*iface;</highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*xpre<sp/>=<sp/></highlight><highlight class="stringliteral">&quot;/config/IP/Interfaces&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><sp/>objlock(cdata);</highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/><sp/>iface<sp/>=<sp/>cdata-&gt;<ref refid="structiface__cdata_1afbf1d003b7573fb72ce7a31b527557cb" kindref="member">name</ref>;</highlight></codeline>
<codeline lineno="130"><highlight class="normal"><sp/><sp/><sp/><sp/>objunlock(cdata);</highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a2d12f82c087187d64f9d8bd294935c2d" kindref="member">dtsgui_xmltextbox</ref>(p,<sp/></highlight><highlight class="stringliteral">&quot;Name&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/>xpre,<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">,<sp/>NULL,<sp/>iface,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="133"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="netconfig_8c_1ab77c80061336502da4c2cc2d2c11f4a0" kindref="member">network_iface_pane</ref>(p,<sp/>xpre,<sp/>iface);</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a5554fe3d240dc18751404d2fc4f56d60" kindref="member">dtsgui_setevcallback</ref>(p,<sp/><ref refid="interface_8c_1a2079939d5d21847b07c782120206b7ce" kindref="member">handle_updatetabpane</ref>,<sp/>cdata);</highlight></codeline>
<codeline lineno="135"><highlight class="normal">}</highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="interface_8c_1adcfa585026374cce3c2443ea55cebc25" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="interface_8c_1adcfa585026374cce3c2443ea55cebc25" kindref="member">network_iface_new_pane_cb</ref>(<ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref><sp/>p,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="138"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnew__iface__data" kindref="compound">new_iface_data</ref><sp/>*nd<sp/>=<sp/>data;</highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="netconfig_8c_1a3d43e57bb96cf8bd603872099c3bc038" kindref="member">network_iface_new_pane</ref>(p,<sp/>data);</highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1ae08578b520ba3285fb636c970db7d42e" kindref="member">dtsgui_newxmltabpane</ref>(nd-&gt;<ref refid="structnew__iface__data_1a9d79a7426a503e08072ca03cd2e03bd2" kindref="member">tv</ref>,<sp/>p,<sp/></highlight><highlight class="stringliteral">&quot;/config/IP/Interfaces&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;iface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">,<sp/><ref refid="interface_8c_1ad174419104751f817b6b094628bd9846" kindref="member">handle_newxmltabpane</ref>,<sp/><ref refid="interface_8c_1aec69e5698c53680c3551eeb9e05cbaf6" kindref="member">network_iface_pane_cb</ref>,<sp/>NULL,<sp/>nd-&gt;<ref refid="structnew__iface__data_1a1e4c0298e74a4fe178240c7335ca7acf" kindref="member">xmldoc</ref>,<sp/>nd);</highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145" refid="private_8h_1abf43f59e582eee9f27734b14c8307819" refkind="member"><highlight class="normal"><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref><sp/><ref refid="interface_8c_1abf43f59e582eee9f27734b14c8307819" kindref="member">iface_config</ref>(</highlight><highlight class="keyword">struct</highlight><highlight class="normal"><sp/><ref refid="classdtsgui" kindref="compound">dtsgui</ref><sp/>*<ref refid="classdtsgui" kindref="compound">dtsgui</ref>,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*title,<sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*data)<sp/>{</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref><sp/>tabv;</highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structnew__iface__data" kindref="compound">new_iface_data</ref><sp/>*nd;</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_doc<sp/>*xmldoc;</highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_search<sp/>*xp;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">xml_node<sp/>*xn;</highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*name;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal"><ref refid="structiface__cdata" kindref="compound">iface_cdata</ref><sp/>*cdata;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>*iter<sp/>=<sp/>NULL;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(xmldoc<sp/>=<sp/><ref refid="private_8h_1a65a24b9322f0fd002413f3e9e13272f0" kindref="member">app_getxmldoc</ref>(dtsgui)))<sp/>{</highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!(xp<sp/>=<sp/>xml_xpath(xmldoc,<sp/></highlight><highlight class="stringliteral">&quot;/config/IP/Interfaces/Interface&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">)))<sp/>{</highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objunref(xmldoc);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>NULL;</highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><sp/><sp/><sp/><sp/>tabv<sp/>=<sp/><ref refid="dtsgui_8h_1a4164d90e36519fb0c61cf583fe808154" kindref="member">dtsgui_tabwindow</ref>(dtsgui,<sp/>title,<sp/>NULL);</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(xn<sp/>=<sp/>xml_getfirstnode(xp,<sp/>&amp;iter);<sp/>xn;<sp/>xn<sp/>=<sp/>xml_getnextnode(iter))<sp/>{</highlight></codeline>
<codeline lineno="167"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name<sp/>=<sp/>xml_getattr(xn,<sp/></highlight><highlight class="stringliteral">&quot;name&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="168"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cdata<sp/>=<sp/><ref refid="interface_8c_1a3a6216b44ef12f4343578439ea097c50" kindref="member">get_iface_cdata</ref>(xn-&gt;value);</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a346ef4dc47cab9f5b572a46db5665aa3" kindref="member">dtsgui_newtabpage</ref>(tabv,<sp/>name,<sp/><ref refid="dtsgui_8h_1a4ef37ee1286eb68a9f5663813f134be2" kindref="member">wx_PANEL_BUTTON_ACTION</ref>,<sp/>NULL,<sp/>xmldoc,<sp/><ref refid="interface_8c_1aec69e5698c53680c3551eeb9e05cbaf6" kindref="member">network_iface_pane_cb</ref>,<sp/>cdata);</highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objunref(cdata);</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objunref(xn);</highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"><sp/><sp/><sp/><sp/>nd<sp/>=<sp/><ref refid="interface_8c_1a23ef5c5cf103f36dd179c5625f8f8576" kindref="member">get_newiface_data</ref>(tabv,<sp/>xmldoc);</highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="dtsgui_8h_1a346ef4dc47cab9f5b572a46db5665aa3" kindref="member">dtsgui_newtabpage</ref>(tabv,<sp/></highlight><highlight class="stringliteral">&quot;Add&quot;</highlight><highlight class="normal">,<sp/><ref refid="dtsgui_8h_1a4ef37ee1286eb68a9f5663813f134be2" kindref="member">wx_PANEL_BUTTON_ACTION</ref>,<sp/>NULL,<sp/>xmldoc,<sp/><ref refid="interface_8c_1adcfa585026374cce3c2443ea55cebc25" kindref="member">network_iface_new_pane_cb</ref>,<sp/>nd);</highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/>objunref(nd);</highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(iter)<sp/>{</highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objunref(iter);</highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/>objunref(xp);</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/>objunref(xmldoc);</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>tabv;</highlight></codeline>
<codeline lineno="184"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="/usr/src/dtsapplib/dtsguiapp/app/interface.c"/>
  </compounddef>
</doxygen>
