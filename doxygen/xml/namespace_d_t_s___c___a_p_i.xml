<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="namespace_d_t_s___c___a_p_i" kind="namespace">
    <compoundname>DTS_C_API</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="group___c-_a_p_i_1ga295fb20974bd3ceb8a6d8ed6e13a6c70" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int DTS_C_API::menuid</definition>
        <argsstring></argsstring>
        <name>menuid</name>
        <initializer>= wxID_AUTO_LOWEST</initializer>
        <briefdescription>
<para>Static variable containing menuid incremented each time a menu is created. </para>        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="181" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="181" bodyend="-1"/>
        <referencedby refid="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" compoundref="wrapper_8cpp" startline="365" endline="368">dtsgui_newmenucb</referencedby>
        <referencedby refid="group___c-_a_p_i-_menus_1gabb8b44357ce2ce4a3fd028939cf8c700" compoundref="wrapper_8cpp" startline="338" endline="341">dtsgui_newmenuitem</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gab20156180905342ce3bc648253507f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_menuenable</definition>
        <argsstring>(dtsgui_menu dm, int enable)</argsstring>
        <name>dtsgui_menuenable</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable or disable all items in menu. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dm</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to enable/disable. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Enable all items if set to non zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/cxxapi.cpp" line="51" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/cxxapi.cpp" bodystart="51" bodyend="66"/>
        <referencedby refid="private_8h_1a2bcdb1dc60a2dc5383e027578faeb44e" compoundref="config_8c" startline="189" endline="217">config_menu</referencedby>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
        <referencedby refid="private_8h_1ae1a63d1e8add52ca63e83582891054fa" compoundref="config_8c" startline="69" endline="92">save_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gacecdb36b65ac3d5522a419a6b69c9f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_config</definition>
        <argsstring>(dtsgui_configcb confcallback_cb, void *userdata, struct point wsize, struct point wpos, const char *title, const char *status)</argsstring>
        <name>dtsgui_config</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></type>
          <declname>confcallback_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct <ref refid="structpoint" kindref="compound">point</ref></type>
          <declname>wsize</declname>
        </param>
        <param>
          <type>struct <ref refid="structpoint" kindref="compound">point</ref></type>
          <declname>wpos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Configure the GUI and create a application frame. </para>        </briefdescription>
        <detaileddescription>
<para>This is the first process required the application is created and the callback is executed.</para><para>Application processing continues until dtsgui_run is executed at this point the call back is executed and proccessing will be passed to the GUI App.</para><para>The userdata is returned in the callback.</para><para>The Callback must return a non zero value to indicate success should the application fail returning 0 will close the application.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_app" kindref="compound">DTSApp</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>confcallback_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function where processing will continue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>a refrenced object passed back to the config callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum/Initial size of the application window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Application position [Top Left Corner] of application placed on screen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title displayed on the application bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Default text displayed on the status bar. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="207" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="207" bodyend="209"/>
        <referencedby refid="group___d_t_s-_a_p_p_1ga3c04138a5bfe5d72780bb7e82a18e627" compoundref="wxforms_8c" startline="167" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga3ac9d5ef153d17266a704a373d591962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_run</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>dtsgui_run</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Pass execution to the GUI and activate the frame. </para>        </briefdescription>
        <detaileddescription>
<para>Pass application processing to the GUI after calling the configure callback.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i_1gacecdb36b65ac3d5522a419a6b69c9f7f" kindref="member">dtsgui_config</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_app" kindref="compound">DTSApp</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of paramaters contained in argv. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of paramaters to be passed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value from callback function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="222" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="222" bodyend="224"/>
        <referencedby refid="group___d_t_s-_a_p_p_1ga3c04138a5bfe5d72780bb7e82a18e627" compoundref="wxforms_8c" startline="167" endline="207">main</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gaa224c0a868745526e6ac3c05970471c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_userdata</definition>
        <argsstring>(struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_userdata</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Obtain a reference for the application userdata. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This reference must be un refferenced.</para></simplesect>
<simplesect kind="see"><para><ref refid="classdtsgui_1a4d5bf22a505defc4ab13178ff95f2b32" kindref="member">dtsgui::GetUserData</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to application user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="235" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="235" bodyend="237"/>
        <references refid="classdtsgui_1a4d5bf22a505defc4ab13178ff95f2b32" compoundref="_d_t_s_app_8cpp" startline="85" endline="95">dtsgui::GetUserData</references>
        <referencedby refid="private_8h_1a6d9d2b0105df87000cb2bdecbff91239" compoundref="netconfig_8c" startline="740" endline="769">advanced_config</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p_1ga65a24b9322f0fd002413f3e9e13272f0" compoundref="wxforms_8c" startline="56" endline="75">app_getxmldoc</referencedby>
        <referencedby refid="private_8h_1a2bcdb1dc60a2dc5383e027578faeb44e" compoundref="config_8c" startline="189" endline="217">config_menu</referencedby>
        <referencedby refid="private_8h_1a01bdf27a0760d9da4bb77918735171c1" compoundref="config_8c" startline="150" endline="187">export_config</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p_1ga011cd0b131174029fed8babdf1c7a101" compoundref="wxforms_8c" startline="79" endline="102">file_menu</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga56c78e0d32a18452dcea4f026de2c889" compoundref="wizard_8c" startline="491" endline="514">newsys_wizard</referencedby>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
        <referencedby refid="private_8h_1ae1a63d1e8add52ca63e83582891054fa" compoundref="config_8c" startline="69" endline="92">save_config</referencedby>
        <referencedby refid="private_8h_1abc9a4e54439d7a701992752ec7b3f6b9" compoundref="config_8c" startline="112" endline="148">view_config_conf</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga529d973a998e39dba025dfcd96a9a706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setwindow</definition>
        <argsstring>(struct dtsgui *dtsgui, dtsgui_pane p)</argsstring>
        <name>dtsgui_setwindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Set the displayed panel to pane provided. </para>        </briefdescription>
        <detaileddescription>
<para>Switch the curent pane with the one provided this should not be done and rather use menu callbacks.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a7e9f18961fb55d1b9be667b81681803c" kindref="member">DTSFrame::SetWindow()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to display </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="249" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="249" bodyend="252"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1a7e9f18961fb55d1b9be667b81681803c" compoundref="_d_t_s_frame_8cpp" startline="235" endline="255">DTSFrame::SetWindow</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga4e766a49c1e9eba3f2c2fda47b8166aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_sendevent</definition>
        <argsstring>(struct dtsgui *dtsgui, int eid)</argsstring>
        <name>dtsgui_sendevent</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eid</declname>
        </param>
        <briefdescription>
<para>Emit a event handled by event callback&apos;s. </para>        </briefdescription>
        <detaileddescription>
<para>A event is emited and recived by all active handlers The ID can be determined as required. <simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a63488ecbdbe2770ea7d12ce2b06f1b72" kindref="member">DTSFrame::SendDTSEvent()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eid</parametername>
</parameternamelist>
<parameterdescription>
<para>Event ID to send </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="262" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="262" bodyend="265"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1a63488ecbdbe2770ea7d12ce2b06f1b72" compoundref="_d_t_s_frame_8cpp" startline="300" endline="305">DTSFrame::SendDTSEvent</references>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga1734b840fc0696b13d5b616df0ec3bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setuptoolbar</definition>
        <argsstring>(struct dtsgui *dtsgui, dtsgui_toolbar_create cb, void *data)</argsstring>
        <name>dtsgui_setuptoolbar</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga53eefce4ace6a7d72e49e9ae4c520226" kindref="member">dtsgui_toolbar_create</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Specify callback to run to create and activate the toolbar. </para>        </briefdescription>
        <detaileddescription>
<para>The toolbar has of yet not been wrapped into the C API Its recomended that a C++ object be linked that contains a derived class of wxToolbar. <simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a1fe29f6d56f11d1702a372416a659e3e" kindref="member">DTSFrame::SetupToolbar</ref> </para></simplesect>
<simplesect kind="warning"><para>This needs to be done in the application configuration callback. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Toolbar create callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be passed to the toolbar </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="278" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="278" bodyend="281"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1a1fe29f6d56f11d1702a372416a659e3e" compoundref="_d_t_s_frame_8cpp" startline="328" endline="347">DTSFrame::SetupToolbar</references>
        <referencedby refid="group___d_t_s-_a_p_p_1gaf12c2714c0878b7565d8b788931f9e50" compoundref="wxforms_8c" startline="130" endline="143">guiconfig_cb</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga164aa159bc57a744f012b49268796bbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_set_toolbar</definition>
        <argsstring>(struct dtsgui *dtsgui, int show)</argsstring>
        <name>dtsgui_set_toolbar</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Disable or enable the toolbar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui_1adbf932006dfc6df2266b5fbf34af67ac" kindref="member">dtsgui::ShowToolbar()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>show</parametername>
</parameternamelist>
<parameterdescription>
<para>Display the toolbar if non zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="289" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="289" bodyend="291"/>
        <references refid="classdtsgui_1adbf932006dfc6df2266b5fbf34af67ac" compoundref="_d_t_s_app_8cpp" startline="129" endline="135">dtsgui::ShowToolbar</references>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
        <referencedby refid="private_8h_1ae1a63d1e8add52ca63e83582891054fa" compoundref="config_8c" startline="69" endline="92">save_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gafc00c020f324c119956fcc38e7fd55db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_titleappend</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_titleappend</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Append text to the application frame title enclosed in square brackets. </para>        </briefdescription>
        <detaileddescription>
<para>Update the main application title bar text. <simplesect kind="see"><para><ref refid="classdtsgui_1a9d7432eacf96358d22797b37ee73caed" kindref="member">dtsgui::AppendTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application Data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to append </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="300" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="300" bodyend="302"/>
        <references refid="classdtsgui_1a9d7432eacf96358d22797b37ee73caed" compoundref="_d_t_s_app_8cpp" startline="105" endline="127">dtsgui::AppendTitle</references>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
        <referencedby refid="private_8h_1ae1a63d1e8add52ca63e83582891054fa" compoundref="config_8c" startline="69" endline="92">save_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
        <definition>dtsgui_menu DTS_C_API::dtsgui_newmenu</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *name)</argsstring>
        <name>dtsgui_newmenu</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a new menu and append it to the menu bar. </para>        </briefdescription>
        <detaileddescription>
<para>A new menu is created and appended to the menu bar the returned value will be passed to menu functions to append items to.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the menu. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="316" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="316" bodyend="319"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" compoundref="_d_t_s_frame_8cpp" startline="366" endline="373">DTSFrame::NewMenu</references>
        <referencedby refid="private_8h_1a2bcdb1dc60a2dc5383e027578faeb44e" compoundref="config_8c" startline="189" endline="217">config_menu</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p_1ga011cd0b131174029fed8babdf1c7a101" compoundref="wxforms_8c" startline="79" endline="102">file_menu</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p_1gae1b0e521306d90ee09f460064c015b2b" compoundref="wxforms_8c" startline="106" endline="120">help_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gabb8b44357ce2ce4a3fd028939cf8c700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1gaf59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
        <definition>dtsgui_menuitem DTS_C_API::dtsgui_newmenuitem</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *hint, dtsgui_pane p)</argsstring>
        <name>dtsgui_newmenuitem</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Create a menu item that will activate the pane provided. </para>        </briefdescription>
        <detaileddescription>
<para>this pane needs to be created and not deleted use of this function is discouraged. the callback menu function is recomended where a panel can be dynamically created and returned.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" kindref="member">DTSFrame::NewMenuItem()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" kindref="member">dtsgui_newmenucb()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu where to put append this item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data created on application startup and returned in most callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu hint with a &amp; indicating the highlighted short key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel must be a derived window of <ref refid="class_d_t_s_object" kindref="compound">DTSObject</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created menu item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="338" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="338" bodyend="341"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="group___c-_a_p_i_1ga295fb20974bd3ceb8a6d8ed6e13a6c70" compoundref="wrapper_8cpp" startline="181">menuid</references>
        <references refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" compoundref="_d_t_s_frame_8cpp" startline="435" endline="451">DTSFrame::NewMenuItem</references>
        <referencedby refid="group___d_t_s-_a_p_p_1gae1b0e521306d90ee09f460064c015b2b" compoundref="wxforms_8c" startline="106" endline="120">help_menu</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga77cb81a619f8c9ccd83cdf1e7c97aae9" compoundref="testing_8c" startline="128" endline="139">test_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1gaf59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
        <definition>dtsgui_menuitem DTS_C_API::dtsgui_newmenucb</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *hint, const char *name, int blank, dtsgui_dynpanel cb, void *data)</argsstring>
        <name>dtsgui_newmenucb</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blank</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a menu item that will call a function with supplied data to execute when selected. </para>        </briefdescription>
        <detaileddescription>
<para>The specified call back will be called passing the application pointer (dtsgui), the name and data ptr supplied. if this function returns a <ref refid="class_d_t_s_object" kindref="compound">DTSObject</ref> pane it will be displayed.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" kindref="member">DTSFrame::NewMenuItem()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu where to put append this item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data created on application startup and returned in most callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu hint with a &amp; indicating the highlighted short key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>displayed on status bar and returned in callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blank</parametername>
</parameternamelist>
<parameterdescription>
<para>if not zero will blank the display before executing callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to execute when selected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ptr to a referenced object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created menu item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="365" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="365" bodyend="368"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="group___c-_a_p_i_1ga295fb20974bd3ceb8a6d8ed6e13a6c70" compoundref="wrapper_8cpp" startline="181">menuid</references>
        <references refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" compoundref="_d_t_s_frame_8cpp" startline="435" endline="451">DTSFrame::NewMenuItem</references>
        <referencedby refid="private_8h_1a2bcdb1dc60a2dc5383e027578faeb44e" compoundref="config_8c" startline="189" endline="217">config_menu</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p_1ga011cd0b131174029fed8babdf1c7a101" compoundref="wxforms_8c" startline="79" endline="102">file_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gabf67f1b041be315b58ccacc7d193b273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_exit</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_exit</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Add Menu item that will abort the app without save event been generated. </para>        </briefdescription>
        <detaileddescription>
<para>A menu item will be appended to the supplied menu that when selected will generate a abort event [Alt-F4] confirmation will be requested.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" kindref="member">DTSFrame::CloseMenu()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="383" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="383" bodyend="386"/>
        <references refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" compoundref="_d_t_s_frame_8cpp" startline="353" endline="364">DTSFrame::CloseMenu</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="group___d_t_s-_a_p_p_1ga011cd0b131174029fed8babdf1c7a101" compoundref="wxforms_8c" startline="79" endline="102">file_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1ga58e38f8ef567c8f50e15a53507ee4a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_close</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_close</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Add Menu item that will close the app after sending a save event. </para>        </briefdescription>
        <detaileddescription>
<para>A menu item will be appended to the supplied menu that when selected will generate a close/save event confirmation will be requested.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" kindref="member">DTSFrame::CloseMenu()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="401" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="401" bodyend="404"/>
        <references refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" compoundref="_d_t_s_frame_8cpp" startline="353" endline="364">DTSFrame::CloseMenu</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="group___d_t_s-_a_p_p_1ga011cd0b131174029fed8babdf1c7a101" compoundref="wxforms_8c" startline="79" endline="102">file_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gaf06c34986c04d800883694733554033e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_about</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_about</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Add Menu item will pop up a &quot;about&quot; box. </para>        </briefdescription>
        <detaileddescription>
<para>Open an &quot;about&quot; box using the text supplied.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append about item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in box when menu is selected </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="418" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="418" bodyend="421"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1af57b68ada1f1958582fea200a2a315fc" compoundref="_d_t_s_frame_8cpp" startline="94" endline="102">DTSFrame::SetAbout</references>
        <referencedby refid="group___d_t_s-_a_p_p_1gae1b0e521306d90ee09f460064c015b2b" compoundref="wxforms_8c" startline="106" endline="120">help_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gaf655828d94de128cfd8269d03d649092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_menusep</definition>
        <argsstring>(dtsgui_menu dtsmenu)</argsstring>
        <name>dtsgui_menusep</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gafb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <briefdescription>
<para>Add Menu seperator to the menu. </para>        </briefdescription>
        <detaileddescription>
<para>A menu seperation line is appened to the menu.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append about item to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="433" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="433" bodyend="436"/>
        <referencedby refid="private_8h_1a2bcdb1dc60a2dc5383e027578faeb44e" compoundref="config_8c" startline="189" endline="217">config_menu</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p_1ga011cd0b131174029fed8babdf1c7a101" compoundref="wxforms_8c" startline="79" endline="102">file_menu</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p_1gae1b0e521306d90ee09f460064c015b2b" compoundref="wxforms_8c" startline="106" endline="120">help_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1ga99f0bbb3bf979d0102b7b19899ad79dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_menuitemenable</definition>
        <argsstring>(dtsgui_menuitem dmi, int enable)</argsstring>
        <name>dtsgui_menuitemenable</name>
        <param>
          <type><ref refid="group___c_o_r_e_1gaf59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
          <declname>dmi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
<para>Enable/Disable an menu item. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dmi</parametername>
</parameternamelist>
<parameterdescription>
<para>Menuitem </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>enable</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable the menu if set to 0. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="443" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="443" bodyend="446"/>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
        <referencedby refid="private_8h_1ae1a63d1e8add52ca63e83582891054fa" compoundref="config_8c" startline="69" endline="92">save_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gac763bff39863668014931022b469d836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_panel</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *name, const char *title, int butmask, enum panel_type type, void *userdata)</argsstring>
        <name>dtsgui_panel</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>enum <ref refid="group___c_o_r_e_1ga9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
<para>Create a pannel to be displayed. </para>        </briefdescription>
        <detaileddescription>
<para>This function is able to create and return various panels excluding Tab/Tree view panels.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a3b1105fb9c8e3b6909994e7f993eee20" kindref="member">DTSFrame::CreatePane()</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Text used in the status bar when panel is displayed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title set in the window Top/Middle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Buttons to be displayed values of panel_buttons or&apos;d together. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of panel to create [Excludes Tab/Tree Views] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced Obect passed stored in panel and available in event handlers. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Newly created panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="464" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="464" bodyend="467"/>
        <references refid="class_d_t_s_frame_1a3b1105fb9c8e3b6909994e7f993eee20" compoundref="_d_t_s_frame_8cpp" startline="375" endline="406">DTSFrame::CreatePane</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga77cb81a619f8c9ccd83cdf1e7c97aae9" compoundref="testing_8c" startline="128" endline="139">test_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gafb8efe017917a372826f7ddedb0e8bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_textpane</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *buf)</argsstring>
        <name>dtsgui_textpane</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Create a text display box with the text in the buffer been displayed. </para>        </briefdescription>
        <detaileddescription>
<para>This creates a panel that only contains the supplied buffer Scrollbars are used as required.</para><para>This window is read only.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1afc0dae8ce7b26ef38297d520a3144d2a" kindref="member">DTSFrame::TextPanel()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on the status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The text displayed in the pane. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New text panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="483" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="483" bodyend="486"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1afc0dae8ce7b26ef38297d520a3144d2a" compoundref="_d_t_s_frame_8cpp" startline="421" endline="433">DTSFrame::TextPanel</references>
        <referencedby refid="group___d_t_s-_a_p_p_1gae1b0e521306d90ee09f460064c015b2b" compoundref="wxforms_8c" startline="106" endline="120">help_menu</referencedby>
        <referencedby refid="private_8h_1abc9a4e54439d7a701992752ec7b3f6b9" compoundref="config_8c" startline="112" endline="148">view_config_conf</referencedby>
        <referencedby refid="private_8h_1abe0b9ce2252ec72774af23a0ec71424f" compoundref="config_8c" startline="94" endline="110">view_config_xml</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gaa92cb9c6006aaf320e784f04500c3b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
        <definition>dtsgui_treeview DTS_C_API::dtsgui_treewindow</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, dtsgui_tree_cb tree_cb, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_treewindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1gae088feda00f338f6ddd35daaacc44817" kindref="member">dtsgui_tree_cb</ref></type>
          <declname>tree_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a treepane view. </para>        </briefdescription>
        <detaileddescription>
<para>Create a split window with a tree control on the left and display area on right.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window" kindref="compound">DTSTreeWindow</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1gae088feda00f338f6ddd35daaacc44817" kindref="member">dtsgui_tree_cb</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga465794df2cb30731dfe34d3e7a4ed368" kindref="member">tree_cbtype</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Aplication data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on the status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called when a event of tree_cbtype is handled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML doc struct available in callback&apos;s and for managing XML nodes/panels. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="503" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="503" bodyend="506"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="private_8h_1a6d9d2b0105df87000cb2bdecbff91239" compoundref="netconfig_8c" startline="740" endline="769">advanced_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
        <definition>dtsgui_tabview DTS_C_API::dtsgui_tabwindow</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, void *data)</argsstring>
        <name>dtsgui_tabwindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a tab view panel. </para>        </briefdescription>
        <detaileddescription>
<para>Create a panel that will place pages as tabs along the top of the display. Clicking on the tab opens the panel in the display area.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in the event callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tab window. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="520" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="520" bodyend="523"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="group___d_t_s-_a_p_p-_iface_1gabf43f59e582eee9f27734b14c8307819" compoundref="interface_8c" startline="197" endline="236">iface_config</referencedby>
        <referencedby refid="private_8h_1aa1aa69985689f9714422c273fe968fdf" compoundref="pbxconfig_8c" startline="325" endline="350">pbx_settings</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gad91055a12542c30dab4aacbd0761c785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_panel_setxml</definition>
        <argsstring>(dtsgui_pane pane, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_panel_setxml</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Pass a reference to a XML Doc Structure to the panel. </para>        </briefdescription>
        <detaileddescription>
<para>Assign a reference to a XML Doc to the panel for use latter and with XML controls.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_object_1a1ae63425d8e5770a8b0717f37fd695b2" kindref="member">DTSObject::SetXMLDoc()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to be assigned the ref. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Document to be assigned. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="534" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="534" bodyend="537"/>
        <references refid="class_d_t_s_object_1a1ae63425d8e5770a8b0717f37fd695b2" compoundref="_d_t_s_panel_8cpp" startline="290" endline="303">DTSObject::SetXMLDoc</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga75c6083aa363922fdf1fd19767eceeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_doc *</type>
        <definition>struct xml_doc* DTS_C_API::dtsgui_panelxml</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_panelxml</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Get reference to previously allocated XML Doc. </para>        </briefdescription>
        <detaileddescription>
<para>Obtain a new reference to the xmldoc stored in the panel.</para><para><simplesect kind="note"><para>This must be un refferenced.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_d_t_s_object_1ae177d1cfd85be759810b252b98f2050d" kindref="member">DTSObject::GetXMLDoc()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to obtain the XML Info. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to XML Doc. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="550" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="550" bodyend="553"/>
        <references refid="class_d_t_s_object_1ae177d1cfd85be759810b252b98f2050d" compoundref="_d_t_s_panel_8cpp" startline="305" endline="314">DTSObject::GetXMLDoc</references>
        <referencedby refid="netconfig_8c_1afbdf0e8165311538e8b408c7ba2fabbf" compoundref="netconfig_8c" startline="446" endline="477">network_adsl_link</referencedby>
        <referencedby refid="netconfig_8c_1aa4d1bbd43067e6a75b7a441658a28646" compoundref="netconfig_8c" startline="479" endline="502">network_adsl_link_new</referencedby>
        <referencedby refid="netconfig_8c_1a53ff57cbb1a4442c4428c95746229150" compoundref="netconfig_8c" startline="37" endline="74">network_config</referencedby>
        <referencedby refid="netconfig_8c_1a3a749e8b1e9561bb168ba3aed04444a8" compoundref="netconfig_8c" startline="277" endline="318">network_newwifi</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga71826ffc718e3dc219e57befdb6f0d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_delpane</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_delpane</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Delete a panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is unlikly too be needed as the GUI manages panels.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel To Delete. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="561" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="561" bodyend="563"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1gae7cf11b65ccca530aecef7f7daa389e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_newtabpage</definition>
        <argsstring>(dtsgui_tabview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc, dtsgui_tabpanel_cb cb, void *cdata)</argsstring>
        <name>dtsgui_newtabpage</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1gab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <briefdescription>
<para>Create and append a tab to the view. </para>        </briefdescription>
        <detaileddescription>
<para>Append a tab to the tab view the tab will be configured when it is selected the callback will run to configure it.</para><para><simplesect kind="note"><para>Its also possible to configure the returned panel. </para><simplesectsep/><para>On win32 all tabs are configured when the view is activated.</para></simplesect>
<simplesect kind="see"><para><ref refid="group___c-_a_p_i-_panel-_tab_1ga26ee371ec8b1bed0f4a652eb99e04767" kindref="member">dtsgui_tabpage_insert</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" kindref="member">dtsgui_tabwindow()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" kindref="member">DTSTabWindow::CreateTab()</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1gab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tabview previously created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the pane Top/Center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of buttons to be placed on the panel and trigger events passed to the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object stored and made available in callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML document stored and made available to XML resources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed to the configuration callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="588" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="588" bodyend="591"/>
        <references refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" compoundref="_d_t_s_tree_window_8cpp" startline="991" endline="1012">DTSTabWindow::CreateTab</references>
        <referencedby refid="group___d_t_s-_a_p_p-_iface_1gabf43f59e582eee9f27734b14c8307819" compoundref="interface_8c" startline="197" endline="236">iface_config</referencedby>
        <referencedby refid="private_8h_1aa1aa69985689f9714422c273fe968fdf" compoundref="pbxconfig_8c" startline="325" endline="350">pbx_settings</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1ga26ee371ec8b1bed0f4a652eb99e04767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_tabpage_insert</definition>
        <argsstring>(dtsgui_tabview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc, dtsgui_tabpanel_cb cb, void *cdata, int pos, int undo)</argsstring>
        <name>dtsgui_tabpage_insert</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1gab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>undo</declname>
        </param>
        <briefdescription>
<para>Create and insert a tab in the view. </para>        </briefdescription>
        <detaileddescription>
<para>Insert a tab at the position specified and recreate the panel at position undo.</para><para><simplesect kind="see"><para>dtsgui_tabpage_newtabpage </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" kindref="member">dtsgui_tabwindow()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" kindref="member">DTSTabWindow::CreateTab()</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1gab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tabview previously created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the pane Top/Center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of buttons to be placed on the panel and trigger events passed to the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object stored and made available in callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML document stored and made available to XML resources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed to the configuration callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>pos</parametername>
</parameternamelist>
<parameterdescription>
<para>Position to insert into </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>undo</parametername>
</parameternamelist>
<parameterdescription>
<para>Delete and recreate the panel at this position </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Tab Pane </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="617" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="617" bodyend="620"/>
        <references refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" compoundref="_d_t_s_tree_window_8cpp" startline="991" endline="1012">DTSTabWindow::CreateTab</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1gad3333a23e28993072b5ef4feed86778c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_newxmltabpane</definition>
        <argsstring>(dtsgui_tabview tabv, dtsgui_pane p, const char *xpath, const char *node, const char *vitem, const char *tattr, dtsgui_tabpane_newdata_cb data_cb, dtsgui_tabpanel_cb cb, void *cdata, struct xml_doc *xmldoc, void *data)</argsstring>
        <name>dtsgui_newxmltabpane</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tabv</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vitem</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1gab5e1fa276d48b20d35f4ef20110c39ed" kindref="member">dtsgui_tabpane_newdata_cb</ref></type>
          <declname>data_cb</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1gab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Helper function to handle &quot;Adding&quot; a new tab from a existing tab. </para>        </briefdescription>
        <detaileddescription>
<para>This implements the concept of the New button a new panel will be created from the data filled in on the pane this callback is attached too. A new XML node is created and the panel created from this node.</para><para><simplesect kind="note"><para>this callback helper is rather complex.</para></simplesect>
<simplesect kind="see"><para><ref refid="classtab__newpane" kindref="compound">tab_newpane</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tabv</parametername>
</parameternamelist>
<parameterdescription>
<para>Table view the new panel will be added too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel this callback is attached too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the XML node to create in the xpath. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vitem</parametername>
</parameternamelist>
<parameterdescription>
<para>the item in the panel to be used to create the value of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute to be used too create the title in the new pane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to allow setting the data used in pane creation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to configure the pane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referrenced object containing initial callback data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>XML doc reference for creating the node / panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing is returned the callback is registered on the panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="646" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="645" bodyend="649"/>
        <references refid="classtab__newpane_1a8084796f246b29a21c9077aefa40fc18" compoundref="_d_t_s_tree_window_8cpp" startline="198" endline="214">tab_newpane::handle_newtabpane_cb</references>
        <references refid="classtab__newpane_1a66f664e9d0212bd0415953c72afbbacd" compoundref="_d_t_s_tree_window_8cpp" startline="145" endline="169">tab_newpane::tab_newpane</references>
        <referencedby refid="group___d_t_s-_a_p_p-_iface_1gadcfa585026374cce3c2443ea55cebc25" compoundref="interface_8c" startline="181" endline="189">network_iface_new_pane_cb</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gad71b59e1898bce570cac2acd774f71e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_treepane</definition>
        <argsstring>(dtsgui_treeview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_treepane</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a panel owned by the tree. </para>        </briefdescription>
        <detaileddescription>
<para>This will seldom be needed as panels are created and supplied in callbacks.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" kindref="member">DTSTreeWindow::CreatePane()</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref> </para></simplesect>
<simplesect kind="note"><para>Panels used in tree views must be created as children of the tree. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the panel top/center </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of buttons to be placed on the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object available in event callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>XML doc reference used for updating XML elements. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Tree Pane. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="665" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="665" bodyend="668"/>
        <references refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" compoundref="_d_t_s_tree_window_8cpp" startline="715" endline="734">DTSTreeWindow::CreatePane</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gab8713feb542a9bb13f8fe7e3bf568bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_treepane_default</definition>
        <argsstring>(dtsgui_treeview tv, dtsgui_treenode node)</argsstring>
        <name>dtsgui_treepane_default</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Create a panel owned by the tree configured from the specified node. </para>        </briefdescription>
        <detaileddescription>
<para>Create a pane from information obtained from node. Name of node is used for the panel title and a Accept/Undo button.</para><para><simplesect kind="note"><para>if node id is -1 no name/buttons are added the page is blank.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" kindref="member">DTSTreeWindow::CreatePane()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>used as template for panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Tree Pane. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="683" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="683" bodyend="686"/>
        <references refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" compoundref="_d_t_s_tree_window_8cpp" startline="715" endline="734">DTSTreeWindow::CreatePane</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga550b7516bbb97dd66bc71033e7d996cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
        <definition>dtsgui_treenode DTS_C_API::dtsgui_treecont</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *title, int can_edit, int can_sort, int can_del, int nodeid, dtsgui_treeviewpanel_cb p_cb, void *data)</argsstring>
        <name>dtsgui_treecont</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_edit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_sort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_del</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a container in the tree view. </para>        </briefdescription>
        <detaileddescription>
<para>Create and insert a new folder/container in the tree view with properties / call back. A panel will be created and supplied to the callback too implement on selection.</para><para><simplesect kind="note"><para>The root node is NULL this is the initial container.</para></simplesect>
<simplesect kind="see"><para>DTSTreeWindow::AppendContainer </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree view to add the node too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent node or NULL to create root node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The label shown on the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow editing of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_sort</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow sorting of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_del</parametername>
</parameternamelist>
<parameterdescription>
<para>Not yet implemented for containers but will allow right click menu to delete. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeid</parametername>
</parameternamelist>
<parameterdescription>
<para>A value passed to the callback as convinence can be any value -1 will cause a blank panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to pass panel for configuration on selection of the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed too callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="709" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="708" bodyend="712"/>
        <references refid="class_d_t_s_d_v_m_ctrl_1a853bc63ae2098cf907897dfe896f38b2" compoundref="_d_t_s_list_view_8cpp" startline="612" endline="614">DTSDVMCtrl::AppendContainer</references>
        <references refid="class_d_t_s_tree_window_1aae9e856659f3701452382e2cdcba8463" compoundref="_d_t_s_tree_window_8cpp" startline="655" endline="657">DTSTreeWindow::GetTreeCtrl</references>
        <referencedby refid="netconfig_8c_1a1d7b1d28e9721a0c428be28f6c505875" compoundref="netconfig_8c" startline="134" endline="136">network_config_dns_domain_node</referencedby>
        <referencedby refid="netconfig_8c_1ad5f5bf5384beb7b8c2fefdd51315d079" compoundref="netconfig_8c" startline="602" endline="738">network_tree_setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga0f7146637609d42057e2cd21bd2bf33e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
        <definition>dtsgui_treenode DTS_C_API::dtsgui_treeitem</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *title, int can_edit, int can_sort, int can_del, int nodeid, dtsgui_treeviewpanel_cb p_cb, void *data)</argsstring>
        <name>dtsgui_treeitem</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_edit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_sort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_del</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a item in a container in the tree view. </para>        </briefdescription>
        <detaileddescription>
<para>Create and insert a new item in the tree view in the node specified with properties / call back. A panel will be created and supplied to the callback too implement on selection.</para><para><simplesect kind="see"><para>DTSTreeWindow::AppendItem </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree view to add the node too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent node or NULL to create root node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The label shown on the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow editing of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_sort</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow sorting of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_del</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow right click menu to delete. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeid</parametername>
</parameternamelist>
<parameterdescription>
<para>A value passed to the callback as convinence can be any value -1 will cause a blank panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to pass panel for configuration on selection of the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed too callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="733" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="732" bodyend="736"/>
        <references refid="class_d_t_s_d_v_m_ctrl_1a60de6e9342a4c140fa2b72acfbfd97dc" compoundref="_d_t_s_list_view_8cpp" startline="608" endline="610">DTSDVMCtrl::AppendItem</references>
        <references refid="class_d_t_s_tree_window_1aae9e856659f3701452382e2cdcba8463" compoundref="_d_t_s_tree_window_8cpp" startline="655" endline="657">DTSTreeWindow::GetTreeCtrl</references>
        <referencedby refid="netconfig_8c_1ad5f5bf5384beb7b8c2fefdd51315d079" compoundref="netconfig_8c" startline="602" endline="738">network_tree_setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga55a99744231b294667ece32a1087042f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_newxmltreenode</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_pane p, dtsgui_treenode tn, const char *xpath, const char *node, const char *vitem, const char *tattr, int nid, int flags, dtsgui_xmltreenode_cb node_cb, void *data, dtsgui_treeviewpanel_cb p_cb)</argsstring>
        <name>dtsgui_newxmltreenode</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vitem</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga52992645e33e4d92c8e68c3490239c75" kindref="member">dtsgui_xmltreenode_cb</ref></type>
          <declname>node_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <briefdescription>
<para>Helper function to handle &quot;Adding&quot; a new node from a existing node. </para>        </briefdescription>
        <detaileddescription>
<para>This implements the concept of the New button a new node will be created from the data filled in on the pane this callback is attached too. A new XML node is created and the panel created from this node.</para><para><simplesect kind="see"><para><ref refid="group___c_o_r_e_1ga7ecd2a00f2306c0b94734a72a7899898" kindref="member">tree_newnode_flags</ref></para></simplesect>
<simplesect kind="note"><para>this callback helper is rather complex.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view the new panel will be added too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel this callback is attached too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Root treenode to add too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the XML node to create in the xpath. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vitem</parametername>
</parameternamelist>
<parameterdescription>
<para>the item in the panel to be used to create the value of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute to be used too create the title in the new pane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nid</parametername>
</parameternamelist>
<parameterdescription>
<para>Node id for newly created node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Option flags combined from tree_newnode_flags. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced Object passed to the callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel when it is selected. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing is returned the callback is registered on the panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="763" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="762" bodyend="766"/>
        <references refid="classtree__newnode_1a307fb2ff9afc18429af055850f3c01a8" compoundref="_d_t_s_tree_window_8cpp" startline="85" endline="101">tree_newnode::handle_newtreenode_cb</references>
        <references refid="classtree__newnode_1a79fd1a82bf40d2d922c1d297f1de3f29" compoundref="_d_t_s_tree_window_8cpp" startline="66" endline="83">tree_newnode::tree_newnode</references>
        <referencedby refid="netconfig_8c_1aa4d1bbd43067e6a75b7a441658a28646" compoundref="netconfig_8c" startline="479" endline="502">network_adsl_link_new</referencedby>
        <referencedby refid="netconfig_8c_1a8736362ad99edb6b363f2238131368d7" compoundref="netconfig_8c" startline="513" endline="522">network_adsl_user_new</referencedby>
        <referencedby refid="netconfig_8c_1aa9efe8e76bc229a36fa2499c892949ce" compoundref="netconfig_8c" startline="151" endline="161">network_config_dns_domain_new</referencedby>
        <referencedby refid="netconfig_8c_1af6cb7d31e4a663493723310afddf0657" compoundref="netconfig_8c" startline="177" endline="199">network_config_dns_domain_server_new</referencedby>
        <referencedby refid="netconfig_8c_1a298dbf73bc519972483995caa73e6d94" compoundref="netconfig_8c" startline="125" endline="132">network_config_dns_host_new</referencedby>
        <referencedby refid="netconfig_8c_1a27bdf0ff7227d24f8b4811af169802a1" compoundref="netconfig_8c" startline="235" endline="243">network_newiface</referencedby>
        <referencedby refid="netconfig_8c_1a605df16cf428f6c76fe9b0936203b005" compoundref="netconfig_8c" startline="359" endline="370">network_newroute</referencedby>
        <referencedby refid="netconfig_8c_1a853ca11b890527ee2031a756497e145c" compoundref="netconfig_8c" startline="333" endline="347">network_newwan</referencedby>
        <referencedby refid="netconfig_8c_1a3a749e8b1e9561bb168ba3aed04444a8" compoundref="netconfig_8c" startline="277" endline="318">network_newwifi</referencedby>
        <referencedby refid="netconfig_8c_1a3a92d505fabcecdf55524fe8b77f08bc" compoundref="netconfig_8c" startline="565" endline="600">network_tos_new</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gadc59452935e169e8e78c178aed0b77c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_treenodeid</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodeid</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get the node id of a tree node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a9744dc2bb294481c69a55fcdd667b357" kindref="member">DTSDVMListStore::GetNodeID()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree Node to get the node of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the user defined tree node ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="775" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="775" bodyend="778"/>
        <references refid="class_d_t_s_d_v_m_list_store_1a9744dc2bb294481c69a55fcdd667b357" compoundref="_d_t_s_list_view_8cpp" startline="215" endline="217">DTSDVMListStore::GetNodeID</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gaedca58250011ea48c67fbc4faa14278f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_treenodeparent</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodeparent</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get the name of the nodes parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a06805bea00fbdbf5df1f995b87897b5e" kindref="member">DTSDVMListStore::GetParentTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Name og the nodes parentI </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="785" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="785" bodyend="788"/>
        <references refid="class_d_t_s_d_v_m_list_store_1a06805bea00fbdbf5df1f995b87897b5e" compoundref="_d_t_s_list_view_8cpp" startline="87" endline="90">DTSDVMListStore::GetParentTitle</references>
        <referencedby refid="netconfig_8c_1af6cb7d31e4a663493723310afddf0657" compoundref="netconfig_8c" startline="177" endline="199">network_config_dns_domain_server_new</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga3e6618e889e7b58e3bf2ae3d63332178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_treenodesetxml</definition>
        <argsstring>(dtsgui_treenode tn, struct xml_node *xn, const char *tattr)</argsstring>
        <name>dtsgui_treenodesetxml</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>struct xml_node *</type>
          <declname>xn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <briefdescription>
<para>Add a XML node to the tree node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1aa82d333247a2bf537c3acdeae7635e15" kindref="member">DTSDVMListStore::SetXMLData</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node to set. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xn</parametername>
</parameternamelist>
<parameterdescription>
<para>XML Node to reference. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the XN that represents the title NULL if the value is the title. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="796" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="796" bodyend="799"/>
        <references refid="class_d_t_s_d_v_m_list_store_1aa82d333247a2bf537c3acdeae7635e15" compoundref="_d_t_s_list_view_8cpp" startline="219" endline="226">DTSDVMListStore::SetXMLData</references>
        <referencedby refid="netconfig_8c_1ad5f5bf5384beb7b8c2fefdd51315d079" compoundref="netconfig_8c" startline="602" endline="738">network_tree_setup</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gaf56a924134315107e80c8b01bfbeee68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_node *</type>
        <definition>struct xml_node* DTS_C_API::dtsgui_treenodegetxml</definition>
        <argsstring>(dtsgui_treenode tn, char **buf)</argsstring>
        <name>dtsgui_treenodegetxml</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Return the XML node reference held by the tree node. </para>        </briefdescription>
        <detaileddescription>
<para>Returns the XML node of the node and optionally the title attribute.</para><para><simplesect kind="note"><para>The reference to the buffer and node needs to be droped. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node to obtain XML node from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>a pointer to a buffer that will be set to the title attribute (Optional). </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the XML node stored in the tree node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="810" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="810" bodyend="813"/>
        <references refid="class_d_t_s_d_v_m_list_store_1a61adea3902f8c4b1c746546b1b9bbff0" compoundref="_d_t_s_list_view_8cpp" startline="228" endline="238">DTSDVMListStore::GetXMLData</references>
        <referencedby refid="netconfig_8c_1afbdf0e8165311538e8b408c7ba2fabbf" compoundref="netconfig_8c" startline="446" endline="477">network_adsl_link</referencedby>
        <referencedby refid="netconfig_8c_1aa879445eb24134718f10512cbd22df27" compoundref="netconfig_8c" startline="504" endline="511">network_adsl_user</referencedby>
        <referencedby refid="netconfig_8c_1a07f37413fb1c1cb24c6f3a8a2e542114" compoundref="netconfig_8c" startline="138" endline="149">network_config_dns_domain</referencedby>
        <referencedby refid="netconfig_8c_1a85464ec7fa78ad423246f4cd96e69cfc" compoundref="netconfig_8c" startline="163" endline="175">network_config_dns_domain_server</referencedby>
        <referencedby refid="netconfig_8c_1ad08cc595d8b15576d51ce580336f6063" compoundref="netconfig_8c" startline="115" endline="123">network_config_dns_host</referencedby>
        <referencedby refid="netconfig_8c_1a21ad9729b2e5667d1a71117c3811d428" compoundref="netconfig_8c" startline="213" endline="220">network_iface</referencedby>
        <referencedby refid="netconfig_8c_1afd9751515d9c36b70349d2a9ef5fae7f" compoundref="netconfig_8c" startline="349" endline="357">network_route</referencedby>
        <referencedby refid="netconfig_8c_1a0b2d5249167dfdc0b972bff2091b5745" compoundref="netconfig_8c" startline="524" endline="563">network_tos</referencedby>
        <referencedby refid="netconfig_8c_1a7b1e028eec7d055f71cd0b466131fb1e" compoundref="netconfig_8c" startline="320" endline="331">network_wan</referencedby>
        <referencedby refid="netconfig_8c_1adceac66b5b38e18e528fc5a2adb2d649" compoundref="netconfig_8c" startline="245" endline="275">network_wifi</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gaaaf93911380c2f40eb8adbdc39ac36ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_nodesetxml</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *newname)</argsstring>
        <name>dtsgui_nodesetxml</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newname</declname>
        </param>
        <briefdescription>
<para>Update the XML Node or title attribute with a new name. </para>        </briefdescription>
        <detaileddescription>
<para>This helper function will update the node&apos;s XML after a edit event.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a3a7d1d1ce34864f71d5ffd154ca18210" kindref="member">DTSTreeWindow::UpdateNodeXML()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Treeview node is part of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>TreeNode to update. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newname</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to update XML node with. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="825" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="825" bodyend="828"/>
        <references refid="class_d_t_s_tree_window_1a3a7d1d1ce34864f71d5ffd154ca18210" compoundref="_d_t_s_tree_window_8cpp" startline="754" endline="776">DTSTreeWindow::UpdateNodeXML</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga00767aae723dce154065e0bb090c0e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_treenodegetdata</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodegetdata</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get reference for the user data of node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a35aa2204af134770c1fab2f5426c50a7" kindref="member">DTSDVMListStore::GetUserData()</ref> </para></simplesect>
<simplesect kind="note"><para>This needs to be unreferenced. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="836" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="836" bodyend="839"/>
        <references refid="class_d_t_s_d_v_m_list_store_1a35aa2204af134770c1fab2f5426c50a7" compoundref="_d_t_s_list_view_8cpp" startline="208" endline="213">DTSDVMListStore::GetUserData</references>
        <referencedby refid="netconfig_8c_1a85464ec7fa78ad423246f4cd96e69cfc" compoundref="netconfig_8c" startline="163" endline="175">network_config_dns_domain_server</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gaa85445ee6c9a2c24d76824bb67cc2ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setevcallback</definition>
        <argsstring>(dtsgui_pane pane, event_callback evcb, void *data)</argsstring>
        <name>dtsgui_setevcallback</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga06d1a959e1581116961bca636a919043" kindref="member">event_callback</ref></type>
          <declname>evcb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set event callback function for panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1ac18de08077529d488ea329a72ee14d98" kindref="member">DTSPanel::SetEventCallback()</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1ga06d1a959e1581116961bca636a919043" kindref="member">event_callback</ref></para></simplesect>
When a event happens the callback is called with the userdata to allow actioning the event.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to attach callback too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evcb</parametername>
</parameternamelist>
<parameterdescription>
<para>Event callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data supplied in the callback (panel userdata is available in the panel). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="853" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="853" bodyend="856"/>
        <references refid="class_d_t_s_panel_1ac18de08077529d488ea329a72ee14d98" compoundref="_d_t_s_panel_8cpp" startline="406" endline="415">DTSPanel::SetEventCallback</references>
        <referencedby refid="group___d_t_s-_a_p_p-_iface_1gaec69e5698c53680c3551eeb9e05cbaf6" compoundref="interface_8c" startline="164" endline="176">network_iface_pane_cb</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga77cb81a619f8c9ccd83cdf1e7c97aae9" compoundref="testing_8c" startline="128" endline="139">test_menu</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga28e2dbe2171ea35e32fa615aca55b934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmlpanel_update</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_xmlpanel_update</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>update all XML items in the panel from current element values. </para>        </briefdescription>
        <detaileddescription>
<para>All elements on the panel that are XML will have there nodes updated Based on the value of the elements.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1adc5131960a24dfa65adba935a1be0f79" kindref="member">DTSPanel::Update_XML()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga4d0d6742f61c91fb590b3728a7229150" kindref="member">dtsgui_pane2post</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1a7ce048cedd00ee1f1d9ea1c1fd504a6f" kindref="member">DTSPanel::Panel2Post()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="869" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="869" bodyend="872"/>
        <references refid="class_d_t_s_panel_1adc5131960a24dfa65adba935a1be0f79" compoundref="_d_t_s_panel_8cpp" startline="746" endline="775">DTSPanel::Update_XML</references>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gae99af9389a848fe0d810a538d0b64d53" compoundref="wizard_8c" startline="408" endline="481">system_wizard</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga4d0d6742f61c91fb590b3728a7229150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct curl_post *</type>
        <definition>struct curl_post* DTS_C_API::dtsgui_pane2post</definition>
        <argsstring>(dtsgui_pane p)</argsstring>
        <name>dtsgui_pane2post</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Prepare a HTTP POST structure from panel. </para>        </briefdescription>
        <detaileddescription>
<para>Create a HTTP Post structure from the values and names Of elements on a panel this can then be used with curl_post to post to a URL.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1adc5131960a24dfa65adba935a1be0f79" kindref="member">DTSPanel::Update_XML()</ref> </para><simplesectsep/><para>dtsgui_xmlpane_update() </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1a7ce048cedd00ee1f1d9ea1c1fd504a6f" kindref="member">DTSPanel::Panel2Post()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to create from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A CURL HTTP POST Structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="887" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="887" bodyend="890"/>
        <references refid="class_d_t_s_panel_1a7ce048cedd00ee1f1d9ea1c1fd504a6f" compoundref="_d_t_s_panel_8cpp" startline="841" endline="880">DTSPanel::Panel2Post</references>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga467cf1f57bc5317de7fa356f87b324a6" compoundref="testing_8c" startline="41" endline="58">post_items</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga6728901f40e67a95bc46150e1cf3c450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_paneldata</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_paneldata</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Obtain a reference to the userdata of panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_object_1a5d32407be34aa68ea2b038ede768d50e" kindref="member">DTSObject::GetUserData()</ref>.</para></simplesect>
<simplesect kind="note"><para>this must be un refferenced.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to obtain reference from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to userdata. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="901" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="901" bodyend="904"/>
        <references refid="class_d_t_s_object_1a5d32407be34aa68ea2b038ede768d50e" compoundref="_d_t_s_panel_8cpp" startline="338" endline="346">DTSObject::GetUserData</references>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga467cf1f57bc5317de7fa356f87b324a6" compoundref="testing_8c" startline="41" endline="58">post_items</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga3f8f0e22fd2ecdcb915ec06851d12e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_settitle</definition>
        <argsstring>(dtsgui_pane pane, const char *title)</argsstring>
        <name>dtsgui_settitle</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Update the title on the panel if it exists. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a58daeb533cce1e4bdac57118cce7c7ea" kindref="member">DTSPanel::SetTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update title. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>New title to place on panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="911" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="911" bodyend="914"/>
        <references refid="class_d_t_s_panel_1a58daeb533cce1e4bdac57118cce7c7ea" compoundref="_d_t_s_panel_8cpp" startline="482" endline="488">DTSPanel::SetTitle</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gad561196144c72953e31b83aff17054e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setstatus</definition>
        <argsstring>(dtsgui_pane pane, const char *status)</argsstring>
        <name>dtsgui_setstatus</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Update the status bar message of panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a03be174c3cb033ba74b6abce543347e3" kindref="member">DTSPanel::SetStatus()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update title. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>New status bar message. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="922" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="922" bodyend="925"/>
        <references refid="class_d_t_s_panel_1a03be174c3cb033ba74b6abce543347e3" compoundref="_d_t_s_panel_8cpp" startline="490" endline="494">DTSPanel::SetStatus</references>
        <referencedby refid="group___d_t_s-_a_p_p-_iface_1ga2079939d5d21847b07c782120206b7ce" compoundref="interface_8c" startline="124" endline="159">handle_updatetabpane</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gab2f995a29a5b461ac67c7d9aa7091686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_configcallback</definition>
        <argsstring>(dtsgui_pane pane, dtsgui_configcb cb, void *data)</argsstring>
        <name>dtsgui_configcallback</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set config callback function for panel (UNUSED). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1acdb57729ace5f3c0fc76cce4d41c36cc" kindref="member">DTSPanel::SetConfigCallback()</ref> </para><simplesectsep/><para><ref refid="group___c_o_r_e_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></para></simplesect>
<simplesect kind="note"><para>Not yet implemted who knows maybe it will maybe it wont.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to attach callback too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Config callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data supplied in the callback (panel userdata is available in the panel). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="938" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="938" bodyend="941"/>
        <references refid="class_d_t_s_panel_1acdb57729ace5f3c0fc76cce4d41c36cc" compoundref="_d_t_s_panel_8cpp" startline="417" endline="430">DTSPanel::SetConfigCallback</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga9c1222d2fe8fa5066a2c55e4b71c2cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_node *</type>
        <definition>struct xml_node* DTS_C_API::dtsgui_panetoxml</definition>
        <argsstring>(dtsgui_pane p, const char *xpath, const char *node, const char *nodeval, const char *attrkey)</argsstring>
        <name>dtsgui_panetoxml</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nodeval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrkey</declname>
        </param>
        <briefdescription>
<para>Create a XML node from the elements on the panel. </para>        </briefdescription>
        <detaileddescription>
<para>Using the path information a node is created and elements added as attributes.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1ad28f5ed6bd19e9d685a18df8bf568f92" kindref="member">DTSPanel::Panel2XML()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to create nodes from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Base path to create the nodes in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the node to add. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeval</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the element to use as the value of node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attrkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Use this item to set the initial attribute and use as key. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New XML Node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="957" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="957" bodyend="960"/>
        <references refid="class_d_t_s_panel_1ad28f5ed6bd19e9d685a18df8bf568f92" compoundref="_d_t_s_panel_8cpp" startline="777" endline="839">DTSPanel::Panel2XML</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga3f904089ceb734323477f2b3dbac4a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_rundialog</definition>
        <argsstring>(dtsgui_pane pane, event_callback evcb, void *data)</argsstring>
        <name>dtsgui_rundialog</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="group___c_o_r_e_1ga06d1a959e1581116961bca636a919043" kindref="member">event_callback</ref></type>
          <declname>evcb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Execute a dialog panel. Pop up and run a dialog pane the result will be obtained in the event handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_dialog_1af1e6be7e08913149d128839b7e535cd0" kindref="member">DTSDialog::RunDialog()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Dialog panel to execute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evcb</parametername>
</parameternamelist>
<parameterdescription>
<para>Event callback to handle the results in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data passed to the event handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="969" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="969" bodyend="972"/>
        <references refid="class_d_t_s_dialog_1af1e6be7e08913149d128839b7e535cd0" compoundref="_d_t_s_panel_8cpp" startline="1077" endline="1089">DTSDialog::RunDialog</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga2e1e2013214ae275160b8c87e6cb3d89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
        <definition>struct dtsgui_wizard* DTS_C_API::dtsgui_newwizard</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title)</argsstring>
        <name>dtsgui_newwizard</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Create a new wizard. </para>        </briefdescription>
        <detaileddescription>
<para>A wizard consists of multiple panels linked with back/next controls each panel will need to be procesed on completion.</para><para><simplesect kind="see"><para><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Aplication data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title shown on title bar of wizard pop up. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New wizard that needs pages added too and run. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="985" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="985" bodyend="987"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gae99af9389a848fe0d810a538d0b64d53" compoundref="wizard_8c" startline="408" endline="481">system_wizard</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga3e76b1ea2eebb91e1d0b5a55649d65e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_wizard_addpage</definition>
        <argsstring>(struct dtsgui_wizard *dtswiz, const char *title, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_wizard_addpage</name>
        <param>
          <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
          <declname>dtswiz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a panel and append it to the wizard. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui__wizard_1a02984b1d70df5100e8b6200e0bb1b421" kindref="member">dtsgui_wizard::AddPage()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtswiz</parametername>
</parameternamelist>
<parameterdescription>
<para>Wizard to add page too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of the new panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be referenced and stored on the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML Doc to be referenced and stored on the panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New panel that will need to be configured and processed after completion. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="999" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="999" bodyend="1001"/>
        <references refid="classdtsgui__wizard_1a02984b1d70df5100e8b6200e0bb1b421" compoundref="_d_t_s_wizard_8cpp" startline="56" endline="87">dtsgui_wizard::AddPage</references>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gae99af9389a848fe0d810a538d0b64d53" compoundref="wizard_8c" startline="408" endline="481">system_wizard</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga25174d47f2e9680d41aebdf08ff9b979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_runwizard</definition>
        <argsstring>(struct dtsgui_wizard *dtswiz)</argsstring>
        <name>dtsgui_runwizard</name>
        <param>
          <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
          <declname>dtswiz</declname>
        </param>
        <briefdescription>
<para>Run the wizard. </para>        </briefdescription>
        <detaileddescription>
<para>Pop up the wizard window and open first page on success its required that the panels information be processed. When the wizard is un refferenced the panels are deleted.</para><para><simplesect kind="see"><para><ref refid="classdtsgui__wizard_1ab0554e6b9fe1d2c0419a6659d883edf3" kindref="member">dtsgui_wizard::RunWizard()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtswiz</parametername>
</parameternamelist>
<parameterdescription>
<para>Wizard too run. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non Zero on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1014" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1014" bodyend="1016"/>
        <references refid="classdtsgui__wizard_1ab0554e6b9fe1d2c0419a6659d883edf3" compoundref="_d_t_s_wizard_8cpp" startline="89" endline="94">dtsgui_wizard::RunWizard</references>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gae99af9389a848fe0d810a538d0b64d53" compoundref="wizard_8c" startline="408" endline="481">system_wizard</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1gac4185ec71523c1735f1da2cb6dc876d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_progress_start</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text, int maxval, int quit)</argsstring>
        <name>dtsgui_progress_start</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxval</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quit</declname>
        </param>
        <briefdescription>
<para>Initialise the progress dialog Pop up a dialog box that can be updated to showprogress with a optional cancel button. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55bbe89f24dc6ad3fbe78589bcbd9686" kindref="member">DTSFrame::StartProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxval</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum expected value to update. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quit</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable the cancel button if quit is zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1027" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1027" bodyend="1030"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1a55bbe89f24dc6ad3fbe78589bcbd9686" compoundref="_d_t_s_frame_8cpp" startline="129" endline="149">DTSFrame::StartProgress</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1gabda6276de46c13fb4e0831bb8c8d1ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_progress_update</definition>
        <argsstring>(struct dtsgui *dtsgui, int newval, const char *newtext)</argsstring>
        <name>dtsgui_progress_update</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newtext</declname>
        </param>
        <briefdescription>
<para>Update the progress bar counter This function updates the current progress value and optionally allows setting new displayed text. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a3b057f8c85958444049063e75b602108" kindref="member">DTSFrame::UpdateProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newval</parametername>
</parameternamelist>
<parameterdescription>
<para>Update the counter with this value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success may fail when the user presses cancel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1042" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1042" bodyend="1045"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1a3b057f8c85958444049063e75b602108" compoundref="_d_t_s_frame_8cpp" startline="151" endline="164">DTSFrame::UpdateProgress</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1ga7bd617a3f00cb21ae6df7a37eba0dc7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_progress_increment</definition>
        <argsstring>(struct dtsgui *dtsgui, int ival, const char *newtext)</argsstring>
        <name>dtsgui_progress_increment</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ival</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newtext</declname>
        </param>
        <briefdescription>
<para>Increments the counter by adding to it not setting it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a8b1f1c4cf298ef550edec3fa3bf96738" kindref="member">DTSFrame::IncProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ival</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to increment progress bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success may fail when the user presses cancel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1054" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1054" bodyend="1057"/>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <references refid="class_d_t_s_frame_1a8b1f1c4cf298ef550edec3fa3bf96738" compoundref="_d_t_s_frame_8cpp" startline="166" endline="179">DTSFrame::IncProgress</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1ga528f638b6cb7b0d813e350a0b0c7262c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_progress_end</definition>
        <argsstring>(struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_progress_end</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Disable the progress bar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1aa33b0ba3ce50a7ec4434a78c2be498b7" kindref="member">DTSFrame::EndProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1063" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1063" bodyend="1066"/>
        <references refid="class_d_t_s_frame_1aa33b0ba3ce50a7ec4434a78c2be498b7" compoundref="_d_t_s_frame_8cpp" startline="181" endline="190">DTSFrame::EndProgress</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_items_1ga9a2e87bf30be8644653d11754fcb4e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bucket_list *</type>
        <definition>struct bucket_list* DTS_C_API::dtsgui_panel_items</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_panel_items</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Return reference to hashed bucket list of items. </para>        </briefdescription>
        <detaileddescription>
<para>The bucket list API in dtsapplib contains more information.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_object_1a4cadcce0480e7e8f4a9a07a4aedd3c1f" kindref="member">DTSObject::GetItems()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to obtain list from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to hashed bucket list. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1076" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1076" bodyend="1079"/>
        <references refid="class_d_t_s_object_1a4cadcce0480e7e8f4a9a07a4aedd3c1f" compoundref="_d_t_s_panel_8cpp" startline="316" endline="321">DTSObject::GetItems</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_items_1ga3af426dd6bf50cb6bd7232c4ea5b92f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_finditem</definition>
        <argsstring>(dtsgui_pane p, const char *name)</argsstring>
        <name>dtsgui_finditem</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Return refernece to a form element. Find a item and return it searcing the bucket list for the specified name. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a3c4a20a1c122851ae935dcac34697361" kindref="member">DTSPanel::FindItem()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>panel who&apos;s item list is to be searched. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Return item with this name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Form item if found matching the name. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1089" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1089" bodyend="1092"/>
        <references refid="class_d_t_s_panel_1a3c4a20a1c122851ae935dcac34697361" compoundref="_d_t_s_panel_8cpp" startline="882" endline="884">DTSPanel::FindItem</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_items_1ga30bc1422cf3395b150773320ffda00ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_item_data</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_data</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Get refernece to data stoed on element. </para>        </briefdescription>
        <detaileddescription>
<para>Each element is capable of storing user supplied data this returns a reference to this data. <simplesect kind="see"><para><ref refid="classform__item_1a45b4a4db5526c1032f15ba20d3f28249" kindref="member">form_item::GetData()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>Form item to obtain data from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to data stored in item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1102" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1102" bodyend="1104"/>
        <references refid="classform__item_1a45b4a4db5526c1032f15ba20d3f28249" compoundref="pitems_8cpp" startline="144" endline="153">form_item::GetData</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_items_1gadc168d1ed91fc91be2bb7bf7b060dd62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_item_value</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_value</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Return value of element. The value of the panel element is returned fo the item. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>The return value must be freed. </para></simplesect>
<simplesect kind="see"><para><ref refid="classform__item_1a6377c3eeefcf7272d5200cd462c9eba7" kindref="member">form_item::GetValue()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>Form item to obtain value of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of the element. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1113" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1113" bodyend="1115"/>
        <references refid="classform__item_1a6377c3eeefcf7272d5200cd462c9eba7" compoundref="pitems_8cpp" startline="192" endline="219">form_item::GetValue</references>
        <referencedby refid="netconfig_8c_1a53ff57cbb1a4442c4428c95746229150" compoundref="netconfig_8c" startline="37" endline="74">network_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_items_1ga2cb1581f47559805b221f9290f9ec83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_item_name</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_name</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
<para>Return name of element. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the name must not be freed and the form itme must not be un referenced </para></simplesect>
<simplesect kind="see"><para><ref refid="classform__item_1a4f3558ce5670e789ad51d1f489ec5b14" kindref="member">form_item::GetName()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>fi</parametername>
</parameternamelist>
<parameterdescription>
<para>Form item. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Name of item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1124" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1124" bodyend="1126"/>
        <references refid="classform__item_1a4f3558ce5670e789ad51d1f489ec5b14" compoundref="pitems_8cpp" startline="188" endline="190">form_item::GetName</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_items_1ga37f578498eb38e545906898e7250e6bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_findvalue</definition>
        <argsstring>(dtsgui_pane p, const char *name)</argsstring>
        <name>dtsgui_findvalue</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Helper function to return a value of a item. This function finds a value by name returning the value. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>the returned value must be freeed. </para></simplesect>
<simplesect kind="see"><para><ref refid="group___c-_a_p_i-_panel-_items_1ga3af426dd6bf50cb6bd7232c4ea5b92f6" kindref="member">dtsgui_finditem()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel-_items_1gadc168d1ed91fc91be2bb7bf7b060dd62" kindref="member">dtsgui_item_value()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1aaeef18ad561346699ed24e0aa6fa47b3" kindref="member">DTSPanel::FindValue()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1a3c4a20a1c122851ae935dcac34697361" kindref="member">DTSPanel::FindItem()</ref> </para><simplesectsep/><para><ref refid="classform__item_1a6377c3eeefcf7272d5200cd462c9eba7" kindref="member">form_item::GetValue()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to search element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Return value of element with this name. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Value of element. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1140" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1140" bodyend="1143"/>
        <references refid="class_d_t_s_panel_1aaeef18ad561346699ed24e0aa6fa47b3" compoundref="_d_t_s_panel_8cpp" startline="886" endline="897">DTSPanel::FindValue</references>
        <referencedby refid="group___d_t_s-_a_p_p-_iface_1ga2079939d5d21847b07c782120206b7ce" compoundref="interface_8c" startline="124" endline="159">handle_updatetabpane</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_dialog_1gad331a82b0502bea7d78545c6efb72b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_alert</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_alert</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Alert the user and expect a confirmation. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a890f88e157626205916bdb961cc6fb6f" kindref="member">DTSFrame::Alert()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to supply in the alert. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1151" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1151" bodyend="1154"/>
        <references refid="class_d_t_s_frame_1a890f88e157626205916bdb961cc6fb6f" compoundref="_d_t_s_frame_8cpp" startline="120" endline="127">DTSFrame::Alert</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="private_8h_1a6d9d2b0105df87000cb2bdecbff91239" compoundref="netconfig_8c" startline="740" endline="769">advanced_config</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga126b309803052977061662f97fb9012a" compoundref="wizard_8c" startline="523" endline="541">editsys_wizard</referencedby>
        <referencedby refid="private_8h_1a01bdf27a0760d9da4bb77918735171c1" compoundref="config_8c" startline="150" endline="187">export_config</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1gaf1d7f330874be6beda389c9ea4a4545c" compoundref="testing_8c" startline="70" endline="96">handle_test</referencedby>
        <referencedby refid="class_d_t_s_a_p_p_tool_bar_1ad3811f20f267392e27a26b839929367b" compoundref="toolbar_8cpp" startline="149" endline="163">DTSAPPToolBar::HandleEvent</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga56c78e0d32a18452dcea4f026de2c889" compoundref="wizard_8c" startline="491" endline="514">newsys_wizard</referencedby>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga467cf1f57bc5317de7fa356f87b324a6" compoundref="testing_8c" startline="41" endline="58">post_items</referencedby>
        <referencedby refid="private_8h_1abc9a4e54439d7a701992752ec7b3f6b9" compoundref="config_8c" startline="112" endline="148">view_config_conf</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_dialog_1ga5761cfa6ab849723e50760a9642efc9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_confirm</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_confirm</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Request Yes/No Confirmation from the user. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a937f276b15be00e81087ef1a73605478" kindref="member">DTSFrame::Confirm()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to supply in the alert. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Non zero if the user affirmed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1162" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1162" bodyend="1165"/>
        <references refid="class_d_t_s_frame_1a937f276b15be00e81087ef1a73605478" compoundref="_d_t_s_frame_8cpp" startline="104" endline="118">DTSFrame::Confirm</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gae99af9389a848fe0d810a538d0b64d53" compoundref="wizard_8c" startline="408" endline="481">system_wizard</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_dialog_1gad2b11bd5e9e51dcba9f53f4969f1f25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_filesave</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *path, const char *name, const char *filter)</argsstring>
        <name>dtsgui_filesave</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Open file save dialog box. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1af996b558ba17ecc23cf6ed1a3d1873fb" kindref="member">DTSFrame::FileDialog()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of the file dialog. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Original path to open dialog in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Suggested name to save as. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>File namr filter. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the filename that must be unreferenced. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1176" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1176" bodyend="1179"/>
        <references refid="class_d_t_s_frame_1af996b558ba17ecc23cf6ed1a3d1873fb" compoundref="_d_t_s_frame_8cpp" startline="408" endline="419">DTSFrame::FileDialog</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="private_8h_1a01bdf27a0760d9da4bb77918735171c1" compoundref="config_8c" startline="150" endline="187">export_config</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gae99af9389a848fe0d810a538d0b64d53" compoundref="wizard_8c" startline="408" endline="481">system_wizard</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_dialog_1gad458f5d64710487c7213a4921a5ebc99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_fileopen</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *path, const char *name, const char *filter)</argsstring>
        <name>dtsgui_fileopen</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
<para>Open file open dialog box. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1af996b558ba17ecc23cf6ed1a3d1873fb" kindref="member">DTSFrame::FileDialog()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_dialog_1gad458f5d64710487c7213a4921a5ebc99" kindref="member">dtsgui_fileopen()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of the file dialog. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>path</parametername>
</parameternamelist>
<parameterdescription>
<para>Original path to open dialog in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Suggested name to open. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>filter</parametername>
</parameternamelist>
<parameterdescription>
<para>File namr filter. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to the filename that must be unreferenced. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1192" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1192" bodyend="1195"/>
        <references refid="class_d_t_s_frame_1af996b558ba17ecc23cf6ed1a3d1873fb" compoundref="_d_t_s_frame_8cpp" startline="408" endline="419">DTSFrame::FileDialog</references>
        <references refid="classdtsgui_1a533a6afc9b54ac5055ab1fdbd679188a" compoundref="_d_t_s_app_8cpp" startline="137" endline="139">dtsgui::GetFrame</references>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga126b309803052977061662f97fb9012a" compoundref="wizard_8c" startline="523" endline="541">editsys_wizard</referencedby>
        <referencedby refid="private_8h_1a72af4355dbc5afe93fef750a81a3e572" compoundref="config_8c" startline="27" endline="67">open_config</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_dialog_1gab2431470ff495d71aae8e41368a214cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct basic_auth *</type>
        <definition>struct basic_auth* DTS_C_API::dtsgui_pwdialog</definition>
        <argsstring>(const char *user, const char *passwd, void *data)</argsstring>
        <name>dtsgui_pwdialog</name>
        <param>
          <type>const char *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passwd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Return basic auth reference from a password dialog box. </para>        </briefdescription>
        <detaileddescription>
<para>A dialog box requesting the user name and password is presented to the user. The initial values may be supplied. <simplesect kind="remark"><para>This function is used as a callback for CURL. </para></simplesect>
<simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a5a7ad78662b511e7ef6ac513f8d1a28b" kindref="member">DTSFrame::Passwd()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>user</parametername>
</parameternamelist>
<parameterdescription>
<para>initial username entered into the box. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>passwd</parametername>
</parameternamelist>
<parameterdescription>
<para>the initial password. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>this will always be the application data ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Basic auth reference. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1208" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1208" bodyend="1211"/>
        <references refid="class_d_t_s_frame_1a5a7ad78662b511e7ef6ac513f8d1a28b" compoundref="_d_t_s_frame_8cpp" startline="495" endline="510">DTSFrame::Passwd</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements_1ga557f314ceb047c6d2ee3ec5f40e6b93a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_listbox_add</definition>
        <argsstring>(struct form_item *listbox, const char *text, const char *value)</argsstring>
        <name>dtsgui_listbox_add</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>listbox</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
<para>Add a name / value to the list box for selection. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classform__item_1ad99d224a37a5bc6f99835afb2347fac8" kindref="member">form_item::Append()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listbox</parametername>
</parameternamelist>
<parameterdescription>
<para>A form item containing a listbox or combobox. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>The text appearing on the drop down box. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>The value set when this item is selected. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1219" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1219" bodyend="1221"/>
        <references refid="classform__item_1ad99d224a37a5bc6f99835afb2347fac8" compoundref="pitems_8cpp" startline="155" endline="174">form_item::Append</references>
        <referencedby refid="netconfig_8c_1a53ff57cbb1a4442c4428c95746229150" compoundref="netconfig_8c" startline="37" endline="74">network_config</referencedby>
        <referencedby refid="netconfig_8c_1aaf6857ee640832afc05a9e158faedde3" compoundref="netconfig_8c" startline="372" endline="388">network_modem</referencedby>
        <referencedby refid="netconfig_8c_1a4bab1c305385131091d979ad287b2ea3" compoundref="netconfig_8c" startline="401" endline="444">network_modem_ana</referencedby>
        <referencedby refid="netconfig_8c_1a3a749e8b1e9561bb168ba3aed04444a8" compoundref="netconfig_8c" startline="277" endline="318">network_newwifi</referencedby>
        <referencedby refid="netconfig_8c_1a0b2d5249167dfdc0b972bff2091b5745" compoundref="netconfig_8c" startline="524" endline="563">network_tos</referencedby>
        <referencedby refid="netconfig_8c_1a3a92d505fabcecdf55524fe8b77f08bc" compoundref="netconfig_8c" startline="565" endline="600">network_tos_new</referencedby>
        <referencedby refid="netconfig_8c_1adceac66b5b38e18e528fc5a2adb2d649" compoundref="netconfig_8c" startline="245" endline="275">network_wifi</referencedby>
        <referencedby refid="pbxconfig_8c_1af79c511cab086f9152e08d0625f78b05" compoundref="pbxconfig_8c" startline="220" endline="266">pbxconf_default</referencedby>
        <referencedby refid="pbxconfig_8c_1a836477fa7fce0013efd28a4b955f58b5" compoundref="pbxconfig_8c" startline="134" endline="159">pbxconf_e1</referencedby>
        <referencedby refid="pbxconfig_8c_1a13ef8f931ae62e6036a1ac3e6596a424" compoundref="pbxconfig_8c" startline="195" endline="212">pbxconf_global</referencedby>
        <referencedby refid="pbxconfig_8c_1a17474314ab394325f10da55d073f03d4" compoundref="pbxconfig_8c" startline="279" endline="299">pbxconf_incoming</referencedby>
        <referencedby refid="pbxconfig_8c_1a085f542ab4bb26773f2a68e636a681e9" compoundref="pbxconfig_8c" startline="161" endline="193">pbxconf_mfcr2</referencedby>
        <referencedby refid="pbxconfig_8c_1a02bdd2b74e929bf843bed40de61f9c97" compoundref="pbxconfig_8c" startline="25" endline="105">pbxconf_trunk</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga7436ba5c38bedec1d9ddda07ea99815d" compoundref="testing_8c" startline="100" endline="120">testpanel</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga2385f9d99b5222b879485702af299fd0" compoundref="wizard_8c" startline="260" endline="307">wizz_exten</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gafcf1b2026fe781338918ede3a099a713" compoundref="wizard_8c" startline="311" endline="344">wizz_location</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga4fc4a7cde0492cbde04a4e0804cc81d8" compoundref="wizard_8c" startline="242" endline="256">wizz_network</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gaa274a72a578011082041109b5e2d8b22" compoundref="wizard_8c" startline="359" endline="379">wizz_trunk</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga4663a22f17fb8c01f6058f117ed6c201" compoundref="wizard_8c" startline="383" endline="396">wizz_voip</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements_1gaaa4e4de11048d7e32151628f4428cf3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_listbox_set</definition>
        <argsstring>(struct form_item *listbox, int idx)</argsstring>
        <name>dtsgui_listbox_set</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>listbox</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
<para>Set the selected item on a list box or combobox to the index. </para>        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>listbox</parametername>
</parameternamelist>
<parameterdescription>
<para>A form item containing a listbox or combobox. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>idx</parametername>
</parameternamelist>
<parameterdescription>
<para>the index to set as the selected value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1227" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1227" bodyend="1229"/>
        <references refid="classform__item_1a9f108735a3f81f0f419fd828a29b2938" compoundref="pitems_8cpp" startline="176" endline="186">form_item::SetSelection</references>
        <referencedby refid="netconfig_8c_1a3a749e8b1e9561bb168ba3aed04444a8" compoundref="netconfig_8c" startline="277" endline="318">network_newwifi</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements_1ga6585281832905a2e769f8b0f813a67e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_listbox_addxml</definition>
        <argsstring>(struct form_item *lb, struct xml_doc *xmldoc, const char *xpath, const char *nattr, const char *vattr)</argsstring>
        <name>dtsgui_listbox_addxml</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vattr</declname>
        </param>
        <briefdescription>
<para>Populate a listbox or combobox from a XML path. </para>        </briefdescription>
        <detaileddescription>
<para>A entry is added for each node found using the supplied attributes for displayed text and value <simplesect kind="remark"><para>passing NULL as either or both of the attributes will use the value of the node. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>lb</parametername>
</parameternamelist>
<parameterdescription>
<para>A form item containing a listbox or combobox. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>XML Document to search. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>XML search path. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute whoose value will be used for name on list. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute whoose value will be used for value. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1241" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1241" bodyend="1243"/>
        <references refid="classform__item_1a7bbc5ad6365c6b104f230afb35b0996b" compoundref="pitems_8cpp" startline="225" endline="245">form_item::AppendXML</references>
        <referencedby refid="netconfig_8c_1afbdf0e8165311538e8b408c7ba2fabbf" compoundref="netconfig_8c" startline="446" endline="477">network_adsl_link</referencedby>
        <referencedby refid="netconfig_8c_1aa4d1bbd43067e6a75b7a441658a28646" compoundref="netconfig_8c" startline="479" endline="502">network_adsl_link_new</referencedby>
        <referencedby refid="netconfig_8c_1a53ff57cbb1a4442c4428c95746229150" compoundref="netconfig_8c" startline="37" endline="74">network_config</referencedby>
        <referencedby refid="netconfig_8c_1a3a749e8b1e9561bb168ba3aed04444a8" compoundref="netconfig_8c" startline="277" endline="318">network_newwifi</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_s_t_d_1ga9bbd9bb4aa7a921fc64742ecf3b0f61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_textbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_textbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Place a text element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1acd1b20a134272f1bc2d048d5977a3d3c" kindref="member">DTSPanel::TextBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data to hold a reference of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1253" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1253" bodyend="1256"/>
        <references refid="group___c_o_r_e_1ggaa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" compoundref="dtsgui_8h" startline="50">DTSGUI_FORM_DATA_PTR</references>
        <references refid="class_d_t_s_panel_1acd1b20a134272f1bc2d048d5977a3d3c" compoundref="_d_t_s_panel_8cpp" startline="567" endline="583">DTSPanel::TextBox</references>
        <referencedby refid="netconfig_8c_1aa4d1bbd43067e6a75b7a441658a28646" compoundref="netconfig_8c" startline="479" endline="502">network_adsl_link_new</referencedby>
        <referencedby refid="netconfig_8c_1a8736362ad99edb6b363f2238131368d7" compoundref="netconfig_8c" startline="513" endline="522">network_adsl_user_new</referencedby>
        <referencedby refid="netconfig_8c_1aa9efe8e76bc229a36fa2499c892949ce" compoundref="netconfig_8c" startline="151" endline="161">network_config_dns_domain_new</referencedby>
        <referencedby refid="netconfig_8c_1af6cb7d31e4a663493723310afddf0657" compoundref="netconfig_8c" startline="177" endline="199">network_config_dns_domain_server_new</referencedby>
        <referencedby refid="netconfig_8c_1a298dbf73bc519972483995caa73e6d94" compoundref="netconfig_8c" startline="125" endline="132">network_config_dns_host_new</referencedby>
        <referencedby refid="private_8h_1a3d43e57bb96cf8bd603872099c3bc038" compoundref="netconfig_8c" startline="222" endline="233">network_iface_new_pane</referencedby>
        <referencedby refid="netconfig_8c_1a605df16cf428f6c76fe9b0936203b005" compoundref="netconfig_8c" startline="359" endline="370">network_newroute</referencedby>
        <referencedby refid="netconfig_8c_1a853ca11b890527ee2031a756497e145c" compoundref="netconfig_8c" startline="333" endline="347">network_newwan</referencedby>
        <referencedby refid="netconfig_8c_1a3a749e8b1e9561bb168ba3aed04444a8" compoundref="netconfig_8c" startline="277" endline="318">network_newwifi</referencedby>
        <referencedby refid="netconfig_8c_1a3a92d505fabcecdf55524fe8b77f08bc" compoundref="netconfig_8c" startline="565" endline="600">network_tos_new</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga7436ba5c38bedec1d9ddda07ea99815d" compoundref="testing_8c" startline="100" endline="120">testpanel</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_s_t_d_1ga89eb3889f372aaec58543d51d881c822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_textbox_multi</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_textbox_multi</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Place a multi line text element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1acd1b20a134272f1bc2d048d5977a3d3c" kindref="member">DTSPanel::TextBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data to hold a reference of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1266" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1266" bodyend="1269"/>
        <references refid="group___c_o_r_e_1ggaa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" compoundref="dtsgui_8h" startline="50">DTSGUI_FORM_DATA_PTR</references>
        <references refid="class_d_t_s_panel_1acd1b20a134272f1bc2d048d5977a3d3c" compoundref="_d_t_s_panel_8cpp" startline="567" endline="583">DTSPanel::TextBox</references>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga7436ba5c38bedec1d9ddda07ea99815d" compoundref="testing_8c" startline="100" endline="120">testpanel</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_s_t_d_1ga42a80bcfa5dfb41d87e548eb146261e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_passwdbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_passwdbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Place a password element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1acd1b20a134272f1bc2d048d5977a3d3c" kindref="member">DTSPanel::TextBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>value</parametername>
</parameternamelist>
<parameterdescription>
<para>Initial value of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data to hold a reference of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1279" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1279" bodyend="1282"/>
        <references refid="group___c_o_r_e_1ggaa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" compoundref="dtsgui_8h" startline="50">DTSGUI_FORM_DATA_PTR</references>
        <references refid="class_d_t_s_panel_1acd1b20a134272f1bc2d048d5977a3d3c" compoundref="_d_t_s_panel_8cpp" startline="567" endline="583">DTSPanel::TextBox</references>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_s_t_d_1gad9a5fa9a5623850a3889e305ef3da717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_checkbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *checkval, const char *uncheck, int ischecked, void *data)</argsstring>
        <name>dtsgui_checkbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uncheck</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ischecked</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Place a checkbox element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a1bfea883644cb1052752528b89b8c71f" kindref="member">DTSPanel::CheckBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkval</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of item when checked. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uncheck</parametername>
</parameternamelist>
<parameterdescription>
<para>Value of item when unchecked. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ischecked</parametername>
</parameternamelist>
<parameterdescription>
<para>Set to non zero if item is initially checked. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data to hold a reference of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1294" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1294" bodyend="1297"/>
        <references refid="class_d_t_s_panel_1a1bfea883644cb1052752528b89b8c71f" compoundref="_d_t_s_panel_8cpp" startline="608" endline="626">DTSPanel::CheckBox</references>
        <references refid="group___c_o_r_e_1ggaa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" compoundref="dtsgui_8h" startline="50">DTSGUI_FORM_DATA_PTR</references>
        <referencedby refid="netconfig_8c_1aa9efe8e76bc229a36fa2499c892949ce" compoundref="netconfig_8c" startline="151" endline="161">network_config_dns_domain_new</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga7436ba5c38bedec1d9ddda07ea99815d" compoundref="testing_8c" startline="100" endline="120">testpanel</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_s_t_d_1ga21dbebc529c734dffe528f2b15b2a441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_listbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, void *data)</argsstring>
        <name>dtsgui_listbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Place a listbox element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a08cb04c83c8e5668592bd2f3bacf8267" kindref="member">DTSPanel::ListBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data to hold a reference of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Form item that can be used to add values this must be unreferenced </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1307" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1307" bodyend="1310"/>
        <references refid="group___c_o_r_e_1ggaa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" compoundref="dtsgui_8h" startline="50">DTSGUI_FORM_DATA_PTR</references>
        <references refid="class_d_t_s_panel_1a08cb04c83c8e5668592bd2f3bacf8267" compoundref="_d_t_s_panel_8cpp" startline="648" endline="665">DTSPanel::ListBox</references>
        <referencedby refid="netconfig_8c_1aa4d1bbd43067e6a75b7a441658a28646" compoundref="netconfig_8c" startline="479" endline="502">network_adsl_link_new</referencedby>
        <referencedby refid="netconfig_8c_1a3a749e8b1e9561bb168ba3aed04444a8" compoundref="netconfig_8c" startline="277" endline="318">network_newwifi</referencedby>
        <referencedby refid="netconfig_8c_1a3a92d505fabcecdf55524fe8b77f08bc" compoundref="netconfig_8c" startline="565" endline="600">network_tos_new</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga7436ba5c38bedec1d9ddda07ea99815d" compoundref="testing_8c" startline="100" endline="120">testpanel</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_s_t_d_1ga554b15e578927450a5ee9128483885ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_combobox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, void *data)</argsstring>
        <name>dtsgui_combobox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Place a combobox element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1ad91d3ca25ab8349403efc7cc78cb1869" kindref="member">DTSPanel::ComboBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>User data to hold a reference of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Form item that can be used to add values this must be unreferenced </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1320" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1320" bodyend="1323"/>
        <references refid="class_d_t_s_panel_1ad91d3ca25ab8349403efc7cc78cb1869" compoundref="_d_t_s_panel_8cpp" startline="684" endline="705">DTSPanel::ComboBox</references>
        <references refid="group___c_o_r_e_1ggaa648ae9cc0927fecec3a6f705930f8a9aca76bf5a50c1ed8835755c9385c1beee" compoundref="dtsgui_8h" startline="50">DTSGUI_FORM_DATA_PTR</references>
        <referencedby refid="group___d_t_s-_a_p_p-_test_1ga7436ba5c38bedec1d9ddda07ea99815d" compoundref="testing_8c" startline="100" endline="120">testpanel</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_x_m_l_1ga8eca510dc07eee0cd113f852fe67caa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmltextbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmltextbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Place a XML text element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a2b893b30f6265079a143bb23029aa083" kindref="member">DTSPanel::XMLTextBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath of the element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to create in path if it does not exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to create a filter on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fval</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to equate to filter attr in filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the node to assign value of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1336" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1336" bodyend="1339"/>
        <references refid="class_d_t_s_panel_1a2b893b30f6265079a143bb23029aa083" compoundref="_d_t_s_panel_8cpp" startline="585" endline="598">DTSPanel::XMLTextBox</references>
        <referencedby refid="netconfig_8c_1afbdf0e8165311538e8b408c7ba2fabbf" compoundref="netconfig_8c" startline="446" endline="477">network_adsl_link</referencedby>
        <referencedby refid="netconfig_8c_1aa879445eb24134718f10512cbd22df27" compoundref="netconfig_8c" startline="504" endline="511">network_adsl_user</referencedby>
        <referencedby refid="netconfig_8c_1a53ff57cbb1a4442c4428c95746229150" compoundref="netconfig_8c" startline="37" endline="74">network_config</referencedby>
        <referencedby refid="netconfig_8c_1ae9c5a17913250cf9e849ee49b2398b98" compoundref="netconfig_8c" startline="76" endline="87">network_config_dns</referencedby>
        <referencedby refid="netconfig_8c_1a07f37413fb1c1cb24c6f3a8a2e542114" compoundref="netconfig_8c" startline="138" endline="149">network_config_dns_domain</referencedby>
        <referencedby refid="netconfig_8c_1a85464ec7fa78ad423246f4cd96e69cfc" compoundref="netconfig_8c" startline="163" endline="175">network_config_dns_domain_server</referencedby>
        <referencedby refid="netconfig_8c_1a320c13af10e723f60daea4caa8aa9b50" compoundref="netconfig_8c" startline="89" endline="95">network_config_dns_dyn</referencedby>
        <referencedby refid="netconfig_8c_1ad08cc595d8b15576d51ce580336f6063" compoundref="netconfig_8c" startline="115" endline="123">network_config_dns_host</referencedby>
        <referencedby refid="netconfig_8c_1a035e28f34c903ba37365831f1dc546a0" compoundref="netconfig_8c" startline="97" endline="105">network_config_dns_serv</referencedby>
        <referencedby refid="netconfig_8c_1a9648a33ba3b8a54dc53b527c6604feb5" compoundref="netconfig_8c" startline="107" endline="113">network_config_dns_zone</referencedby>
        <referencedby refid="private_8h_1ab77c80061336502da4c2cc2d2c11f4a0" compoundref="netconfig_8c" startline="201" endline="211">network_iface_pane</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_iface_1gaec69e5698c53680c3551eeb9e05cbaf6" compoundref="interface_8c" startline="164" endline="176">network_iface_pane_cb</referencedby>
        <referencedby refid="netconfig_8c_1aaf6857ee640832afc05a9e158faedde3" compoundref="netconfig_8c" startline="372" endline="388">network_modem</referencedby>
        <referencedby refid="netconfig_8c_1ab761836f12c4ee80260a57451498d48f" compoundref="netconfig_8c" startline="390" endline="399">network_modem_adv</referencedby>
        <referencedby refid="netconfig_8c_1a4bab1c305385131091d979ad287b2ea3" compoundref="netconfig_8c" startline="401" endline="444">network_modem_ana</referencedby>
        <referencedby refid="netconfig_8c_1afd9751515d9c36b70349d2a9ef5fae7f" compoundref="netconfig_8c" startline="349" endline="357">network_route</referencedby>
        <referencedby refid="netconfig_8c_1a0b2d5249167dfdc0b972bff2091b5745" compoundref="netconfig_8c" startline="524" endline="563">network_tos</referencedby>
        <referencedby refid="netconfig_8c_1a7b1e028eec7d055f71cd0b466131fb1e" compoundref="netconfig_8c" startline="320" endline="331">network_wan</referencedby>
        <referencedby refid="netconfig_8c_1adceac66b5b38e18e528fc5a2adb2d649" compoundref="netconfig_8c" startline="245" endline="275">network_wifi</referencedby>
        <referencedby refid="pbxconfig_8c_1aea392efee7b48a143a527ffe383e6d81" compoundref="pbxconfig_8c" startline="214" endline="218">pbxconf_acd</referencedby>
        <referencedby refid="pbxconfig_8c_1a5db8461977ca01a926afa5090e12dcdf" compoundref="pbxconfig_8c" startline="315" endline="322">pbxconf_autoadd</referencedby>
        <referencedby refid="pbxconfig_8c_1af79c511cab086f9152e08d0625f78b05" compoundref="pbxconfig_8c" startline="220" endline="266">pbxconf_default</referencedby>
        <referencedby refid="pbxconfig_8c_1a13ef8f931ae62e6036a1ac3e6596a424" compoundref="pbxconfig_8c" startline="195" endline="212">pbxconf_global</referencedby>
        <referencedby refid="pbxconfig_8c_1a8b33d2f08d418e2e390c0d22555cfba0" compoundref="pbxconfig_8c" startline="268" endline="277">pbxconf_location</referencedby>
        <referencedby refid="pbxconfig_8c_1a085f542ab4bb26773f2a68e636a681e9" compoundref="pbxconfig_8c" startline="161" endline="193">pbxconf_mfcr2</referencedby>
        <referencedby refid="pbxconfig_8c_1a2ac17cfecd9b9824f342ba665392a502" compoundref="pbxconfig_8c" startline="121" endline="132">pbxconf_misdn</referencedby>
        <referencedby refid="pbxconfig_8c_1ae6adb6e74265f4c49f5878c8c6bacec5" compoundref="pbxconfig_8c" startline="301" endline="313">pbxconf_numplan</referencedby>
        <referencedby refid="pbxconfig_8c_1a0f2cc9199cbbf0c942507ee38bbf04d9" compoundref="pbxconfig_8c" startline="107" endline="119">pbxconf_topts</referencedby>
        <referencedby refid="pbxconfig_8c_1a02bdd2b74e929bf843bed40de61f9c97" compoundref="pbxconfig_8c" startline="25" endline="105">pbxconf_trunk</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga34653c75ebbdc91cadc68180a51b121b" compoundref="wizard_8c" startline="348" endline="355">wizz_acd</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gaccc1788f03d17d487ce09a1d07d53018" compoundref="wizard_8c" startline="177" endline="186">wizz_custinfo</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga2d137c5c2ae4b1407da5442477dd2b36" compoundref="wizard_8c" startline="209" endline="216">wizz_dnsinfo</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga488833f1ea62639df39c4cd7662864db" compoundref="wizard_8c" startline="201" endline="205">wizz_dyndns</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga2385f9d99b5222b879485702af299fd0" compoundref="wizard_8c" startline="260" endline="307">wizz_exten</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gafcf1b2026fe781338918ede3a099a713" compoundref="wizard_8c" startline="311" endline="344">wizz_location</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gaf6a04c61f4efb3d8c9581d1ca2a79f7c" compoundref="wizard_8c" startline="190" endline="197">wizz_netinfo</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga4fc4a7cde0492cbde04a4e0804cc81d8" compoundref="wizard_8c" startline="242" endline="256">wizz_network</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga85fecec1da6b92b910c3810a9f0f431c" compoundref="wizard_8c" startline="232" endline="238">wizz_samba</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gaa274a72a578011082041109b5e2d8b22" compoundref="wizard_8c" startline="359" endline="379">wizz_trunk</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga81b5895e97fa4d47dbd829cccffa1b7b" compoundref="wizard_8c" startline="220" endline="228">wizz_x509</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_x_m_l_1ga1e60e1a55957b1055c99df5a45f18bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmltextbox_multi</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmltextbox_multi</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Place a XML multi line text element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a2b893b30f6265079a143bb23029aa083" kindref="member">DTSPanel::XMLTextBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath of the element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to create in path if it does not exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to create a filter on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fval</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to equate to filter attr in filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the node to assign value of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1352" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1352" bodyend="1355"/>
        <references refid="class_d_t_s_panel_1a2b893b30f6265079a143bb23029aa083" compoundref="_d_t_s_panel_8cpp" startline="585" endline="598">DTSPanel::XMLTextBox</references>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gaccc1788f03d17d487ce09a1d07d53018" compoundref="wizard_8c" startline="177" endline="186">wizz_custinfo</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_x_m_l_1gab8e603da01cb2c17d0ecfbbe216ac750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmlpasswdbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlpasswdbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Place a XML password element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a5bbe4bfc295ef7b772c09628e80976c7" kindref="member">DTSPanel::XMLPasswdBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath of the element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to create in path if it does not exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to create a filter on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fval</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to equate to filter attr in filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the node to assign value of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1368" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1368" bodyend="1371"/>
        <references refid="class_d_t_s_panel_1a5bbe4bfc295ef7b772c09628e80976c7" compoundref="_d_t_s_panel_8cpp" startline="604" endline="606">DTSPanel::XMLPasswdBox</references>
        <referencedby refid="pbxconfig_8c_1a13ef8f931ae62e6036a1ac3e6596a424" compoundref="pbxconfig_8c" startline="195" endline="212">pbxconf_global</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_x_m_l_1ga2a2a0a7402e2f1bbbd5eeff3446a08fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmlcheckbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *checkval, const char *uncheckval, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlcheckbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uncheckval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Place a XML checkbox element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a1495f670e901f45cbbc3a4d2c471aa53" kindref="member">DTSPanel::XMLCheckBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>checkval</parametername>
</parameternamelist>
<parameterdescription>
<para>The value will be set to this if checked. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>uncheckval</parametername>
</parameternamelist>
<parameterdescription>
<para>The value will be set to this if unchecked. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath of the element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to create in path if it does not exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to create a filter on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fval</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to equate to filter attr in filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the node to assign value of. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1386" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1386" bodyend="1389"/>
        <references refid="class_d_t_s_panel_1a1495f670e901f45cbbc3a4d2c471aa53" compoundref="_d_t_s_panel_8cpp" startline="628" endline="646">DTSPanel::XMLCheckBox</references>
        <referencedby refid="netconfig_8c_1ae9c5a17913250cf9e849ee49b2398b98" compoundref="netconfig_8c" startline="76" endline="87">network_config_dns</referencedby>
        <referencedby refid="netconfig_8c_1a07f37413fb1c1cb24c6f3a8a2e542114" compoundref="netconfig_8c" startline="138" endline="149">network_config_dns_domain</referencedby>
        <referencedby refid="netconfig_8c_1a320c13af10e723f60daea4caa8aa9b50" compoundref="netconfig_8c" startline="89" endline="95">network_config_dns_dyn</referencedby>
        <referencedby refid="netconfig_8c_1a035e28f34c903ba37365831f1dc546a0" compoundref="netconfig_8c" startline="97" endline="105">network_config_dns_serv</referencedby>
        <referencedby refid="netconfig_8c_1ab761836f12c4ee80260a57451498d48f" compoundref="netconfig_8c" startline="390" endline="399">network_modem_adv</referencedby>
        <referencedby refid="netconfig_8c_1a4bab1c305385131091d979ad287b2ea3" compoundref="netconfig_8c" startline="401" endline="444">network_modem_ana</referencedby>
        <referencedby refid="pbxconfig_8c_1a5db8461977ca01a926afa5090e12dcdf" compoundref="pbxconfig_8c" startline="315" endline="322">pbxconf_autoadd</referencedby>
        <referencedby refid="pbxconfig_8c_1af79c511cab086f9152e08d0625f78b05" compoundref="pbxconfig_8c" startline="220" endline="266">pbxconf_default</referencedby>
        <referencedby refid="pbxconfig_8c_1a836477fa7fce0013efd28a4b955f58b5" compoundref="pbxconfig_8c" startline="134" endline="159">pbxconf_e1</referencedby>
        <referencedby refid="pbxconfig_8c_1a13ef8f931ae62e6036a1ac3e6596a424" compoundref="pbxconfig_8c" startline="195" endline="212">pbxconf_global</referencedby>
        <referencedby refid="pbxconfig_8c_1a17474314ab394325f10da55d073f03d4" compoundref="pbxconfig_8c" startline="279" endline="299">pbxconf_incoming</referencedby>
        <referencedby refid="pbxconfig_8c_1a085f542ab4bb26773f2a68e636a681e9" compoundref="pbxconfig_8c" startline="161" endline="193">pbxconf_mfcr2</referencedby>
        <referencedby refid="pbxconfig_8c_1a2ac17cfecd9b9824f342ba665392a502" compoundref="pbxconfig_8c" startline="121" endline="132">pbxconf_misdn</referencedby>
        <referencedby refid="pbxconfig_8c_1a0f2cc9199cbbf0c942507ee38bbf04d9" compoundref="pbxconfig_8c" startline="107" endline="119">pbxconf_topts</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga34653c75ebbdc91cadc68180a51b121b" compoundref="wizard_8c" startline="348" endline="355">wizz_acd</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga2385f9d99b5222b879485702af299fd0" compoundref="wizard_8c" startline="260" endline="307">wizz_exten</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gafcf1b2026fe781338918ede3a099a713" compoundref="wizard_8c" startline="311" endline="344">wizz_location</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga4fc4a7cde0492cbde04a4e0804cc81d8" compoundref="wizard_8c" startline="242" endline="256">wizz_network</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga85fecec1da6b92b910c3810a9f0f431c" compoundref="wizard_8c" startline="232" endline="238">wizz_samba</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gaa274a72a578011082041109b5e2d8b22" compoundref="wizard_8c" startline="359" endline="379">wizz_trunk</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga4663a22f17fb8c01f6058f117ed6c201" compoundref="wizard_8c" startline="383" endline="396">wizz_voip</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_x_m_l_1ga0f5275b68ac882154ab7b2bf48e47ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_xmllistbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmllistbox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Place a XML listbox element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a03d63a8c380ee62e263d7bc3a3c86396" kindref="member">DTSPanel::XMLListBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath of the element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to create in path if it does not exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to create a filter on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fval</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to equate to filter attr in filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the node to assign value of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Form item that can be used to add values this must be unreferenced </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1403" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1403" bodyend="1406"/>
        <references refid="class_d_t_s_panel_1a03d63a8c380ee62e263d7bc3a3c86396" compoundref="_d_t_s_panel_8cpp" startline="667" endline="682">DTSPanel::XMLListBox</references>
        <referencedby refid="netconfig_8c_1afbdf0e8165311538e8b408c7ba2fabbf" compoundref="netconfig_8c" startline="446" endline="477">network_adsl_link</referencedby>
        <referencedby refid="netconfig_8c_1a53ff57cbb1a4442c4428c95746229150" compoundref="netconfig_8c" startline="37" endline="74">network_config</referencedby>
        <referencedby refid="netconfig_8c_1aaf6857ee640832afc05a9e158faedde3" compoundref="netconfig_8c" startline="372" endline="388">network_modem</referencedby>
        <referencedby refid="netconfig_8c_1a4bab1c305385131091d979ad287b2ea3" compoundref="netconfig_8c" startline="401" endline="444">network_modem_ana</referencedby>
        <referencedby refid="netconfig_8c_1a0b2d5249167dfdc0b972bff2091b5745" compoundref="netconfig_8c" startline="524" endline="563">network_tos</referencedby>
        <referencedby refid="pbxconfig_8c_1af79c511cab086f9152e08d0625f78b05" compoundref="pbxconfig_8c" startline="220" endline="266">pbxconf_default</referencedby>
        <referencedby refid="pbxconfig_8c_1a836477fa7fce0013efd28a4b955f58b5" compoundref="pbxconfig_8c" startline="134" endline="159">pbxconf_e1</referencedby>
        <referencedby refid="pbxconfig_8c_1a13ef8f931ae62e6036a1ac3e6596a424" compoundref="pbxconfig_8c" startline="195" endline="212">pbxconf_global</referencedby>
        <referencedby refid="pbxconfig_8c_1a17474314ab394325f10da55d073f03d4" compoundref="pbxconfig_8c" startline="279" endline="299">pbxconf_incoming</referencedby>
        <referencedby refid="pbxconfig_8c_1a085f542ab4bb26773f2a68e636a681e9" compoundref="pbxconfig_8c" startline="161" endline="193">pbxconf_mfcr2</referencedby>
        <referencedby refid="pbxconfig_8c_1a02bdd2b74e929bf843bed40de61f9c97" compoundref="pbxconfig_8c" startline="25" endline="105">pbxconf_trunk</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga2385f9d99b5222b879485702af299fd0" compoundref="wizard_8c" startline="260" endline="307">wizz_exten</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gafcf1b2026fe781338918ede3a099a713" compoundref="wizard_8c" startline="311" endline="344">wizz_location</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1gaa274a72a578011082041109b5e2d8b22" compoundref="wizard_8c" startline="359" endline="379">wizz_trunk</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga4663a22f17fb8c01f6058f117ed6c201" compoundref="wizard_8c" startline="383" endline="396">wizz_voip</referencedby>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_elements-_x_m_l_1ga9472a3941bf352a063fa5e55a6016fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_xmlcombobox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlcombobox</name>
        <param>
          <type><ref refid="group___c_o_r_e_1ga80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
<para>Place a XML combobox element on the panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a4d294755a98b6194df04292abe18d1b0" kindref="member">DTSPanel::XMLComboBox()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to place element on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Xpath of the element. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Node to create in path if it does not exist. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute to create a filter on. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>fval</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to equate to filter attr in filter. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the node to assign value of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Form item that can be used to add values this must be unreferenced </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1420" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1420" bodyend="1423"/>
        <references refid="class_d_t_s_panel_1a4d294755a98b6194df04292abe18d1b0" compoundref="_d_t_s_panel_8cpp" startline="707" endline="722">DTSPanel::XMLComboBox</references>
        <referencedby refid="netconfig_8c_1adceac66b5b38e18e528fc5a2adb2d649" compoundref="netconfig_8c" startline="245" endline="275">network_wifi</referencedby>
        <referencedby refid="group___d_t_s-_a_p_p-_wizard_1ga4fc4a7cde0492cbde04a4e0804cc81d8" compoundref="wizard_8c" startline="242" endline="256">wizz_network</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Namespace containing exported functions used by C. </para>    </briefdescription>
    <detaileddescription>
<para>These functions should not be used in C++ code use of the native API is recomended.</para><para>Allocate all exported fuctions for C to the namespace <ref refid="namespace_d_t_s___c___a_p_i" kindref="compound">DTS_C_API</ref> Functions in this namespace are wrappers and should not be used in C++ code. </para>    </detaileddescription>
    <location file="/usr/src/dtsapplib/dtsguiapp/src/cxxapi.cpp" line="45"/>
  </compounddef>
</doxygen>
