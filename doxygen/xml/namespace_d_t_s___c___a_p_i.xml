<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.2">
  <compounddef id="namespace_d_t_s___c___a_p_i" kind="namespace">
    <compoundname>DTS_C_API</compoundname>
      <sectiondef kind="var">
      <memberdef kind="variable" id="namespace_d_t_s___c___a_p_i_1a295fb20974bd3ceb8a6d8ed6e13a6c70" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int DTS_C_API::menuid</definition>
        <argsstring></argsstring>
        <name>menuid</name>
        <initializer>= wxID_AUTO_LOWEST</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="120" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="120" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1ab20156180905342ce3bc648253507f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_menuenable</definition>
        <argsstring>(dtsgui_menu dm, int enable)</argsstring>
        <name>dtsgui_menuenable</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dm</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/cxxapi.cpp" line="33" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/cxxapi.cpp" bodystart="33" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gacecdb36b65ac3d5522a419a6b69c9f7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_config</definition>
        <argsstring>(dtsgui_configcb confcallback_cb, void *userdata, struct point wsize, struct point wpos, const char *title, const char *status)</argsstring>
        <name>dtsgui_config</name>
        <param>
          <type><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></type>
          <declname>confcallback_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct <ref refid="structpoint" kindref="compound">point</ref></type>
          <declname>wsize</declname>
        </param>
        <param>
          <type>struct <ref refid="structpoint" kindref="compound">point</ref></type>
          <declname>wpos</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Configure the GUI and create a application frame. </para>        </briefdescription>
        <detaileddescription>
<para>This is the first process required the application is created and the callback is executed.</para><para>Application processing continues until dtsgui_run is executed at this point the call back is executed and proccessing will be passed to the GUI App.</para><para>The userdata is returned in the callback.</para><para>The Callback must return a non zero value to indicat success should the application fail returning 0 will close the application.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_app" kindref="compound">DTSApp</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>confcallback_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>The callback function where processing will continue. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>a refrenced object passed back to the config callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wsize</parametername>
</parameternamelist>
<parameterdescription>
<para>Minimum/Initial size of the application window. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>wpos</parametername>
</parameternamelist>
<parameterdescription>
<para>Application position [Top Left Corner] of application placed on screen. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title displayed on the application bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>Default text displayed on the status bar. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="148" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="148" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga3ac9d5ef153d17266a704a373d591962" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_run</definition>
        <argsstring>(int argc, char **argv)</argsstring>
        <name>dtsgui_run</name>
        <param>
          <type>int</type>
          <declname>argc</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>argv</declname>
        </param>
        <briefdescription>
<para>Configure the GUI and create a application frame. </para>        </briefdescription>
        <detaileddescription>
<para>Pass application processing to the GUI after calling the configure callback.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i_1gacecdb36b65ac3d5522a419a6b69c9f7f" kindref="member">dtsgui_config</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_app" kindref="compound">DTSApp</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>argc</parametername>
</parameternamelist>
<parameterdescription>
<para>Number of paramaters contained in argv. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>argv</parametername>
</parameternamelist>
<parameterdescription>
<para>Array of paramaters to be passed. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Return value from callback function. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="164" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="164" bodyend="166"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gaa224c0a868745526e6ac3c05970471c5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_userdata</definition>
        <argsstring>(struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_userdata</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Obtain a reference for the application userdata. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This reference must be un refferenced.</para></simplesect>
<simplesect kind="see"><para><ref refid="classdtsgui_1a4d5bf22a505defc4ab13178ff95f2b32" kindref="member">dtsgui::GetUserData</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to application user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="177" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="177" bodyend="179"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga529d973a998e39dba025dfcd96a9a706" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setwindow</definition>
        <argsstring>(struct dtsgui *dtsgui, dtsgui_pane p)</argsstring>
        <name>dtsgui_setwindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Set the displayed panel. </para>        </briefdescription>
        <detaileddescription>
<para>Switch the curent pane with the one provided this should not be done and rather use menu callbacks.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a7e9f18961fb55d1b9be667b81681803c" kindref="member">DTSFrame::SetWindow()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to display </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="191" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga4e766a49c1e9eba3f2c2fda47b8166aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_sendevent</definition>
        <argsstring>(struct dtsgui *dtsgui, int eid)</argsstring>
        <name>dtsgui_sendevent</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>eid</declname>
        </param>
        <briefdescription>
<para>Emit a event handled by event callback&apos;s A event is emited and recived by all active handlers The ID can be determined as required. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a63488ecbdbe2770ea7d12ce2b06f1b72" kindref="member">DTSFrame::SendDTSEvent()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>eid</parametername>
</parameternamelist>
<parameterdescription>
<para>Event ID to send </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="203" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="203" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga1734b840fc0696b13d5b616df0ec3bbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setuptoolbar</definition>
        <argsstring>(struct dtsgui *dtsgui, dtsgui_toolbar_create cb, void *data)</argsstring>
        <name>dtsgui_setuptoolbar</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a53eefce4ace6a7d72e49e9ae4c520226" kindref="member">dtsgui_toolbar_create</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Callback to run to create and activate the toolbar. The toolbar has of yet not been wrapped into the C API Its recomended that a C++ object be linked that contains a derived class of wxToolbar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a1fe29f6d56f11d1702a372416a659e3e" kindref="member">DTSFrame::SetupToolbar</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Toolbar create callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be passed to the toolbar </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="217" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="217" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1gafc00c020f324c119956fcc38e7fd55db" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_titleappend</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_titleappend</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Append text to the title enclosed in square brackets Update the main application title bar text. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui_1a9d7432eacf96358d22797b37ee73caed" kindref="member">dtsgui::AppendTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application Data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text to append </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="228" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="228" bodyend="230"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a99f0bbb3bf979d0102b7b19899ad79dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_menuitemenable</definition>
        <argsstring>(dtsgui_menuitem dmi, int enable)</argsstring>
        <name>dtsgui_menuitemenable</name>
        <param>
          <type><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
          <declname>dmi</declname>
        </param>
        <param>
          <type>int</type>
          <declname>enable</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="236" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i_1ga164aa159bc57a744f012b49268796bbe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_set_toolbar</definition>
        <argsstring>(struct dtsgui *dtsgui, int show)</argsstring>
        <name>dtsgui_set_toolbar</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>show</declname>
        </param>
        <briefdescription>
<para>Disable or enable the toolbar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui_1adbf932006dfc6df2266b5fbf34af67ac" kindref="member">dtsgui::ShowToolbar()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>show</parametername>
</parameternamelist>
<parameterdescription>
<para>Display the toolbar if non zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="246" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="246" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
        <definition>dtsgui_menu DTS_C_API::dtsgui_newmenu</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *name)</argsstring>
        <name>dtsgui_newmenu</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
<para>Create a new menu and append it to the menu bar. </para>        </briefdescription>
        <detaileddescription>
<para>A new menu is created and appended to the menu bar the returned value will be passed to menu functions to append items to.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the menu. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="264" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="264" bodyend="267"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gabb8b44357ce2ce4a3fd028939cf8c700" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
        <definition>dtsgui_menuitem DTS_C_API::dtsgui_newmenuitem</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *hint, dtsgui_pane p)</argsstring>
        <name>dtsgui_newmenuitem</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Create a menu item that will activate the pane provided. </para>        </briefdescription>
        <detaileddescription>
<para>this pane needs to be created and not deleted use of this function is discouraged. the callback menu function is recomended where a panel can be dynamically created and returned.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" kindref="member">DTSFrame::NewMenuItem()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" kindref="member">dtsgui_newmenucb()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu where to put append this item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data created on application startup and returned in most callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu hint with a &amp; indicating the highlighted short key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel must be a derived window of <ref refid="class_d_t_s_object" kindref="compound">DTSObject</ref>. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created menu item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="288" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="288" bodyend="291"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1ga045cc441a11f42796d6bd89dfa52e4ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1af59302244664352117c2669055da5850" kindref="member">dtsgui_menuitem</ref></type>
        <definition>dtsgui_menuitem DTS_C_API::dtsgui_newmenucb</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *hint, const char *name, int blank, dtsgui_dynpanel cb, void *data)</argsstring>
        <name>dtsgui_newmenucb</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>hint</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>blank</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a menu item that will call a function with supplied data. </para>        </briefdescription>
        <detaileddescription>
<para>The specified call back will be called passing the application pointer (dtsgui), the name and data ptr supplied. if this function returns a <ref refid="class_d_t_s_object" kindref="compound">DTSObject</ref> pane it will be displayed.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55fe07b66530435bce652e8ab3091707" kindref="member">DTSFrame::NewMenuItem()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a080f931027861c0021f72ac2562b45d7" kindref="member">dtsgui_dynpanel</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu where to put append this item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data created on application startup and returned in most callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>hint</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu hint with a &amp; indicating the highlighted short key. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>displayed on status bar and returned in callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>blank</parametername>
</parameternamelist>
<parameterdescription>
<para>if not zero will blank the display before executing callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback function to execute when selected. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>A ptr to a referenced object. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Created menu item. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="317" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="317" bodyend="320"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gabf67f1b041be315b58ccacc7d193b273" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_exit</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_exit</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Add Menu item that will abort the app without save event been generated. </para>        </briefdescription>
        <detaileddescription>
<para>A menu item will be appended to the supplied menu that when selected will generate a abort event [Alt-F4] confirmation will be requested.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" kindref="member">DTSFrame::CloseMenu()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="337" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="337" bodyend="340"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1ga58e38f8ef567c8f50e15a53507ee4a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_close</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_close</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Add Menu item that will close the app after sending a save event. </para>        </briefdescription>
        <detaileddescription>
<para>A menu item will be appended to the supplied menu that when selected will generate a close/save event confirmation will be requested.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a424fbab6df135ea54b5c62a191e809cd" kindref="member">DTSFrame::CloseMenu()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="357" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="357" bodyend="360"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gaf06c34986c04d800883694733554033e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_about</definition>
        <argsstring>(dtsgui_menu dtsmenu, struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_about</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
<para>Add Menu item will pop up a &quot;about&quot; box. </para>        </briefdescription>
        <detaileddescription>
<para>Open an &quot;about&quot; box using the text supplied.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append about item to </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in box when menu is selected </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="376" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="376" bodyend="379"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_menus_1gaf655828d94de128cfd8269d03d649092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_menusep</definition>
        <argsstring>(dtsgui_menu dtsmenu)</argsstring>
        <name>dtsgui_menusep</name>
        <param>
          <type><ref refid="dtsgui_8h_1afb1e28bd82fd8ea9d43a188c06095682" kindref="member">dtsgui_menu</ref></type>
          <declname>dtsmenu</declname>
        </param>
        <briefdescription>
<para>Add Menu seperator to the menu. </para>        </briefdescription>
        <detaileddescription>
<para>A menu seperation line is appened to the menu.</para><para><simplesect kind="see"><para><ref refid="group___c-_a_p_i-_menus_1gadd0f3eab51bf576378a6438c3982fd48" kindref="member">dtsgui_newmenu()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_frame_1a27cb5c393f6f9bbab0d087db9e6338ce" kindref="member">DTSFrame::NewMenu()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsmenu</parametername>
</parameternamelist>
<parameterdescription>
<para>Menu to append about item to </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The fuction does not return. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="393" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="393" bodyend="396"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gac763bff39863668014931022b469d836" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_panel</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *name, const char *title, int butmask, enum panel_type type, void *userdata)</argsstring>
        <name>dtsgui_panel</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>enum <ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref></type>
          <declname>type</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <briefdescription>
<para>Create a pannel to be displayed. </para>        </briefdescription>
        <detaileddescription>
<para>This function is able to create and return various panels excluding Tab/Tree view panels.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a3b1105fb9c8e3b6909994e7f993eee20" kindref="member">DTSFrame::CreatePane()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a9275874ac61d3750aa677a36da714373" kindref="member">panel_type</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Text used in the status bar when panel is displayed. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title set in the window Top/Middle. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Buttons to be displayed values of panel_buttons or&apos;d together. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>type</parametername>
</parameternamelist>
<parameterdescription>
<para>Type of panel to create [Excludes Tab/Tree Views] </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced Obect passed stored in panel and available in event handlers. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Newly created panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="415" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="415" bodyend="418"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gafb8efe017917a372826f7ddedb0e8bba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_textpane</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *buf)</argsstring>
        <name>dtsgui_textpane</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
<para>Create a text display box with the supplied buffer. </para>        </briefdescription>
        <detaileddescription>
<para>This creates a panel that only contains the supplied buffer Scrollbars are used as required.</para><para>This window is read only.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a036e076a53c67d43204aa636ab26328d" kindref="member">DTSFrame::TextPanel()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on the status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>buf</parametername>
</parameternamelist>
<parameterdescription>
<para>The text displayed in the pane. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New text panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="436" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="436" bodyend="439"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gaa92cb9c6006aaf320e784f04500c3b25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
        <definition>dtsgui_treeview DTS_C_API::dtsgui_treewindow</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, dtsgui_tree_cb tree_cb, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_treewindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" kindref="member">dtsgui_tree_cb</ref></type>
          <declname>tree_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a treepane view. </para>        </briefdescription>
        <detaileddescription>
<para>Create a split window with a tree control on the left and display area on right.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window" kindref="compound">DTSTreeWindow</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a32927ee58215cd957e5134af0f13303f" kindref="member">dtsgui_tree_cb</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a465794df2cb30731dfe34d3e7a4ed368" kindref="member">tree_cbtype</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Aplication data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on the status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tree_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called when a event of tree_cbtype is handled. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML doc struct available in callback&apos;s and for managing XML nodes/panels. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="458" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="458" bodyend="461"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
        <definition>dtsgui_tabview DTS_C_API::dtsgui_tabwindow</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, void *data)</argsstring>
        <name>dtsgui_tabwindow</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a tab view panel. </para>        </briefdescription>
        <detaileddescription>
<para>Create a panel that will place pages as tabs along the top of the display. Clicking on the tab opens the panel in the display area.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed on status bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in the event callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Tab window. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="476" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="476" bodyend="479"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gaaaf93911380c2f40eb8adbdc39ac36ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_nodesetxml</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *newname)</argsstring>
        <name>dtsgui_nodesetxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newname</declname>
        </param>
        <briefdescription>
<para>Update the XML Node with a new name. </para>        </briefdescription>
        <detaileddescription>
<para>This helper function will update the node&apos;s XML after a edit event.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a3a7d1d1ce34864f71d5ffd154ca18210" kindref="member">DTSTreeWindow::UpdateNodeXML()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Treeview node is part of. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>TreeNode to update. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newname</parametername>
</parameternamelist>
<parameterdescription>
<para>Name to update XML node with. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="492" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="492" bodyend="495"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gad91055a12542c30dab4aacbd0761c785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_panel_setxml</definition>
        <argsstring>(dtsgui_pane pane, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_panel_setxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Pass a reference to a XML Doc Structure to the panel. </para>        </briefdescription>
        <detaileddescription>
<para>Assign a reference to a XML Doc to the panel for use latter and with XML controls.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_object_1a1ae63425d8e5770a8b0717f37fd695b2" kindref="member">DTSObject::SetXMLDoc()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to be assigned the ref. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Document to be assigned. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="507" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="507" bodyend="510"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga75c6083aa363922fdf1fd19767eceeea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_doc *</type>
        <definition>struct xml_doc* DTS_C_API::dtsgui_panelxml</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_panelxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Get reference to previously allocated XML Doc. </para>        </briefdescription>
        <detaileddescription>
<para>Obtain a new reference to the xmldoc stored in the panel.</para><para><simplesect kind="note"><para>This must be un refferenced.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_d_t_s_object_1ae177d1cfd85be759810b252b98f2050d" kindref="member">DTSObject::GetXMLDoc()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to obtain the XML Info. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to XML Doc. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="524" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="524" bodyend="527"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga71826ffc718e3dc219e57befdb6f0d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_delpane</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_delpane</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Delete a panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="note"><para>This is unlikly too be needed as the GUI manages panels.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel To Delete. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="536" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="536" bodyend="538"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1gae7cf11b65ccca530aecef7f7daa389e9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_newtabpage</definition>
        <argsstring>(dtsgui_tabview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc, dtsgui_tabpanel_cb cb, void *cdata)</argsstring>
        <name>dtsgui_newtabpage</name>
        <param>
          <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <briefdescription>
<para>Create and append a tab to the view. </para>        </briefdescription>
        <detaileddescription>
<para>Append a tab to the tab view the tab will be configured when it is selected the callback will run to configure it.</para><para><simplesect kind="note"><para>Its also possible to configure the returned panel. </para><simplesectsep/><para>On win32 all tabs are configured when the view is activated.</para></simplesect>
<simplesect kind="see"><para><ref refid="group___c-_a_p_i-_panel-_tab_1ga26ee371ec8b1bed0f4a652eb99e04767" kindref="member">dtsgui_tabpage_insert</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" kindref="member">dtsgui_tabwindow()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" kindref="member">DTSTabWindow::CreateTab()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tabview previously created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the pane Top/Center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of buttons to be placed on the panel and trigger events passed to the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object stored and made available in callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML document stored and made available to XML resources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed to the configuration callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="565" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="565" bodyend="568"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1ga26ee371ec8b1bed0f4a652eb99e04767" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_tabpage_insert</definition>
        <argsstring>(dtsgui_tabview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc, dtsgui_tabpanel_cb cb, void *cdata, int pos, int undo)</argsstring>
        <name>dtsgui_tabpage_insert</name>
        <param>
          <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
        </param>
        <param>
          <type>int</type>
          <declname>undo</declname>
        </param>
        <briefdescription>
<para>Create and append a tab to the view. </para>        </briefdescription>
        <detaileddescription>
<para>Insert a tab at the position specified and recreate the panel at position undo.</para><para><simplesect kind="see"><para>dtsgui_tabpage_newtabpage </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga05cf1592d301351aa838bd23c710f3bb" kindref="member">dtsgui_tabwindow()</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window" kindref="compound">DTSTabWindow</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_tab_window_1aa37d1c10f98b08a6c7b265ecd77e3f1f" kindref="member">DTSTabWindow::CreateTab()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tabview previously created. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the pane Top/Center. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>Mask of buttons to be placed on the panel and trigger events passed to the callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object stored and made available in callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML document stored and made available to XML resources. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed to the configuration callback. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="593" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="593" bodyend="596"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tab_1gad3333a23e28993072b5ef4feed86778c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_newxmltabpane</definition>
        <argsstring>(dtsgui_tabview tabv, dtsgui_pane p, const char *xpath, const char *node, const char *vitem, const char *tattr, dtsgui_tabpane_newdata_cb data_cb, dtsgui_tabpanel_cb cb, void *cdata, struct xml_doc *xmldoc, void *data)</argsstring>
        <name>dtsgui_newxmltabpane</name>
        <param>
          <type><ref refid="dtsgui_8h_1a29c463cda54f69beb273c77e1aa7ccef" kindref="member">dtsgui_tabview</ref></type>
          <declname>tabv</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vitem</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab5e1fa276d48b20d35f4ef20110c39ed" kindref="member">dtsgui_tabpane_newdata_cb</ref></type>
          <declname>data_cb</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1ab65db729662a3b0d109158d2fb51f93c" kindref="member">dtsgui_tabpanel_cb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>cdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Helper function to handle &quot;Adding&quot; a new tab from a existing tab. </para>        </briefdescription>
        <detaileddescription>
<para>This implements the concept of the New button a new panel will be created from the data filled in on the pane this callback is attached too. A new XML node is created and the panel created from this node.</para><para><simplesect kind="note"><para>this callback helper is rather complex.</para></simplesect>
<simplesect kind="see"><para><ref refid="classtab__newpane" kindref="compound">tab_newpane</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tabv</parametername>
</parameternamelist>
<parameterdescription>
<para>Table view the new panel will be added too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel this callback is attached too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the XML node to create in the xpath. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vitem</parametername>
</parameternamelist>
<parameterdescription>
<para>the item in the panel to be used to create the value of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute to be used too create the title in the new pane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to allow setting the data used in pane creation. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referrenced object containing initial callback data. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>XML doc reference for creating the node / panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object made available in callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing is returned the callback is registered on the panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="622" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="621" bodyend="625"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gad71b59e1898bce570cac2acd774f71e3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_treepane</definition>
        <argsstring>(dtsgui_treeview tv, const char *name, int butmask, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_treepane</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>int</type>
          <declname>butmask</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a tree view panel with information. </para>        </briefdescription>
        <detaileddescription>
<para>This will seldom be needed as panels are created and supplied in callbacks.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" kindref="member">DTSTreeWindow::CreatePane()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1a5082bae7f0b5d2b7d715e40450f302ec" kindref="member">panel_buttons</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>name</parametername>
</parameternamelist>
<parameterdescription>
<para>Title placed on the panel top/center </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>butmask</parametername>
</parameternamelist>
<parameterdescription>
<para>A mask of buttons to be placed on the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object available in event callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>XML doc reference used for updating XML elements. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Tree Pane. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="642" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="642" bodyend="645"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gab8713feb542a9bb13f8fe7e3bf568bda" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_treepane_default</definition>
        <argsstring>(dtsgui_treeview tv, dtsgui_treenode node)</argsstring>
        <name>dtsgui_treepane_default</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tv</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <briefdescription>
<para>Create a tree view panel with information. </para>        </briefdescription>
        <detaileddescription>
<para>Create a pane from information obtained from node. Name of node is used for the panel title and a Accept/Undo button.</para><para><simplesect kind="note"><para>if node id is -1 no name/buttons are added the page is blank.</para></simplesect>
<simplesect kind="see"><para><ref refid="class_d_t_s_tree_window_1a7457dc767b9cbc873e0e963644fa1fda" kindref="member">DTSTreeWindow::CreatePane()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tv</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>used as template for panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New Tree Pane. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="661" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="661" bodyend="664"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga550b7516bbb97dd66bc71033e7d996cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
        <definition>dtsgui_treenode DTS_C_API::dtsgui_treecont</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *title, int can_edit, int can_sort, int can_del, int nodeid, dtsgui_treeviewpanel_cb p_cb, void *data)</argsstring>
        <name>dtsgui_treecont</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_edit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_sort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_del</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a container in the tree view. </para>        </briefdescription>
        <detaileddescription>
<para>Create and insert a new folder/container in the tree view with properties / call back. A panel will be created and supplied to the callback too implement on selection.</para><para><simplesect kind="note"><para>The root node is NULL this is the initial container.</para></simplesect>
<simplesect kind="see"><para>DTSTreeWindow::AppendContainer </para><simplesectsep/><para><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree view to add the node too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent node or NULL to create root node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The label shown on the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow editing of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_del</parametername>
</parameternamelist>
<parameterdescription>
<para>Not yet implemented for containers but will allow right click menu to delete. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeid</parametername>
</parameternamelist>
<parameterdescription>
<para>A value passed to the callback as convinence can be any value -1 will cause a blank panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to pass panel for configuration on selection of the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed too callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="687" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="686" bodyend="690"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga0f7146637609d42057e2cd21bd2bf33e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
        <definition>dtsgui_treenode DTS_C_API::dtsgui_treeitem</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_treenode node, const char *title, int can_edit, int can_sort, int can_del, int nodeid, dtsgui_treeviewpanel_cb p_cb, void *data)</argsstring>
        <name>dtsgui_treeitem</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_edit</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_sort</declname>
        </param>
        <param>
          <type>int</type>
          <declname>can_del</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nodeid</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Create a item in a container. </para>        </briefdescription>
        <detaileddescription>
<para>Create and insert a new item in the tree view in the node specified with properties / call back. A panel will be created and supplied to the callback too implement on selection.</para><para><simplesect kind="see"><para>DTSTreeWindow::AppendItem </para><simplesectsep/><para><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>The tree view to add the node too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>The parent node or NULL to create root node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>The label shown on the tree. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_edit</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow editing of this node the XML node will be updated. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>can_del</parametername>
</parameternamelist>
<parameterdescription>
<para>Allow right click menu to delete. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeid</parametername>
</parameternamelist>
<parameterdescription>
<para>A value passed to the callback as convinence can be any value -1 will cause a blank panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback to pass panel for configuration on selection of the item. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced object passed too callbacks. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="711" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="710" bodyend="714"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga55a99744231b294667ece32a1087042f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_newxmltreenode</definition>
        <argsstring>(dtsgui_treeview tree, dtsgui_pane p, dtsgui_treenode tn, const char *xpath, const char *node, const char *vitem, const char *tattr, int nid, int flags, dtsgui_xmltreenode_cb node_cb, void *data, dtsgui_treeviewpanel_cb p_cb)</argsstring>
        <name>dtsgui_newxmltreenode</name>
        <param>
          <type><ref refid="dtsgui_8h_1a91b92f00d06cc6174b8b271fc9f2c241" kindref="member">dtsgui_treeview</ref></type>
          <declname>tree</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vitem</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <param>
          <type>int</type>
          <declname>nid</declname>
        </param>
        <param>
          <type>int</type>
          <declname>flags</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a52992645e33e4d92c8e68c3490239c75" kindref="member">dtsgui_xmltreenode_cb</ref></type>
          <declname>node_cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1a8bf800adcd2392cf7722c3cf2f603f96" kindref="member">dtsgui_treeviewpanel_cb</ref></type>
          <declname>p_cb</declname>
        </param>
        <briefdescription>
<para>Helper function to handle &quot;Adding&quot; a new node from a existing node. </para>        </briefdescription>
        <detaileddescription>
<para>This implements the concept of the New button a new node will be created from the data filled in on the pane this callback is attached too. A new XML node is created and the panel created from this node.</para><para><simplesect kind="see"><para><ref refid="dtsgui_8h_1a7ecd2a00f2306c0b94734a72a7899898" kindref="member">tree_newnode_flags</ref></para></simplesect>
<simplesect kind="note"><para>this callback helper is rather complex.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tree</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree view the new panel will be added too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p</parametername>
</parameternamelist>
<parameterdescription>
<para>The panel this callback is attached too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>the path of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>the name of the XML node to create in the xpath. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>vitem</parametername>
</parameternamelist>
<parameterdescription>
<para>the item in the panel to be used to create the value of the new node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>the attribute to be used too create the title in the new pane. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nid</parametername>
</parameternamelist>
<parameterdescription>
<para>Node id for newly created node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>flags</parametername>
</parameternamelist>
<parameterdescription>
<para>Option flags combined from tree_newnode_flags. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Referenced Object passed to the callbacks. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>p_cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Callback called to configure the panel when it is selected. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Nothing is returned the callback is registered on the panel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="740" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="739" bodyend="743"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gadc59452935e169e8e78c178aed0b77c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_treenodeid</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodeid</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get the node id of a tree node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a9744dc2bb294481c69a55fcdd667b357" kindref="member">DTSDVMListStore::GetNodeID()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree Node to get the node of. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>the user defined tree node ID </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="752" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="752" bodyend="755"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1gaedca58250011ea48c67fbc4faa14278f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_treenodeparent</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodeparent</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get the name of the nodes parent. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a06805bea00fbdbf5df1f995b87897b5e" kindref="member">DTSDVMListStore::GetParentTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Name og the nodes parentI </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="762" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="762" bodyend="765"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga3e6618e889e7b58e3bf2ae3d63332178" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_treenodesetxml</definition>
        <argsstring>(dtsgui_treenode tn, struct xml_node *xn, const char *tattr)</argsstring>
        <name>dtsgui_treenodesetxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>struct xml_node *</type>
          <declname>xn</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>tattr</declname>
        </param>
        <briefdescription>
<para>Add a XML node to the tree node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1aa82d333247a2bf537c3acdeae7635e15" kindref="member">DTSDVMListStore::SetXMLData</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>xn</parametername>
</parameternamelist>
<parameterdescription>
<para>XML node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>tattr</parametername>
</parameternamelist>
<parameterdescription>
<para>Attribute in the XN that represents the title NULL if the value is the title. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="772" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="772" bodyend="775"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1af56a924134315107e80c8b01bfbeee68" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_node *</type>
        <definition>struct xml_node* DTS_C_API::dtsgui_treenodegetxml</definition>
        <argsstring>(dtsgui_treenode tn, char **buf)</argsstring>
        <name>dtsgui_treenodegetxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <param>
          <type>char **</type>
          <declname>buf</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="777" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="777" bodyend="780"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel-_tree_1ga00767aae723dce154065e0bb090c0e70" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_treenodegetdata</definition>
        <argsstring>(dtsgui_treenode tn)</argsstring>
        <name>dtsgui_treenodegetdata</name>
        <param>
          <type><ref refid="dtsgui_8h_1a6529df5f03710b4fec84553e1d7febc5" kindref="member">dtsgui_treenode</ref></type>
          <declname>tn</declname>
        </param>
        <briefdescription>
<para>Get reference for the user data of node. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_d_v_m_list_store_1a35aa2204af134770c1fab2f5426c50a7" kindref="member">DTSDVMListStore::GetUserData()</ref> </para></simplesect>
<simplesect kind="note"><para>This needs to be unreferenced. </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>tn</parametername>
</parameternamelist>
<parameterdescription>
<para>Tree node. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to user data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="788" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="788" bodyend="791"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gaa85445ee6c9a2c24d76824bb67cc2ab2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setevcallback</definition>
        <argsstring>(dtsgui_pane pane, event_callback evcb, void *data)</argsstring>
        <name>dtsgui_setevcallback</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref></type>
          <declname>evcb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set event callback function for panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1ac18de08077529d488ea329a72ee14d98" kindref="member">DTSPanel::SetEventCallback()</ref> </para><simplesectsep/><para><ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref></para></simplesect>
When a event happens the callback is called with the userdata to allow actioning the event.</para><para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to attach callback too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evcb</parametername>
</parameternamelist>
<parameterdescription>
<para>Event callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data supplied in the callback (panel userdata is available in the panel). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="806" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="806" bodyend="809"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga28e2dbe2171ea35e32fa615aca55b934" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmlpanel_update</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_xmlpanel_update</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>update all XML elements in the panel. </para>        </briefdescription>
        <detaileddescription>
<para>All elements on the panel that are XML will have there nodes updated Based on the value of the elements.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1adc5131960a24dfa65adba935a1be0f79" kindref="member">DTSPanel::Update_XML()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i-_panel_1ga4d0d6742f61c91fb590b3728a7229150" kindref="member">dtsgui_pane2post</ref> </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1a7ce048cedd00ee1f1d9ea1c1fd504a6f" kindref="member">DTSPanel::Panel2Post()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="823" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="823" bodyend="826"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga4d0d6742f61c91fb590b3728a7229150" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct curl_post *</type>
        <definition>struct curl_post* DTS_C_API::dtsgui_pane2post</definition>
        <argsstring>(dtsgui_pane p)</argsstring>
        <name>dtsgui_pane2post</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <briefdescription>
<para>Prepare a HTTP POST structure from panel. </para>        </briefdescription>
        <detaileddescription>
<para>Create a HTTP Post structure from the values and names Of elements on a panel this can then be used with curl_post to post to a URL.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1adc5131960a24dfa65adba935a1be0f79" kindref="member">DTSPanel::Update_XML()</ref> </para><simplesectsep/><para>dtsgui_xmlpane_update() </para><simplesectsep/><para><ref refid="class_d_t_s_panel_1a7ce048cedd00ee1f1d9ea1c1fd504a6f" kindref="member">DTSPanel::Panel2Post()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to create from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A CURL HTTP POST Structure. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="841" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="841" bodyend="844"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga6728901f40e67a95bc46150e1cf3c450" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_paneldata</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_paneldata</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
<para>Obtain a reference to the userdata of panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_object_1a5d32407be34aa68ea2b038ede768d50e" kindref="member">DTSObject::GetUserData()</ref>.</para></simplesect>
<simplesect kind="note"><para>this must be un refferenced.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to obtain reference from. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Reference to userdata. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="856" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="856" bodyend="859"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga3f8f0e22fd2ecdcb915ec06851d12e3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_settitle</definition>
        <argsstring>(dtsgui_pane pane, const char *title)</argsstring>
        <name>dtsgui_settitle</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Update the title on the panel if it exists. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a58daeb533cce1e4bdac57118cce7c7ea" kindref="member">DTSPanel::SetTitle()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update title. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>New title to place on panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="866" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="866" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gad561196144c72953e31b83aff17054e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_setstatus</definition>
        <argsstring>(dtsgui_pane pane, const char *status)</argsstring>
        <name>dtsgui_setstatus</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>status</declname>
        </param>
        <briefdescription>
<para>Update the status bar message of panel. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1a03be174c3cb033ba74b6abce543347e3" kindref="member">DTSPanel::SetStatus()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to update title. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>status</parametername>
</parameternamelist>
<parameterdescription>
<para>New status bar message. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="877" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="877" bodyend="880"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1gab2f995a29a5b461ac67c7d9aa7091686" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_configcallback</definition>
        <argsstring>(dtsgui_pane pane, dtsgui_configcb cb, void *data)</argsstring>
        <name>dtsgui_configcallback</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></type>
          <declname>cb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Set config callback function for panel (UNUSED). </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1acdb57729ace5f3c0fc76cce4d41c36cc" kindref="member">DTSPanel::SetConfigCallback()</ref> </para><simplesectsep/><para><ref refid="group___c-_a_p_i_1gad3b80490c86b8275c47382588f2ecfd4" kindref="member">dtsgui_configcb</ref></para></simplesect>
<simplesect kind="note"><para>Not yet implemted who knows maybe it will maybe it wont.</para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to attach callback too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>cb</parametername>
</parameternamelist>
<parameterdescription>
<para>Config callback. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data supplied in the callback (panel userdata is available in the panel). </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="894" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="894" bodyend="897"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga9c1222d2fe8fa5066a2c55e4b71c2cac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct xml_node *</type>
        <definition>struct xml_node* DTS_C_API::dtsgui_panetoxml</definition>
        <argsstring>(dtsgui_pane p, const char *xpath, const char *node, const char *nodeval, const char *attrkey)</argsstring>
        <name>dtsgui_panetoxml</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nodeval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attrkey</declname>
        </param>
        <briefdescription>
<para>Create a node from the elements on the panel. </para>        </briefdescription>
        <detaileddescription>
<para>Using the path information a node is created and elements added as attributes.</para><para><simplesect kind="see"><para><ref refid="class_d_t_s_panel_1ad28f5ed6bd19e9d685a18df8bf568f92" kindref="member">DTSPanel::Panel2XML()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Panel to create nodes from. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xpath</parametername>
</parameternamelist>
<parameterdescription>
<para>Base path to create the nodes in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>node</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the node to add. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>nodeval</parametername>
</parameternamelist>
<parameterdescription>
<para>Name of the element to use as the value of node. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>attrkey</parametername>
</parameternamelist>
<parameterdescription>
<para>Use this item to set the initial attribute and use as key. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New XML Node. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="913" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="913" bodyend="916"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_panel_1ga3f904089ceb734323477f2b3dbac4a41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_rundialog</definition>
        <argsstring>(dtsgui_pane pane, event_callback evcb, void *data)</argsstring>
        <name>dtsgui_rundialog</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type><ref refid="dtsgui_8h_1acfd3355668ba382f87a9aab4ea2c4e9c" kindref="member">event_callback</ref></type>
          <declname>evcb</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
<para>Execute a dialog panel. Pop up and run a dialog pane the result will be obtained int the event handler. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_dialog_1af1e6be7e08913149d128839b7e535cd0" kindref="member">DTSDialog::RunDialog()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>pane</parametername>
</parameternamelist>
<parameterdescription>
<para>Dialog panel to execute. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>evcb</parametername>
</parameternamelist>
<parameterdescription>
<para>Event callback to handle the results in. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>data</parametername>
</parameternamelist>
<parameterdescription>
<para>Data passed to the event handler. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="925" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="925" bodyend="928"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga2e1e2013214ae275160b8c87e6cb3d89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
        <definition>struct dtsgui_wizard* DTS_C_API::dtsgui_newwizard</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title)</argsstring>
        <name>dtsgui_newwizard</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <briefdescription>
<para>Create a new wizard. </para>        </briefdescription>
        <detaileddescription>
<para>A wizard consists of multiple panels linked with back/next controls each panel will need to be procesed on completion.</para><para><simplesect kind="see"><para><ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Aplication data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title shown on title bar of wizard pop up. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New wizard that needs pages added too and run. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="941" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="941" bodyend="943"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga3e76b1ea2eebb91e1d0b5a55649d65e6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
        <definition>dtsgui_pane DTS_C_API::dtsgui_wizard_addpage</definition>
        <argsstring>(struct dtsgui_wizard *dtswiz, const char *title, void *userdata, struct xml_doc *xmldoc)</argsstring>
        <name>dtsgui_wizard_addpage</name>
        <param>
          <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
          <declname>dtswiz</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>userdata</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <briefdescription>
<para>Create a panel appended to the wizard. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="classdtsgui__wizard_1a02984b1d70df5100e8b6200e0bb1b421" kindref="member">dtsgui_wizard::AddPage()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtswiz</parametername>
</parameternamelist>
<parameterdescription>
<para>Wizard to add page too. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>title</parametername>
</parameternamelist>
<parameterdescription>
<para>Title of the new panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>userdata</parametername>
</parameternamelist>
<parameterdescription>
<para>Userdata to be referenced and stored on the panel. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>xmldoc</parametername>
</parameternamelist>
<parameterdescription>
<para>Optional XML Doc to be referenced and stored on the panel. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>New panel that will need to be configured and processed after completion. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="955" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="955" bodyend="957"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_wizard_1ga25174d47f2e9680d41aebdf08ff9b979" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_runwizard</definition>
        <argsstring>(struct dtsgui_wizard *dtswiz)</argsstring>
        <name>dtsgui_runwizard</name>
        <param>
          <type>struct <ref refid="classdtsgui__wizard" kindref="compound">dtsgui_wizard</ref> *</type>
          <declname>dtswiz</declname>
        </param>
        <briefdescription>
<para>Run the wizard. </para>        </briefdescription>
        <detaileddescription>
<para>Pop up the wizard window and open first page on success its required that the panels information be processed. When the wizard is un refferenced the panels are deleted.</para><para><simplesect kind="see"><para><ref refid="classdtsgui__wizard_1ab0554e6b9fe1d2c0419a6659d883edf3" kindref="member">dtsgui_wizard::RunWizard()</ref></para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtswiz</parametername>
</parameternamelist>
<parameterdescription>
<para>Wizard too run. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>non Zero on success. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="970" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="970" bodyend="972"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1gac4185ec71523c1735f1da2cb6dc876d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_progress_start</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text, int maxval, int quit)</argsstring>
        <name>dtsgui_progress_start</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>int</type>
          <declname>maxval</declname>
        </param>
        <param>
          <type>int</type>
          <declname>quit</declname>
        </param>
        <briefdescription>
<para>Initialise the progress dialog Pop up a dialog box that can be updated to showprogress with a optional cancel button. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a55bbe89f24dc6ad3fbe78589bcbd9686" kindref="member">DTSFrame::StartProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>text</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>maxval</parametername>
</parameternamelist>
<parameterdescription>
<para>the maximum expected value to update. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>quit</parametername>
</parameternamelist>
<parameterdescription>
<para>Disable the cancel button if quit is zero. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>zero on failure </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="983" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="983" bodyend="986"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1gabda6276de46c13fb4e0831bb8c8d1ec1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_progress_update</definition>
        <argsstring>(struct dtsgui *dtsgui, int newval, const char *newtext)</argsstring>
        <name>dtsgui_progress_update</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>newval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newtext</declname>
        </param>
        <briefdescription>
<para>Update the progress bar counter This function updates the current progress value and optionally allows setting new displayed text. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a3b057f8c85958444049063e75b602108" kindref="member">DTSFrame::UpdateProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newval</parametername>
</parameternamelist>
<parameterdescription>
<para>Update the counter with this value. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success may fail when the user presses cancel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="998" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="998" bodyend="1001"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1ga7bd617a3f00cb21ae6df7a37eba0dc7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_progress_increment</definition>
        <argsstring>(struct dtsgui *dtsgui, int ival, const char *newtext)</argsstring>
        <name>dtsgui_progress_increment</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ival</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>newtext</declname>
        </param>
        <briefdescription>
<para>Increments the counter by adding to it not setting it. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1a8b1f1c4cf298ef550edec3fa3bf96738" kindref="member">DTSFrame::IncProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>ival</parametername>
</parameternamelist>
<parameterdescription>
<para>Value to increment progress bar. </para></parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>newtext</parametername>
</parameternamelist>
<parameterdescription>
<para>Text displayed in the popup box. </para></parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>0 on success may fail when the user presses cancel. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1010" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1010" bodyend="1013"/>
      </memberdef>
      <memberdef kind="function" id="group___c-_a_p_i-_progress_1ga528f638b6cb7b0d813e350a0b0c7262c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_progress_end</definition>
        <argsstring>(struct dtsgui *dtsgui)</argsstring>
        <name>dtsgui_progress_end</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <briefdescription>
<para>Disable the progress bar. </para>        </briefdescription>
        <detaileddescription>
<para><simplesect kind="see"><para><ref refid="class_d_t_s_frame_1aa33b0ba3ce50a7ec4434a78c2be498b7" kindref="member">DTSFrame::EndProgress()</ref> </para></simplesect>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>dtsgui</parametername>
</parameternamelist>
<parameterdescription>
<para>Application data ptr. </para></parameterdescription>
</parameteritem>
</parameterlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1019" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1019" bodyend="1022"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a557f314ceb047c6d2ee3ec5f40e6b93a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_listbox_add</definition>
        <argsstring>(struct form_item *listbox, const char *text, const char *value)</argsstring>
        <name>dtsgui_listbox_add</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>listbox</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1024" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1024" bodyend="1026"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1aaa4e4de11048d7e32151628f4428cf3e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_listbox_set</definition>
        <argsstring>(struct form_item *listbox, int idx)</argsstring>
        <name>dtsgui_listbox_set</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>listbox</declname>
        </param>
        <param>
          <type>int</type>
          <declname>idx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1028" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1028" bodyend="1030"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a9a2e87bf30be8644653d11754fcb4e26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct bucket_list *</type>
        <definition>struct bucket_list* DTS_C_API::dtsgui_panel_items</definition>
        <argsstring>(dtsgui_pane pane)</argsstring>
        <name>dtsgui_panel_items</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1032" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1032" bodyend="1035"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a30bc1422cf3395b150773320ffda00ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* DTS_C_API::dtsgui_item_data</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_data</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1037" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1037" bodyend="1039"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a2cb1581f47559805b221f9290f9ec83e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_item_name</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_name</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1041" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1041" bodyend="1043"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1adc168d1ed91fc91be2bb7bf7b060dd62" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_item_value</definition>
        <argsstring>(struct form_item *fi)</argsstring>
        <name>dtsgui_item_value</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>fi</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1045" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1045" bodyend="1047"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a6585281832905a2e769f8b0f813a67e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_listbox_addxml</definition>
        <argsstring>(struct form_item *lb, struct xml_doc *xmldoc, const char *xpath, const char *nattr, const char *vattr)</argsstring>
        <name>dtsgui_listbox_addxml</name>
        <param>
          <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
          <declname>lb</declname>
        </param>
        <param>
          <type>struct xml_doc *</type>
          <declname>xmldoc</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>nattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>vattr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1049" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1049" bodyend="1051"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a3af426dd6bf50cb6bd7232c4ea5b92f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_finditem</definition>
        <argsstring>(dtsgui_pane p, const char *name)</argsstring>
        <name>dtsgui_finditem</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1053" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1053" bodyend="1056"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a37f578498eb38e545906898e7250e6bb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_findvalue</definition>
        <argsstring>(dtsgui_pane p, const char *name)</argsstring>
        <name>dtsgui_findvalue</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>p</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1058" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1058" bodyend="1061"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1ab2431470ff495d71aae8e41368a214cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct basic_auth *</type>
        <definition>struct basic_auth* DTS_C_API::dtsgui_pwdialog</definition>
        <argsstring>(const char *user, const char *passwd, void *data)</argsstring>
        <name>dtsgui_pwdialog</name>
        <param>
          <type>const char *</type>
          <declname>user</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>passwd</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1063" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1063" bodyend="1066"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a5761cfa6ab849723e50760a9642efc9f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int DTS_C_API::dtsgui_confirm</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_confirm</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1068" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1068" bodyend="1071"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1ad331a82b0502bea7d78545c6efb72b78" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_alert</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *text)</argsstring>
        <name>dtsgui_alert</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>text</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1073" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1073" bodyend="1076"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1ad2b11bd5e9e51dcba9f53f4969f1f25c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_filesave</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *path, const char *name, const char *filter)</argsstring>
        <name>dtsgui_filesave</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1078" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1078" bodyend="1081"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1ad458f5d64710487c7213a4921a5ebc99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* DTS_C_API::dtsgui_fileopen</definition>
        <argsstring>(struct dtsgui *dtsgui, const char *title, const char *path, const char *name, const char *filter)</argsstring>
        <name>dtsgui_fileopen</name>
        <param>
          <type>struct <ref refid="classdtsgui" kindref="compound">dtsgui</ref> *</type>
          <declname>dtsgui</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>path</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>filter</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1083" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1083" bodyend="1086"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a9bbd9bb4aa7a921fc64742ecf3b0f61d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_textbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_textbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1088" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1088" bodyend="1091"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a89eb3889f372aaec58543d51d881c822" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_textbox_multi</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_textbox_multi</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1093" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1093" bodyend="1096"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a42a80bcfa5dfb41d87e548eb146261e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_passwdbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *value, void *data)</argsstring>
        <name>dtsgui_passwdbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>value</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1098" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1098" bodyend="1101"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1ad9a5fa9a5623850a3889e305ef3da717" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_checkbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *checkval, const char *uncheck, int ischecked, void *data)</argsstring>
        <name>dtsgui_checkbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uncheck</declname>
        </param>
        <param>
          <type>int</type>
          <declname>ischecked</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1103" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1103" bodyend="1106"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a21dbebc529c734dffe528f2b15b2a441" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_listbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, void *data)</argsstring>
        <name>dtsgui_listbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1108" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1108" bodyend="1111"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a554b15e578927450a5ee9128483885ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_combobox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, void *data)</argsstring>
        <name>dtsgui_combobox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1113" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1113" bodyend="1116"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a8eca510dc07eee0cd113f852fe67caa6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmltextbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmltextbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1118" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1118" bodyend="1121"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a1e60e1a55957b1055c99df5a45f18bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmltextbox_multi</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmltextbox_multi</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1123" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1123" bodyend="1126"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1ab8e603da01cb2c17d0ecfbbe216ac750" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmlpasswdbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlpasswdbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1128" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1128" bodyend="1131"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a2a2a0a7402e2f1bbbd5eeff3446a08fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void DTS_C_API::dtsgui_xmlcheckbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *checkval, const char *uncheckval, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlcheckbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>checkval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>uncheckval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1133" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1133" bodyend="1136"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a0f5275b68ac882154ab7b2bf48e47ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_xmllistbox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmllistbox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1138" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1138" bodyend="1141"/>
      </memberdef>
      <memberdef kind="function" id="namespace_d_t_s___c___a_p_i_1a9472a3941bf352a063fa5e55a6016fdc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>struct <ref refid="classform__item" kindref="compound">form_item</ref> *</type>
        <definition>struct form_item* DTS_C_API::dtsgui_xmlcombobox</definition>
        <argsstring>(dtsgui_pane pane, const char *title, const char *name, const char *xpath, const char *node, const char *fattr, const char *fval, const char *attr)</argsstring>
        <name>dtsgui_xmlcombobox</name>
        <param>
          <type><ref refid="dtsgui_8h_1a80d0a6abc3c934c0adc3fca6a1e62438" kindref="member">dtsgui_pane</ref></type>
          <declname>pane</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>title</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>xpath</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>node</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fattr</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>fval</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>attr</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" line="1143" bodyfile="/usr/src/dtsapplib/dtsguiapp/src/wrapper.cpp" bodystart="1143" bodyend="1146"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Namespace containing exported functions used by C. </para>    </briefdescription>
    <detaileddescription>
<para>These functions should not be used in C++ code use of the native API is recomended.</para><para>Allocate all exported fuctions for C to the namespace <ref refid="namespace_d_t_s___c___a_p_i" kindref="compound">DTS_C_API</ref> Functions in this namespace are wrappers and should not be used in C++ code. </para>    </detaileddescription>
    <location file="/usr/src/dtsapplib/dtsguiapp/src/cxxapi.cpp" line="31"/>
  </compounddef>
</doxygen>
